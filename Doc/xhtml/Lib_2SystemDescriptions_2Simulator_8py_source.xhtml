<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/Lib/SystemDescriptions/Simulator.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.4.0</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_ba9856180bcd39f2b51d38e1b9ddb228.xhtml">Lib</a></li><li class="navelem"><a class="el" href="dir_b1cfbe88f76e92679e406af529b188cc.xhtml">SystemDescriptions</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Simulator.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral"> Simulator Base Class for Housekeeping Functions for Simulation</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2021 Nubis Communications, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># Copyright (c) 2018-2020 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">from</span> numpy <span class="keyword">import</span> array</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">from</span> numpy <span class="keyword">import</span> identity</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml">SignalIntegrity.Lib.SystemDescriptions.SystemSParameters</a> <span class="keyword">import</span> SystemSParameters</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Device_1_1Device.xhtml">SignalIntegrity.Lib.SystemDescriptions.Device</a> <span class="keyword">import</span> Device</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices.xhtml">SignalIntegrity.Lib.Devices</a> <span class="keyword">import</span> Open</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices.xhtml">SignalIntegrity.Lib.Devices</a> <span class="keyword">import</span> Thru</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices.xhtml">SignalIntegrity.Lib.Devices</a> <span class="keyword">import</span> Ground</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a> <span class="keyword">import</span> SignalIntegrityExceptionSimulator</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml">Simulator</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml">SystemSParameters</a>,object):</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;Base class for dealing with housekeeping for simulations.&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a2fa2ae61a4511a760e2d2047ec07eb05">__init__</a>(self,sd=None):</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        SystemSParameters.__init__(self,sd)</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml">   36</a></span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a6314085a1d893aac75f45291403f2131">m_ol</a> = sd.m_ol <span class="keywordflow">if</span> hasattr(sd, <span class="stringliteral">&#39;m_ol&#39;</span>) <span class="keywordflow">else</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a2fa2ae61a4511a760e2d2047ec07eb05">   37</a></span>&#160;    <span class="keyword">def </span>Check(self):</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a6314085a1d893aac75f45291403f2131">m_ol</a> <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <span class="keywordflow">raise</span> SignalIntegrityExceptionSimulator(<span class="stringliteral">&#39;no outputs&#39;</span>)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">if</span> len(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ad1c6c6189754b1bb8622c1aca3d6be67">StimsPrime</a>()) == 0:</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="keywordflow">raise</span> SignalIntegrityExceptionSimulator(<span class="stringliteral">&#39;no sources&#39;</span>)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    @property</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a4e93b3fc1994f14f72cdcebbf9b68127">pOutputList</a>(self):</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;property containing list of output waveforms</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">        @return the list of string names of the output waveforms</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a6314085a1d893aac75f45291403f2131">m_ol</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    @pOutputList.setter</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a4e93b3fc1994f14f72cdcebbf9b68127">pOutputList</a>(self,ol=None):</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a4e93b3fc1994f14f72cdcebbf9b68127">   50</a></span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> ol <span class="keywordflow">is</span> <span class="keywordtype">None</span>: self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a6314085a1d893aac75f45291403f2131">m_ol</a> = ol</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ade4e57186554be52881092b572eac2ba">AddVoltageSource</a>(self,Name,Ports):</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Adds a one or two port voltage source to the system.</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral">        @param Name string name of voltage source device.</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">        @param Ports integer number of ports in the voltage source</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">        Ports can be 1 or 2.&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">if</span> Ports == 1: self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a377579b9eda21744cf7c7b48df997367">AddDevice</a>(Name,Ports,Ground(),<span class="stringliteral">&#39;voltage source&#39;</span>)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">elif</span> Ports == 2: self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a377579b9eda21744cf7c7b48df997367">AddDevice</a>(Name,Ports,Thru(),<span class="stringliteral">&#39;voltage source&#39;</span>)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        stimNumber=len(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ad1c6c6189754b1bb8622c1aca3d6be67">StimsPrime</a>())+1</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">for</span> p <span class="keywordflow">in</span> range(Ports): self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a9a01e1f7b412557a004a033def08ffbc">AssignM</a>(Name,p+1,<span class="stringliteral">&#39;m&#39;</span>+str(stimNumber+p))</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ade4e57186554be52881092b572eac2ba">   61</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a85b87f904dc4ef7e38c80612f8da486a">AddCurrentSource</a>(self,Name,Ports):</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Adds a one or two port current source to the system.</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral">        @param Name string name of current source device.</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="stringliteral">        @param Ports integer number of ports in the current source</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="stringliteral">        Ports can be 1 or 2.&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">if</span> Ports == 1: self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a377579b9eda21744cf7c7b48df997367">AddDevice</a>(Name,Ports,Open(),<span class="stringliteral">&#39;current source&#39;</span>)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">elif</span> Ports == 2: self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a377579b9eda21744cf7c7b48df997367">AddDevice</a>(Name,Ports,[[1.,0.],[0.,1.]],<span class="stringliteral">&#39;current source&#39;</span>)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        stimNumber=len(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ad1c6c6189754b1bb8622c1aca3d6be67">StimsPrime</a>())+1</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">for</span> p <span class="keywordflow">in</span> range(Ports): self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a9a01e1f7b412557a004a033def08ffbc">AssignM</a>(Name,p+1,<span class="stringliteral">&#39;m&#39;</span>+str(stimNumber+p))</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">def </span>SourceVector(self):</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a85b87f904dc4ef7e38c80612f8da486a">   71</a></span>&#160;        sv=[]</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">for</span> d <span class="keywordflow">in</span> self:</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">if</span> d.Type == <span class="stringliteral">&#39;current source&#39;</span> <span class="keywordflow">or</span> d.Type == <span class="stringliteral">&#39;voltage source&#39;</span>:</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                sv.append(d.Name)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> sv</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">def </span>SourceToStimsPrimeMatrix(self,symbolic=False,Z0=50.):</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        sv=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ad8b7ec2a10261710afb273126a8d74b4">SourceVector</a>()</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        sp=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ad1c6c6189754b1bb8622c1aca3d6be67">StimsPrime</a>()</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        Z0=<span class="stringliteral">&#39;Z0&#39;</span> <span class="keywordflow">if</span> symbolic <span class="keywordflow">else</span> Z0</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        nZ0=<span class="stringliteral">&#39;-Z0&#39;</span> <span class="keywordflow">if</span> symbolic <span class="keywordflow">else</span> -Z0</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        sm = [[0]*len(sv) <span class="keywordflow">for</span> r <span class="keywordflow">in</span> range(len(sp))]</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">for</span> s <span class="keywordflow">in</span> sv:</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            d=self[self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a8f829e8e789d1684f55a6a6b40d0460e">IndexOfDevice</a>(s)]</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">if</span> d.Type == <span class="stringliteral">&#39;current source&#39;</span>:</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                <span class="keywordflow">if</span> len(d) == 1:</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    sm[sp.index(d[0].M)][sv.index(s)] = Z0</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="keywordflow">elif</span> len(d) == 2:</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    sm[sp.index(d[0].M)][sv.index(s)] = nZ0</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    sm[sp.index(d[1].M)][sv.index(s)] = Z0</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keywordflow">elif</span> d.Type == <span class="stringliteral">&#39;voltage source&#39;</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <span class="keywordflow">if</span> len(d) == 1:</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                    sm[sp.index(d[0].M)][sv.index(s)] = 1.</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <span class="keywordflow">elif</span> len(d) == 2:</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    sm[sp.index(d[0].M)][sv.index(s)] = -1./2.</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    sm[sp.index(d[1].M)][sv.index(s)] = 1./2.</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">return</span> sm</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keyword">def </span>StimsPrime(self):</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        sv=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml#a748d7fffeb96afea363fe2ce1a489d82">StimulusVector</a>()</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        sp=[]</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">for</span> s <span class="keywordflow">in</span> range(len(sv)):</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            sn=<span class="stringliteral">&#39;m&#39;</span>+str(s+1)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">if</span> sn <span class="keywordflow">in</span> sv: sp.append(sn)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">else</span>: <span class="keywordflow">return</span> sp</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">return</span> sp</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">def </span>SIPrime(self,symbolic=False,Left=None,Right=None):</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keyword">from</span> numpy.linalg.linalg <span class="keyword">import</span> LinAlgError</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        n=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml#a47697165b75e2445998fcf009f705f3a">NodeVector</a>()</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        m=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml#a748d7fffeb96afea363fe2ce1a489d82">StimulusVector</a>()</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        mprime=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ad1c6c6189754b1bb8622c1aca3d6be67">StimsPrime</a>()</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">if</span> symbolic: SI=Device.SymbolicMatrix(<span class="stringliteral">&#39;Si&#39;</span>,len(n))</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="comment"># There is a permutation matrix such that SI*PR^T*PR*m</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                <span class="comment"># where PR*m is m\prime and SI*PR^T is Si^\prime</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="comment"># pragma: include outdent</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                PR=array(self.PermutationMatrix([m.index(<span class="stringliteral">&#39;m&#39;</span>+str(c+1))</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                            <span class="keywordflow">for</span> c <span class="keywordflow">in</span> range(len(mprime))], len(n))).transpose()</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <span class="keywordflow">if</span> Right <span class="keywordflow">is</span> <span class="keywordtype">None</span>: Right = PR</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                <span class="keywordflow">else</span>: Right = array(PR).dot(array(Right))</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                <span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral">                @todo Dagger should be called with Left (not None), but when I allow</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="stringliteral">                this, it allows diabolical solutions where ground is not necessarily 0V</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral">                Until I can figure that out and fix it, make it so circuits will fail</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">                without some kind of ground connection.</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">                This is the way it was before Dagger was implemented anyway</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">                &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                SI=self.Dagger(</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    array(identity(len(n)))-array(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml#a60ce3b270f6f66dd0e2fb9f64629f8e6">WeightsMatrix</a>()),</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                    Left=Left,Right=Right).tolist()</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">#                 SiPrime2=(SI*PR).tolist()</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="comment"># pragma: silent exclude indent</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keywordflow">raise</span> SignalIntegrityExceptionSimulator(<span class="stringliteral">&#39;numerical error - cannot invert matrix&#39;</span>)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        SiPrime=[[0]*len(mprime) <span class="keywordflow">for</span> r <span class="keywordflow">in</span> range(len(n))]</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">for</span> c <span class="keywordflow">in</span> range(len(mprime)):</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordflow">for</span> r <span class="keywordflow">in</span> range(len(n)):</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                SiPrime[r][c]=SI[r][m.index(<span class="stringliteral">&#39;m&#39;</span>+str(c+1))]</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">return</span> SiPrime</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keyword">def </span>VoltageExtractionMatrix(self,nl):</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        n=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml#a47697165b75e2445998fcf009f705f3a">NodeVector</a>()</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        result=[[0]*len(n) <span class="keywordflow">for</span> r <span class="keywordflow">in</span> range(len(nl))]</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">for</span> r <span class="keywordflow">in</span> range(len(nl)):</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            dp=self[self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a6e5e0722dbb334bdf62b794cc8bd1314">DeviceNames</a>().index(nl[r][0])][nl[r][1]-1]</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            result[r][n.index(dp.A)]=1</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            result[r][n.index(dp.B)]=1</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">return</span> result</div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml">SignalIntegrity.Lib.SystemDescriptions.Simulator.Simulator</a></div><div class="ttdoc">Base class for dealing with housekeeping for simulations.</div><div class="ttdef"><b>Definition:</b> <a href="Lib_2SystemDescriptions_2Simulator_8py_source.xhtml#l00036">Simulator.py:36</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator_xhtml_a6314085a1d893aac75f45291403f2131"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a6314085a1d893aac75f45291403f2131">SignalIntegrity.Lib.SystemDescriptions.Simulator.Simulator.m_ol</a></div><div class="ttdeci">m_ol</div><div class="ttdef"><b>Definition:</b> <a href="Lib_2SystemDescriptions_2Simulator_8py_source.xhtml#l00039">Simulator.py:39</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription_xhtml_a9a01e1f7b412557a004a033def08ffbc"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a9a01e1f7b412557a004a033def08ffbc">SignalIntegrity.Lib.SystemDescriptions.SystemDescription.SystemDescription.AssignM</a></div><div class="ttdeci">def AssignM(self, DeviceN, DeviceP, MName)</div><div class="ttdoc">Assigns a stimulus to a device port.</div><div class="ttdef"><b>Definition:</b> <a href="SystemDescription_8py_source.xhtml#l00080">SystemDescription.py:80</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription_xhtml_a377579b9eda21744cf7c7b48df997367"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a377579b9eda21744cf7c7b48df997367">SignalIntegrity.Lib.SystemDescriptions.SystemDescription.SystemDescription.AddDevice</a></div><div class="ttdeci">def AddDevice(self, Name, Ports, SParams=None, Type='device')</div><div class="ttdoc">Adds a device to the system.</div><div class="ttdef"><b>Definition:</b> <a href="SystemDescription_8py_source.xhtml#l00064">SystemDescription.py:64</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters_xhtml_a47697165b75e2445998fcf009f705f3a"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml#a47697165b75e2445998fcf009f705f3a">SignalIntegrity.Lib.SystemDescriptions.SystemSParameters.SystemSParameters.NodeVector</a></div><div class="ttdeci">def NodeVector(self)</div><div class="ttdef"><b>Definition:</b> <a href="SystemSParameters_8py_source.xhtml#l00044">SystemSParameters.py:44</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml">SignalIntegrity.Lib.SystemDescriptions.SystemSParameters.SystemSParameters</a></div><div class="ttdoc">base class for housekeeping involving system s-parameters calculations</div><div class="ttdef"><b>Definition:</b> <a href="SystemSParameters_8py_source.xhtml#l00028">SystemSParameters.py:28</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator_xhtml_ad1c6c6189754b1bb8622c1aca3d6be67"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ad1c6c6189754b1bb8622c1aca3d6be67">SignalIntegrity.Lib.SystemDescriptions.Simulator.Simulator.StimsPrime</a></div><div class="ttdeci">def StimsPrime(self)</div><div class="ttdef"><b>Definition:</b> <a href="Lib_2SystemDescriptions_2Simulator_8py_source.xhtml#l00103">Simulator.py:103</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator_xhtml_a4e93b3fc1994f14f72cdcebbf9b68127"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a4e93b3fc1994f14f72cdcebbf9b68127">SignalIntegrity.Lib.SystemDescriptions.Simulator.Simulator.pOutputList</a></div><div class="ttdeci">def pOutputList(self)</div><div class="ttdoc">property containing list of output waveforms</div><div class="ttdef"><b>Definition:</b> <a href="Lib_2SystemDescriptions_2Simulator_8py_source.xhtml#l00050">Simulator.py:50</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription_xhtml_a6e5e0722dbb334bdf62b794cc8bd1314"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a6e5e0722dbb334bdf62b794cc8bd1314">SignalIntegrity.Lib.SystemDescriptions.SystemDescription.SystemDescription.DeviceNames</a></div><div class="ttdeci">def DeviceNames(self)</div><div class="ttdoc">Returns a list of device names in the system.</div><div class="ttdef"><b>Definition:</b> <a href="SystemDescription_8py_source.xhtml#l00087">SystemDescription.py:87</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Exception_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a></div><div class="ttdef"><b>Definition:</b> <a href="Exception_8py_source.xhtml#l00001">Exception.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator_xhtml_a2fa2ae61a4511a760e2d2047ec07eb05"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a2fa2ae61a4511a760e2d2047ec07eb05">SignalIntegrity.Lib.SystemDescriptions.Simulator.Simulator.__init__</a></div><div class="ttdeci">def __init__(self, sd=None)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="Lib_2SystemDescriptions_2Simulator_8py_source.xhtml#l00037">Simulator.py:37</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator_xhtml_ade4e57186554be52881092b572eac2ba"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ade4e57186554be52881092b572eac2ba">SignalIntegrity.Lib.SystemDescriptions.Simulator.Simulator.AddVoltageSource</a></div><div class="ttdeci">def AddVoltageSource(self, Name, Ports)</div><div class="ttdoc">Adds a one or two port voltage source to the system.</div><div class="ttdef"><b>Definition:</b> <a href="Lib_2SystemDescriptions_2Simulator_8py_source.xhtml#l00061">Simulator.py:61</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription_xhtml_a8f829e8e789d1684f55a6a6b40d0460e"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemDescription_1_1SystemDescription.xhtml#a8f829e8e789d1684f55a6a6b40d0460e">SignalIntegrity.Lib.SystemDescriptions.SystemDescription.SystemDescription.IndexOfDevice</a></div><div class="ttdeci">def IndexOfDevice(self, DeviceName)</div><div class="ttdoc">Returns the index of a named device in the system.</div><div class="ttdef"><b>Definition:</b> <a href="SystemDescription_8py_source.xhtml#l00095">SystemDescription.py:95</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices.xhtml">SignalIntegrity.Lib.Devices</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2Devices_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator_xhtml_ad8b7ec2a10261710afb273126a8d74b4"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#ad8b7ec2a10261710afb273126a8d74b4">SignalIntegrity.Lib.SystemDescriptions.Simulator.Simulator.SourceVector</a></div><div class="ttdeci">def SourceVector(self)</div><div class="ttdef"><b>Definition:</b> <a href="Lib_2SystemDescriptions_2Simulator_8py_source.xhtml#l00076">Simulator.py:76</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Device_1_1Device_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Device_1_1Device.xhtml">SignalIntegrity.Lib.SystemDescriptions.Device.Device</a></div><div class="ttdoc">device in system descriptions   a device is fundamentally a list of ports</div><div class="ttdef"><b>Definition:</b> <a href="Lib_2SystemDescriptions_2Device_8py_source.xhtml#l00033">Device.py:33</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters_xhtml_a748d7fffeb96afea363fe2ce1a489d82"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml#a748d7fffeb96afea363fe2ce1a489d82">SignalIntegrity.Lib.SystemDescriptions.SystemSParameters.SystemSParameters.StimulusVector</a></div><div class="ttdeci">def StimulusVector(self)</div><div class="ttdef"><b>Definition:</b> <a href="SystemSParameters_8py_source.xhtml#l00046">SystemSParameters.py:46</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters_xhtml_a60ce3b270f6f66dd0e2fb9f64629f8e6"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1SystemSParameters_1_1SystemSParameters.xhtml#a60ce3b270f6f66dd0e2fb9f64629f8e6">SignalIntegrity.Lib.SystemDescriptions.SystemSParameters.SystemSParameters.WeightsMatrix</a></div><div class="ttdeci">def WeightsMatrix(self, ToN=None, FromN=None)</div><div class="ttdoc">returns a weights matrix</div><div class="ttdef"><b>Definition:</b> <a href="SystemSParameters_8py_source.xhtml#l00056">SystemSParameters.py:56</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator_xhtml_a85b87f904dc4ef7e38c80612f8da486a"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SystemDescriptions_1_1Simulator_1_1Simulator.xhtml#a85b87f904dc4ef7e38c80612f8da486a">SignalIntegrity.Lib.SystemDescriptions.Simulator.Simulator.AddCurrentSource</a></div><div class="ttdeci">def AddCurrentSource(self, Name, Ports)</div><div class="ttdoc">Adds a one or two port current source to the system.</div><div class="ttdef"><b>Definition:</b> <a href="Lib_2SystemDescriptions_2Simulator_8py_source.xhtml#l00071">Simulator.py:71</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
