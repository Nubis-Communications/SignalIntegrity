<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/Lib/FrequencyDomain/FrequencyContent.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.3.3</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_ba9856180bcd39f2b51d38e1b9ddb228.xhtml">Lib</a></li><li class="navelem"><a class="el" href="dir_e337560b59448cd859531e91e49e2676.xhtml">FrequencyDomain</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">FrequencyContent.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral"> Frequency content</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2018 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">import</span> math</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">import</span> cmath</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">from</span> numpy <span class="keyword">import</span> fft</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a> <span class="keyword">import</span> SignalIntegrityExceptionWaveform</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyDomain</a> <span class="keyword">import</span> FrequencyDomain</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.Waveform</a> <span class="keyword">import</span> Waveform</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1SineWaveform_1_1SineWaveform.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.SineWaveform</a> <span class="keyword">import</span> SineWaveform</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1ChirpZTransform_1_1ChirpZTransform.xhtml">SignalIntegrity.Lib.ChirpZTransform.ChirpZTransform</a> <span class="keyword">import</span> CZT</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1TimeDescriptor_1_1TimeDescriptor.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.TimeDescriptor</a> <span class="keyword">import</span> TimeDescriptor</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml">FrequencyContent</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml">FrequencyDomain</a>):</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;Handles frequency content of waveforms.  </span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="stringliteral">    This is the frequency content view of a waveform.  In other words, it assumes that a waveform is an actual waveform and</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">    contains the complex values of sinusoids that, if added together, would make up the waveform.  This is the</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">    opposite of the FrequencyResponse() view.</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">    @see FrequencyResponse</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    R=50.0</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    P=1e-3</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml">   42</a></span>&#160;    LogRP10=10.*math.log10(R*P)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    dB3=20*math.log10(math.sqrt(2))</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    dB6=20*math.log10(0.5)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a6206b0356859e0b87ba95eefb298c2bf">__init__</a>(self,wf,fd=None):</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Constructor</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">        @param wf in instance of class Waveform</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">        @param fd (optional) an instance of class FrequencyList (defaults to None)</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="stringliteral">        @remark initializes itself internally by computing the frequency content of the waveform.</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="stringliteral">        If fd is None then the frequency descriptor is simply the frequency descriptor corresponding to the time</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral">        descriptor of the waveform and the frequency content is computed from the DFT.</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral">        Otherwise, the CZT is used to compute the frequency content and the time descriptor corresponds to the</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">        frequency descriptor.</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">        the time descriptor and frequency descriptor are retained so a waveform can be obtained from the frequency content.</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="stringliteral">        @note the frequency content is scaled differently from the raw DFT or CZT outputs in that the absolute value of each</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="stringliteral">        complex number in the frequency content represents the amplitude of a cosine wave.  This is not true with the raw</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="stringliteral">        DFT output and scaling things this way helps in the proper interpretation of the frequency content without having</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="stringliteral">        to think about the vagaries of the DFT.</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="stringliteral">        @see TimeDescriptor</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="stringliteral">        @see FrequencyList</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="stringliteral">        @see ChirpZTransform</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        td=wf.td</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">if</span> fd <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            X=fft.fft(wf.Values())</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a6206b0356859e0b87ba95eefb298c2bf">   71</a></span>&#160;            K=int(td.K)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            Keven=(K//2)*2 == K</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            fd=td.FrequencyList()</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> fd.EvenlySpaced():</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                <span class="keywordflow">raise</span> SignalIntegrityExceptionWaveform(<span class="stringliteral">&#39;cannot generate frequency content&#39;</span>)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            K=fd.N*2</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            Keven=<span class="keyword">True</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            X=CZT(wf.Values(),td.Fs,0,fd.Fe,fd.N,<span class="keyword">True</span>)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            td=<a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1TimeDescriptor_1_1TimeDescriptor.xhtml">TimeDescriptor</a>(td.H,fd.N*2,fd.Fe*2.)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        FrequencyDomain.__init__(self,fd,[X[n]/K*\</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            (1. <span class="keywordflow">if</span> (n==0 <span class="keywordflow">or</span> ((n==fd.N) <span class="keywordflow">and</span> Keven)) <span class="keywordflow">else</span> 2.)*\</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            cmath.exp(-1j*2.*math.pi*fd[n]*td.H) <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(fd.N+1)])</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>=td</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">Values</a>(self,unit=None):</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;frequency content values</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral">        @param unit (optional) string containing the unit for the values desired.</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">        @return a list of complex values representing the frequency content.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">        @remark</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral">        Valid frequency content units are:\n</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">        - &#39;rms&#39; - the root-mean-squared (rms) value.</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral">        - &#39;dBm&#39; - the values in decibels were 0 dBm corresponds to the voltage needed to deliver</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">        1 mW to a 50 ohm load.  It&#39;s computed as 20*Log(rms)+13.010.</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">        - &#39;dBmPerHz&#39; - the spectral density in dBm/Hz.</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">        If no unit is specified, the complex frequency content is returned.</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">        If no valid frequency content units are found, then it defers to the FrequencyDomain base class.</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral">        @see FrequencyDomain.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">if</span> unit==<span class="stringliteral">&#39;rms&#39;</span>:</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            Keven=(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>.K/2)*2==self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>.K</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            A=FrequencyDomain.Values(self,<span class="stringliteral">&#39;mag&#39;</span>)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">return</span> [A[n]/(1 <span class="keywordflow">if</span> (n==0 <span class="keywordflow">or</span> ((n==self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.N) <span class="keywordflow">and</span> Keven))</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">  107</a></span>&#160;                    <span class="keywordflow">else</span> math.sqrt(2)) <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(A))]</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">elif</span> unit==<span class="stringliteral">&#39;dBm&#39;</span>:</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">return</span> [-3000. <span class="keywordflow">if</span> r &lt; 1e-15 <span class="keywordflow">else</span> 20.*math.log10(r)-self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a87c410651143ae7d050ede0a39430d43">LogRP10</a></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        <span class="keywordflow">for</span> r <span class="keywordflow">in</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">Values</a>(<span class="stringliteral">&#39;rms&#39;</span>)]</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">elif</span> unit==<span class="stringliteral">&#39;dBmPerHz&#39;</span>:</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            Keven=(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>.K/2)*2==self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>.K</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            Deltaf=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.Fe/self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.N</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            adder=-10*math.log10(Deltaf)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            dBm=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">Values</a>(<span class="stringliteral">&#39;dBm&#39;</span>)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">return</span> [dBm[n]+adder+</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    (self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#ac7bfac31cc61c3d482e5db5ea60eefcd">dB3</a> <span class="keywordflow">if</span> (n==0 <span class="keywordflow">or</span> ((n==self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.N) <span class="keywordflow">and</span> Keven))</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                    <span class="keywordflow">else</span> 0) <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(dBm))]</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">else</span>: <span class="keywordflow">return</span> FrequencyDomain.Values(self,unit)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#af833a7687c414346de1e2ffab6b47d5c">Waveform</a>(self,td=None):</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Computes the time-domain waveform using IDFT methods</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="stringliteral">        @param td (optional) instance of class TimeDescriptor declaring the time descriptor of the waveform to produce.</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral">        @return wf instance of class Waveform corresponding to the frequency content.</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="stringliteral">        @note</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral">        If td is None then the time descriptor corresponding to the frequency descriptor is used.\n</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">        The waveform produced is essentially the inverse process of class initialization.\n</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">        @see WaveformFromDefinition()</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        Keven=(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>.K//2)*2==self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>.K</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        X=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">Values</a>()</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        X=[X[n]*self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>.K*\</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            (1. <span class="keywordflow">if</span> (n==0 <span class="keywordflow">or</span> ((n==self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.N) <span class="keywordflow">and</span> Keven)) <span class="keywordflow">else</span> 0.5)*\</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            cmath.exp(1j*2.*math.pi*self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>[n]*self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>.H)</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#af833a7687c414346de1e2ffab6b47d5c">  134</a></span>&#160;            <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.N+1)]</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">if</span> Keven:</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            X2=[X[self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.N-n].conjugate() <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(1,self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.N)]</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            X2=[X[self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.N-n+1].conjugate() <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(1,self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.N+1)]</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        X.extend(X2)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        x=[xk.real <span class="keywordflow">for</span> xk <span class="keywordflow">in</span> fft.ifft(X).tolist()]</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        wf=<a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform.xhtml">Waveform</a>(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>,x)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> td <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            wf=wf.Adapt(td)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">return</span> wf</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a8dfcef6517e6699a8b78a2bf9c796230">WaveformFromDefinition</a>(self,td=None):</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Computes the time-domain waveform using sums of cosines</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="stringliteral">        @param td instance of class TimeDescriptor declaring the time descriptor of the waveform to produce.</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="stringliteral">        @return wf instance of class Waveform corresponding to the frequency content.</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="stringliteral">        @note</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="stringliteral">        If td is None then the time descriptor corresponding to the frequency descriptor is used.\n</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="stringliteral">        The waveform produced is essentially the inverse process of __init__().\n</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="stringliteral">        This function should produce the exact same result as the Waveform() method, and is slow, but clearly</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="stringliteral">        written out to see how the waveform is produced by summing sinusoids.  It used to essentially document</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="stringliteral">        the class.\n</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="stringliteral">        @see Waveform().</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        absX=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">Values</a>(<span class="stringliteral">&#39;mag&#39;</span>)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        theta=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">Values</a>(<span class="stringliteral">&#39;deg&#39;</span>)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        wf=<a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform.xhtml">Waveform</a>(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>.N+1):</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            wf=wf+<a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1SineWaveform_1_1SineWaveform.xhtml">SineWaveform</a>(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>,Frequency=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>[n],</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                Amplitude=absX[n],Phase=theta[n]+90)</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a8dfcef6517e6699a8b78a2bf9c796230">  163</a></span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> td <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            wf=wf.Adapt(td)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">return</span> wf</div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyContent.FrequencyContent</a></div><div class="ttdoc">Handles frequency content of waveforms.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyContent_8py_source.xhtml#l00042">FrequencyContent.py:42</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1SineWaveform_1_1SineWaveform_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1SineWaveform_1_1SineWaveform.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.SineWaveform.SineWaveform</a></div><div class="ttdoc">sinewave waveform</div><div class="ttdef"><b>Definition:</b> <a href="SineWaveform_8py_source.xhtml#l00030">SineWaveform.py:30</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent_xhtml_a87c410651143ae7d050ede0a39430d43"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a87c410651143ae7d050ede0a39430d43">SignalIntegrity.Lib.FrequencyDomain.FrequencyContent.FrequencyContent.LogRP10</a></div><div class="ttdeci">int LogRP10</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyContent_8py_source.xhtml#l00045">FrequencyContent.py:45</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent_xhtml_ac7bfac31cc61c3d482e5db5ea60eefcd"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#ac7bfac31cc61c3d482e5db5ea60eefcd">SignalIntegrity.Lib.FrequencyDomain.FrequencyContent.FrequencyContent.dB3</a></div><div class="ttdeci">int dB3</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyContent_8py_source.xhtml#l00046">FrequencyContent.py:46</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyDomain.FrequencyDomain</a></div><div class="ttdoc">base class for frequency domain elements.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyDomain_8py_source.xhtml#l00035">FrequencyDomain.py:35</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent_xhtml_a8dfcef6517e6699a8b78a2bf9c796230"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a8dfcef6517e6699a8b78a2bf9c796230">SignalIntegrity.Lib.FrequencyDomain.FrequencyContent.FrequencyContent.WaveformFromDefinition</a></div><div class="ttdeci">def WaveformFromDefinition(self, td=None)</div><div class="ttdoc">Computes the time-domain waveform using sums of cosines.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyContent_8py_source.xhtml#l00163">FrequencyContent.py:163</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1TimeDescriptor_1_1TimeDescriptor_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1TimeDescriptor_1_1TimeDescriptor.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.TimeDescriptor.TimeDescriptor</a></div><div class="ttdoc">time-axis for waveforms</div><div class="ttdef"><b>Definition:</b> <a href="TimeDescriptor_8py_source.xhtml#l00028">TimeDescriptor.py:28</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.Waveform.Waveform</a></div><div class="ttdoc">base class for all waveforms</div><div class="ttdef"><b>Definition:</b> <a href="Waveform_8py_source.xhtml#l00035">Waveform.py:35</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Exception_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a></div><div class="ttdef"><b>Definition:</b> <a href="Exception_8py_source.xhtml#l00001">Exception.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent_xhtml_a1473726ef73758eecc3291c232d25d3c"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a1473726ef73758eecc3291c232d25d3c">SignalIntegrity.Lib.FrequencyDomain.FrequencyContent.FrequencyContent.td</a></div><div class="ttdeci">td</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyContent_8py_source.xhtml#l00090">FrequencyContent.py:90</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent_xhtml_a6206b0356859e0b87ba95eefb298c2bf"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a6206b0356859e0b87ba95eefb298c2bf">SignalIntegrity.Lib.FrequencyDomain.FrequencyContent.FrequencyContent.__init__</a></div><div class="ttdeci">def __init__(self, wf, fd=None)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyContent_8py_source.xhtml#l00071">FrequencyContent.py:71</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain_xhtml_a40a26fb5046a51e40dd1b61c78d72ace"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">SignalIntegrity.Lib.FrequencyDomain.FrequencyDomain.FrequencyDomain.m_f</a></div><div class="ttdeci">m_f</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyDomain_8py_source.xhtml#l00042">FrequencyDomain.py:42</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1ChirpZTransform_1_1ChirpZTransform_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1ChirpZTransform_1_1ChirpZTransform.xhtml">SignalIntegrity.Lib.ChirpZTransform.ChirpZTransform</a></div><div class="ttdef"><b>Definition:</b> <a href="ChirpZTransform_8py_source.xhtml#l00001">ChirpZTransform.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent_xhtml_af833a7687c414346de1e2ffab6b47d5c"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#af833a7687c414346de1e2ffab6b47d5c">SignalIntegrity.Lib.FrequencyDomain.FrequencyContent.FrequencyContent.Waveform</a></div><div class="ttdeci">def Waveform(self, td=None)</div><div class="ttdoc">Computes the time-domain waveform using IDFT methods.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyContent_8py_source.xhtml#l00134">FrequencyContent.py:134</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent_xhtml_a3dc7b1e5eba8fb649156094dfdf7a893"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyContent_1_1FrequencyContent.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">SignalIntegrity.Lib.FrequencyDomain.FrequencyContent.FrequencyContent.Values</a></div><div class="ttdeci">def Values(self, unit=None)</div><div class="ttdoc">frequency content values</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyContent_8py_source.xhtml#l00107">FrequencyContent.py:107</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
