<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/App/BathtubCurveDialog.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.3.0</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_970ef3fb0b92f0060bb9423c44cad0f7.xhtml">App</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">BathtubCurveDialog.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1App_1_1BathtubCurveDialog.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">BathtubCurveDialog.py</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"># Copyright (c) 2018 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">import</span> sys</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordflow">if</span> sys.version_info.major &lt; 3:</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">import</span> Tkinter <span class="keyword">as</span> tk</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keyword">import</span> tkMessageBox <span class="keyword">as</span> messagebox</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">from</span> tkinter <span class="keyword">import</span>  messagebox</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> math</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> numpy <span class="keyword">as</span> np</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1PartProperty.xhtml">SignalIntegrity.App.PartProperty</a> <span class="keyword">import</span> PartPropertyDelay,PartPropertyReferenceImpedance</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Files.xhtml">SignalIntegrity.App.Files</a> <span class="keyword">import</span> FileParts</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1MenuSystemHelpers.xhtml">SignalIntegrity.App.MenuSystemHelpers</a> <span class="keyword">import</span> Doer,StatusBar</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1FilePicker.xhtml">SignalIntegrity.App.FilePicker</a> <span class="keyword">import</span> AskOpenFileName,AskSaveAsFilename</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1ToSI.xhtml">SignalIntegrity.App.ToSI</a> <span class="keyword">import</span> ToSI,FromSI</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1SParameterProperties.xhtml">SignalIntegrity.App.SParameterProperties</a> <span class="keyword">import</span> SParameterProperties,SParameterPlotsConfiguration</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1SParameterPropertiesDialog.xhtml">SignalIntegrity.App.SParameterPropertiesDialog</a> <span class="keyword">import</span> SParameterPropertiesDialog</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1InformationMessage.xhtml">SignalIntegrity.App.InformationMessage</a> <span class="keyword">import</span> InformationMessage</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1CalculationPropertiesProject.xhtml">SignalIntegrity.App.CalculationPropertiesProject</a> <span class="keyword">import</span> CalculationPropertySI</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1SParameterViewerPreferencesDialog.xhtml">SignalIntegrity.App.SParameterViewerPreferencesDialog</a> <span class="keyword">import</span> SParameterViewerPreferencesDialog</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform</a> <span class="keyword">import</span> Waveform</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib.xhtml">SignalIntegrity.Lib</a> <span class="keyword">as</span> si</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">class </span>BathtubCurveDialog(tk.Toplevel):</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">def </span>__init__(self, parent, name):</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        tk.Toplevel.__init__(self, parent)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        self.parent=parent</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        self.withdraw()</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        self.name=name</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        self.title(<span class="stringliteral">&#39;Bathtub Curve: &#39;</span>+name)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        self.img = tk.PhotoImage(file=SignalIntegrity.App.IconsBaseDir+<span class="stringliteral">&#39;AppIcon2.gif&#39;</span>)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        self.tk.call(<span class="stringliteral">&#39;wm&#39;</span>, <span class="stringliteral">&#39;iconphoto&#39;</span>, self._w, self.img)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        self.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, self.onClosing)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        self.dialogFrame = tk.Frame(self, borderwidth=5)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        self.dialogFrame.pack(side=tk.TOP,fill=tk.BOTH,expand=tk.YES)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        self.deiconify()</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">def </span>onClosing(self):</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        self.withdraw()</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        self.destroy()</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">def </span>destroy(self):</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        tk.Toplevel.withdraw(self)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        tk.Toplevel.destroy(self)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">def </span>UpdateMeasurements(self,measDict):</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keyword">import</span> matplotlib</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> <span class="stringliteral">&#39;matplotlib.backends&#39;</span> <span class="keywordflow">in</span> sys.modules:</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            matplotlib.use(<span class="stringliteral">&#39;TkAgg&#39;</span>)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keyword">from</span> matplotlib.backends.backend_tkagg <span class="keyword">import</span> FigureCanvasTkAgg</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keyword">from</span> matplotlib.backends.backend_tkagg <span class="keyword">import</span> NavigationToolbar2Tk</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">from</span> matplotlib <span class="keyword">import</span> rcParams</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        rcParams.update({<span class="stringliteral">&#39;figure.autolayout&#39;</span>: <span class="keyword">True</span>})</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keyword">class </span>NavigationToolbar(NavigationToolbar2Tk):</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keyword">def </span>__init__(self, canvas, window,homeCallback=None):</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                NavigationToolbar2Tk.__init__(self,canvas,window)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keyword">from</span> matplotlib.figure <span class="keyword">import</span> Figure</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keyword">from</span> matplotlib.collections <span class="keyword">import</span> LineCollection</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">if</span> (measDict <span class="keywordflow">is</span> <span class="keywordtype">None</span>) <span class="keywordflow">or</span> (<span class="keywordflow">not</span> <span class="stringliteral">&#39;Bathtub&#39;</span> <span class="keywordflow">in</span> measDict.keys()):</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            self.withdraw()</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">return</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        self.dialogFrame.pack_forget()</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        self.dialogFrame = tk.Frame(self, borderwidth=5)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        self.dialogFrame.pack(side=tk.TOP,fill=tk.BOTH,expand=tk.YES)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        leftFrame=tk.Frame(self.dialogFrame)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        leftFrame.pack(side=tk.LEFT,fill=tk.BOTH,expand=tk.YES)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        rightFrame=tk.Frame(self.dialogFrame)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        rightFrame.pack(side=tk.LEFT,fill=tk.BOTH,expand=tk.YES,anchor=tk.NW)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        leftPlotFrame=tk.Frame(leftFrame)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        leftPlotFrame.pack(side=tk.LEFT,fill=tk.BOTH,expand=tk.YES)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        self.leftLabel = tk.Label(leftPlotFrame,fg=<span class="stringliteral">&#39;black&#39;</span>)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        self.leftLabel.pack(fill=tk.X)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        numberOfEyes=len(measDict[<span class="stringliteral">&#39;Eye&#39;</span>])</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        rightPlotFrames=[tk.Frame(rightFrame) <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(numberOfEyes)]</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        self.rightPlotLabels=[<span class="keywordtype">None</span> <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(numberOfEyes)]</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">for</span> e <span class="keywordflow">in</span> range(numberOfEyes):</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            rightPlotFrames[e].pack(side=tk.TOP,fill=tk.BOTH,expand=tk.YES,anchor=tk.NW)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            self.rightPlotLabels[e]=tk.Label(rightPlotFrames[e],fg=<span class="stringliteral">&#39;black&#39;</span>)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            self.rightPlotLabels[e].pack(fill=tk.X)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        plotWidth=<a class="code" href="namespaceSignalIntegrity_1_1App_1_1Preferences.xhtml">SignalIntegrity.App.Preferences</a>[<span class="stringliteral">&#39;Appearance.PlotWidth&#39;</span>]</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        plotHeight=<a class="code" href="namespaceSignalIntegrity_1_1App_1_1Preferences.xhtml">SignalIntegrity.App.Preferences</a>[<span class="stringliteral">&#39;Appearance.PlotHeight&#39;</span>]</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        plotDPI=<a class="code" href="namespaceSignalIntegrity_1_1App_1_1Preferences.xhtml">SignalIntegrity.App.Preferences</a>[<span class="stringliteral">&#39;Appearance.PlotDPI&#39;</span>]</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        self.leftFigure=Figure(figsize=(plotWidth,plotHeight), dpi=plotDPI)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        self.leftPlot=self.leftFigure.add_subplot(111)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        self.leftCanvas=FigureCanvasTkAgg(self.leftFigure, master=leftPlotFrame)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        self.leftCanvas.get_tk_widget().pack(side=tk.TOP, fill=tk.X, expand=1)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        self.leftToolbar = NavigationToolbar( self.leftCanvas, leftPlotFrame ,self.onLeftHome)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        self.leftToolbar.update()</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        self.leftCanvas._tkcanvas.pack(side=tk.TOP, fill=tk.BOTH, expand=1)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        self.leftToolbar.pan()</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        self.rightFigures=[Figure(figsize=(plotWidth,plotHeight), dpi=plotDPI) <span class="keywordflow">for</span> e <span class="keywordflow">in</span> range(numberOfEyes)]</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        self.rightPlots=[<span class="keywordtype">None</span> <span class="keywordflow">for</span> e <span class="keywordflow">in</span> range(numberOfEyes)]</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        self.rightCanvases=[<span class="keywordtype">None</span> <span class="keywordflow">for</span> e <span class="keywordflow">in</span> range(numberOfEyes)]</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        self.rightToolbars = [<span class="keywordtype">None</span> <span class="keywordflow">for</span> e <span class="keywordflow">in</span> range(numberOfEyes)]</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">for</span> e <span class="keywordflow">in</span> range(numberOfEyes):</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            self.rightPlots[e]=self.rightFigures[e].add_subplot(111)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            self.rightCanvases[e]=FigureCanvasTkAgg(self.rightFigures[e], master=rightPlotFrames[e])</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            self.rightCanvases[e].get_tk_widget().pack(side=tk.TOP, fill=tk.X, expand=1)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            self.rightToolbars[e]=NavigationToolbar( self.rightCanvases[e], rightPlotFrames[e] ,self.onRightHome)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            self.rightToolbars[e].update()</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            self.rightCanvases[e]._tkcanvas.pack(side=tk.TOP, fill=tk.BOTH, expand=1)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            self.rightToolbars[e].pan()</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        self.leftPlot.cla()</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">for</span> e <span class="keywordflow">in</span> range(len(self.rightPlots)):</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            self.rightPlots[e].cla()</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Preferences.xhtml">SignalIntegrity.App.Preferences</a>[<span class="stringliteral">&#39;Appearance.PlotCursorValues&#39;</span>]:</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            self.leftPlot.format_coord = <span class="keyword">lambda</span> x, y: <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">for</span> e <span class="keywordflow">in</span> range(len(self.rightPlots)):</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                self.rightPlots[e].format_coord = <span class="keyword">lambda</span> x, y: <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        wf=measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Vertical&#39;</span>][<span class="stringliteral">&#39;Data&#39;</span>]</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        x=wf[<span class="stringliteral">&#39;x&#39;</span>]</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        y=wf[<span class="stringliteral">&#39;y&#39;</span>]</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        self.voltLabel=<span class="stringliteral">&#39; &#39;</span>+ToSI(x[-1],<span class="stringliteral">&#39;V&#39;</span>).split(<span class="stringliteral">&#39; &#39;</span>)[-1]</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        voltLabelDivisor=FromSI(<span class="stringliteral">&#39;1. &#39;</span>+self.voltLabel,<span class="stringliteral">&#39;V&#39;</span>)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        x=[v/voltLabelDivisor <span class="keywordflow">for</span> v <span class="keywordflow">in</span> x]</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        lowerLimit=1e-30</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            wf=measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Vertical&#39;</span>][<span class="stringliteral">&#39;Level&#39;</span>][0][<span class="stringliteral">&#39;LeftEst&#39;</span>][<span class="stringliteral">&#39;Est&#39;</span>][<span class="stringliteral">&#39;Wf&#39;</span>]</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> wf <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                self.leftPlot.semilogy([v/voltLabelDivisor <span class="keywordflow">for</span> v <span class="keywordflow">in</span> wf[<span class="stringliteral">&#39;x&#39;</span>]],wf[<span class="stringliteral">&#39;y&#39;</span>],color=<span class="stringliteral">&#39;green&#39;</span>,linewidth=6)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">except</span> Exception <span class="keyword">as</span> ex:</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            print(ex)</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            wf=measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Vertical&#39;</span>][<span class="stringliteral">&#39;Level&#39;</span>][numberOfEyes][<span class="stringliteral">&#39;RightEst&#39;</span>][<span class="stringliteral">&#39;Est&#39;</span>][<span class="stringliteral">&#39;Wf&#39;</span>]</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> wf <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                self.leftPlot.semilogy([v/voltLabelDivisor <span class="keywordflow">for</span> v <span class="keywordflow">in</span> wf[<span class="stringliteral">&#39;x&#39;</span>]],wf[<span class="stringliteral">&#39;y&#39;</span>],color=<span class="stringliteral">&#39;green&#39;</span>,linewidth=6)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">except</span> Exception <span class="keyword">as</span> ex:</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            print(ex)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">for</span> e <span class="keywordflow">in</span> range(len(measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Vertical&#39;</span>][<span class="stringliteral">&#39;Level&#39;</span>])):</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                wf=measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Vertical&#39;</span>][<span class="stringliteral">&#39;Level&#39;</span>][e][<span class="stringliteral">&#39;RightEst&#39;</span>][<span class="stringliteral">&#39;Est&#39;</span>][<span class="stringliteral">&#39;Wf&#39;</span>]</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> wf <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                    self.leftPlot.semilogy([v/voltLabelDivisor <span class="keywordflow">for</span> v <span class="keywordflow">in</span> wf[<span class="stringliteral">&#39;x&#39;</span>]],wf[<span class="stringliteral">&#39;y&#39;</span>],color=<span class="stringliteral">&#39;green&#39;</span>,linewidth=6)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="keywordflow">except</span> Exception <span class="keyword">as</span> ex:</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                print(ex)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                wf=measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Vertical&#39;</span>][<span class="stringliteral">&#39;Level&#39;</span>][e][<span class="stringliteral">&#39;LeftEst&#39;</span>][<span class="stringliteral">&#39;Est&#39;</span>][<span class="stringliteral">&#39;Wf&#39;</span>]</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> wf <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    self.leftPlot.semilogy([v/voltLabelDivisor <span class="keywordflow">for</span> v <span class="keywordflow">in</span> wf[<span class="stringliteral">&#39;x&#39;</span>]],wf[<span class="stringliteral">&#39;y&#39;</span>],color=<span class="stringliteral">&#39;green&#39;</span>,linewidth=6)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="keywordflow">except</span> Exception <span class="keyword">as</span> ex:</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                print(ex)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="comment"># now, gather all of the curve fits and actual data into probability histograms that span the entire</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="comment"># eye</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">for</span> t <span class="keywordflow">in</span> range(numberOfEyes+1):</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="comment"># probablity histogram</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                yCombo=measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Vertical&#39;</span>][<span class="stringliteral">&#39;Level&#39;</span>][t][<span class="stringliteral">&#39;Hist&#39;</span>]</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                self.leftPlot.semilogy(x,[np.nan <span class="keywordflow">if</span> v &lt; lowerLimit <span class="keywordflow">else</span> v <span class="keywordflow">for</span> v <span class="keywordflow">in</span> yCombo],color=<span class="stringliteral">&#39;green&#39;</span>,linewidth=3)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                <span class="comment"># compute the CDF from the left and the right</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                self.leftPlot.semilogy(x,[np.nan <span class="keywordflow">if</span> v &lt; lowerLimit <span class="keywordflow">else</span> v <span class="keywordflow">for</span> v <span class="keywordflow">in</span> measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Vertical&#39;</span>][<span class="stringliteral">&#39;Level&#39;</span>][t][<span class="stringliteral">&#39;CDFFromLeft&#39;</span>]],color=<span class="stringliteral">&#39;red&#39;</span>)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                self.leftPlot.semilogy(x,[np.nan <span class="keywordflow">if</span> v &lt; lowerLimit <span class="keywordflow">else</span> v <span class="keywordflow">for</span> v <span class="keywordflow">in</span> measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Vertical&#39;</span>][<span class="stringliteral">&#39;Level&#39;</span>][t][<span class="stringliteral">&#39;CDFFromRight&#39;</span>]],color=<span class="stringliteral">&#39;red&#39;</span>)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="keywordflow">except</span> Exception <span class="keyword">as</span> ex:</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                print(ex)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        y=[v <span class="keywordflow">if</span> v != 0 <span class="keywordflow">else</span> np.nan <span class="keywordflow">for</span> v <span class="keywordflow">in</span> y]</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        self.leftPlot.semilogy(x,y,color=<span class="stringliteral">&#39;blue&#39;</span>)</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">for</span> e <span class="keywordflow">in</span> range(len(measDict[<span class="stringliteral">&#39;Eye&#39;</span>])):</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            self.leftPlot.axvline(x=measDict[<span class="stringliteral">&#39;Eye&#39;</span>][e][<span class="stringliteral">&#39;Decision&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>]/voltLabelDivisor, color=<span class="stringliteral">&#39;red&#39;</span>,linestyle=<span class="stringliteral">&#39;--&#39;</span>)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        self.leftLabel.config(text=<span class="stringliteral">&#39;Vertical Bathtub Curve&#39;</span>)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        self.leftPlot.set_ylabel(<span class="stringliteral">&#39;probability&#39;</span>,fontsize=10)</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        self.leftPlot.set_xlabel(<span class="stringliteral">&#39;voltage (&#39;</span>+self.voltLabel+<span class="stringliteral">&#39;)&#39;</span>,fontsize=10)</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        self.leftPlot.grid(<span class="keyword">True</span>, <span class="stringliteral">&#39;both&#39;</span>)</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">for</span> ee <span class="keywordflow">in</span> range(len(measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Horizontal&#39;</span>])):</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            e=numberOfEyes-1-ee</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            wf=measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Horizontal&#39;</span>][e][<span class="stringliteral">&#39;Data&#39;</span>]</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            x=wf.Times()</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            y=wf.Values()</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            self.timeLabel=ToSI(x[-1],<span class="stringliteral">&#39;s&#39;</span>)[-3:]</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            timeLabelDivisor=FromSI(<span class="stringliteral">&#39;1. &#39;</span>+self.timeLabel,<span class="stringliteral">&#39;s&#39;</span>)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            x=[v/timeLabelDivisor <span class="keywordflow">for</span> v <span class="keywordflow">in</span> x]</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            y=[v <span class="keywordflow">if</span> v != 0 <span class="keywordflow">else</span> np.nan <span class="keywordflow">for</span> v <span class="keywordflow">in</span> y]</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            self.rightPlots[ee].semilogy(x,y)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            self.rightPlots[ee].axvline(x=0.0, color=<span class="stringliteral">&#39;red&#39;</span>,linestyle=<span class="stringliteral">&#39;--&#39;</span>)</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            self.rightPlotLabels[ee].config(text=<span class="stringliteral">&#39;Horizontal Bathtub Curve&#39;</span>+(f<span class="stringliteral">&#39; for Eye {e}&#39;</span> <span class="keywordflow">if</span> len(measDict[<span class="stringliteral">&#39;Bathtub&#39;</span>][<span class="stringliteral">&#39;Horizontal&#39;</span>]) &gt; 1 <span class="keywordflow">else</span> <span class="stringliteral">&#39;&#39;</span>))</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            self.rightPlots[ee].set_ylabel(<span class="stringliteral">&#39;probability&#39;</span>,fontsize=10)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            self.rightPlots[ee].set_xlabel(<span class="stringliteral">&#39;time (&#39;</span>+self.timeLabel+<span class="stringliteral">&#39;)&#39;</span>,fontsize=10)</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            self.rightPlots[ee].grid(<span class="keyword">True</span>, <span class="stringliteral">&#39;both&#39;</span>)</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        self.deiconify()</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">def </span>onLeftHome(self):</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keyword">def </span>onRightHome(self):</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">pass</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2TimeDomain_2Waveform_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1Files_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1Files.xhtml">SignalIntegrity.App.Files</a></div><div class="ttdef"><b>Definition:</b> <a href="Files_8py_source.xhtml#l00001">Files.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1CalculationPropertiesProject_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1CalculationPropertiesProject.xhtml">SignalIntegrity.App.CalculationPropertiesProject</a></div><div class="ttdef"><b>Definition:</b> <a href="CalculationPropertiesProject_8py_source.xhtml#l00001">CalculationPropertiesProject.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1SParameterViewerPreferencesDialog_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1SParameterViewerPreferencesDialog.xhtml">SignalIntegrity.App.SParameterViewerPreferencesDialog</a></div><div class="ttdef"><b>Definition:</b> <a href="SParameterViewerPreferencesDialog_8py_source.xhtml#l00001">SParameterViewerPreferencesDialog.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1SParameterProperties_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1SParameterProperties.xhtml">SignalIntegrity.App.SParameterProperties</a></div><div class="ttdef"><b>Definition:</b> <a href="SParameterProperties_8py_source.xhtml#l00001">SParameterProperties.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1PartProperty_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1PartProperty.xhtml">SignalIntegrity.App.PartProperty</a></div><div class="ttdef"><b>Definition:</b> <a href="PartProperty_8py_source.xhtml#l00001">PartProperty.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1Preferences_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1Preferences.xhtml">SignalIntegrity.App.Preferences</a></div><div class="ttdef"><b>Definition:</b> <a href="Preferences_8py_source.xhtml#l00001">Preferences.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1SParameterPropertiesDialog_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1SParameterPropertiesDialog.xhtml">SignalIntegrity.App.SParameterPropertiesDialog</a></div><div class="ttdef"><b>Definition:</b> <a href="SParameterPropertiesDialog_8py_source.xhtml#l00001">SParameterPropertiesDialog.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1ToSI_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1ToSI.xhtml">SignalIntegrity.App.ToSI</a></div><div class="ttdef"><b>Definition:</b> <a href="ToSI_8py_source.xhtml#l00001">ToSI.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1Project_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a></div><div class="ttdef"><b>Definition:</b> <a href="Project_8py_source.xhtml#l00001">Project.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib.xhtml">SignalIntegrity.Lib</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1MenuSystemHelpers_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1MenuSystemHelpers.xhtml">SignalIntegrity.App.MenuSystemHelpers</a></div><div class="ttdef"><b>Definition:</b> <a href="MenuSystemHelpers_8py_source.xhtml#l00001">MenuSystemHelpers.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1FilePicker_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1FilePicker.xhtml">SignalIntegrity.App.FilePicker</a></div><div class="ttdef"><b>Definition:</b> <a href="FilePicker_8py_source.xhtml#l00001">FilePicker.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1InformationMessage_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1InformationMessage.xhtml">SignalIntegrity.App.InformationMessage</a></div><div class="ttdef"><b>Definition:</b> <a href="InformationMessage_8py_source.xhtml#l00001">InformationMessage.py:1</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
