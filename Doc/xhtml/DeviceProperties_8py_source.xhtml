<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/App/DeviceProperties.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.4.0</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_970ef3fb0b92f0060bb9423c44cad0f7.xhtml">App</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">DeviceProperties.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1App_1_1DeviceProperties.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">DeviceProperties.py</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"># Copyright (c) 2021 Nubis Communications, Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2018-2020 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">import</span> os</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">import</span> sys</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keywordflow">if</span> sys.version_info.major &lt; 3:</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keyword">import</span> Tkinter <span class="keyword">as</span> tk</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">import</span> tkMessageBox <span class="keyword">as</span> messagebox</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> copy</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1FilePicker.xhtml">SignalIntegrity.App.FilePicker</a> <span class="keyword">import</span> AskOpenFileName</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Files.xhtml">SignalIntegrity.App.Files</a> <span class="keyword">import</span> FileParts</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1SParameterViewerWindow.xhtml">SignalIntegrity.App.SParameterViewerWindow</a> <span class="keyword">import</span> SParametersDialog</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Simulator.xhtml">SignalIntegrity.App.Simulator</a> <span class="keyword">import</span> SimulatorDialog</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Device.xhtml">SignalIntegrity.App.Device</a> <span class="keyword">import</span> Device</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1VariablesDialog.xhtml">SignalIntegrity.App.VariablesDialog</a> <span class="keyword">import</span> VariablesDialog</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">class </span>DeviceProperty(tk.Frame):</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">def </span>__init__(self,parentFrame,parent,partProperty):</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        tk.Frame.__init__(self,parentFrame)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> partProperty[<span class="stringliteral">&#39;Hidden&#39;</span>]:</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            self.pack(side=tk.TOP,fill=tk.X,expand=tk.YES)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        self.parent=parent</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        self.parentFrame=parentFrame</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        self.device=parent.device</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        self.partProperty=partProperty</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        self.callBack=parent.UpdatePicture</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        self.propertyString=tk.StringVar(value=str(self.partProperty.PropertyString(stype=<span class="stringliteral">&#39;entry&#39;</span>)))</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        self.propertyVisible=tk.IntVar(value=int(self.partProperty[<span class="stringliteral">&#39;Visible&#39;</span>]))</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        self.keywordVisible=tk.IntVar(value=int(self.partProperty[<span class="stringliteral">&#39;KeywordVisible&#39;</span>]))</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        propertyVisibleCheckBox = tk.Checkbutton(self,variable=self.propertyVisible,command=self.onPropertyVisible)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        propertyVisibleCheckBox.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        keywordVisibleCheckBox = tk.Checkbutton(self,variable=self.keywordVisible,command=self.onKeywordVisible)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        keywordVisibleCheckBox.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        propertyLabel = tk.Label(self,width=35,text=self.partProperty[<span class="stringliteral">&#39;Description&#39;</span>]+<span class="stringliteral">&#39;: &#39;</span>,anchor=<span class="stringliteral">&#39;e&#39;</span>)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        propertyLabel.pack(side=tk.LEFT, expand=tk.NO, fill=tk.X)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">if</span> self.partProperty[<span class="stringliteral">&#39;Type&#39;</span>]==<span class="stringliteral">&#39;enum&#39;</span>:</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            self.propertyEntry = tk.OptionMenu(self,self.propertyString,*self.partProperty.validEntries,command=self.onEntered)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            self.propertyEntry = tk.Entry(self,textvariable=self.propertyString)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        self.propertyEntry.config(width=15)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        self.propertyEntry.bind(<span class="stringliteral">&#39;&lt;Return&gt;&#39;</span>,self.onEntered)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        self.propertyEntry.bind(<span class="stringliteral">&#39;&lt;Tab&gt;&#39;</span>,self.onEntered)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        self.propertyEntry.bind(<span class="stringliteral">&#39;&lt;Button-1&gt;&#39;</span>,self.onTouched)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        self.propertyEntry.bind(<span class="stringliteral">&#39;&lt;Double-Button-1&gt;&#39;</span>,self.onCleared)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        self.propertyEntry.bind(<span class="stringliteral">&#39;&lt;Button-3&gt;&#39;</span>,self.onUntouchedLoseFocus)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        self.propertyEntry.bind(<span class="stringliteral">&#39;&lt;Escape&gt;&#39;</span>,self.onUntouchedLoseFocus)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        self.propertyEntry.bind(<span class="stringliteral">&#39;&lt;FocusOut&gt;&#39;</span>,self.onUntouched)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        self.propertyEntry.pack(side=tk.LEFT, expand=tk.YES, fill=tk.X)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">if</span> self.partProperty[<span class="stringliteral">&#39;Type&#39;</span>] == <span class="stringliteral">&#39;file&#39;</span>:</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            self.propertyFileBrowseButton = tk.Button(self,text=<span class="stringliteral">&#39;browse&#39;</span>,command=self.onFileBrowse)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            self.propertyFileBrowseButton.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">if</span> self.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] <span class="keywordflow">in</span> [<span class="stringliteral">&#39;filename&#39;</span>,<span class="stringliteral">&#39;waveformfilename&#39;</span>,<span class="stringliteral">&#39;errorterms&#39;</span>]:</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                self.propertyFileViewButton = tk.Button(self,text=<span class="stringliteral">&#39;view&#39;</span>,command=self.onFileView)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                self.propertyFileViewButton.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">def </span>onFileBrowse(self):</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="comment"># this is a seemingly ugly workaround</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment"># I do this because when you change the number of ports and then touch the file</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="comment"># browse button, the ports are updated after this call based on the button press.</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="comment"># without this ugly thing, the file extension reflects the wrong number of ports</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="comment"># until the next time you press the button, when it is right.</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="comment"># This workaround forces the ports to be updated now.</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">for</span> pp <span class="keywordflow">in</span> range(len(self.parent.device.propertiesList)):</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">if</span> self.parent.device.propertiesList[pp][<span class="stringliteral">&#39;PropertyName&#39;</span>] == <span class="stringliteral">&#39;ports&#39;</span>:</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                self.parent.propertyFrameList[pp].onUntouched(<span class="keywordtype">None</span>)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="comment"># end of ugly workaround</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        self.callBack()</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">if</span> self.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] <span class="keywordflow">in</span> [<span class="stringliteral">&#39;filename&#39;</span>,<span class="stringliteral">&#39;std&#39;</span>]:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            extension=<span class="stringliteral">&#39;.s&#39;</span>+self.device[<span class="stringliteral">&#39;ports&#39;</span>].PropertyString(stype=<span class="stringliteral">&#39;raw&#39;</span>)+<span class="stringliteral">&#39;p&#39;</span>,<span class="stringliteral">&#39;.S&#39;</span>+self.device[<span class="stringliteral">&#39;ports&#39;</span>].PropertyString(stype=<span class="stringliteral">&#39;raw&#39;</span>)+<span class="stringliteral">&#39;P&#39;</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            filetypename=<span class="stringliteral">&#39;s-parameters&#39;</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">elif</span> self.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] == <span class="stringliteral">&#39;waveformfilename&#39;</span>:</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            extension=(<span class="stringliteral">&#39;.txt&#39;</span>,<span class="stringliteral">&#39;.trc&#39;</span>)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            filetypename=<span class="stringliteral">&#39;waveforms&#39;</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">elif</span> self.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] == <span class="stringliteral">&#39;errorterms&#39;</span>:</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            extension=(<span class="stringliteral">&#39;.cal&#39;</span>)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            filetypename=<span class="stringliteral">&#39;calibration file&#39;</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">elif</span> self.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] == <span class="stringliteral">&#39;wfilename&#39;</span>:</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            extension=(<span class="stringliteral">&#39;.txt&#39;</span>)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            filetypename=<span class="stringliteral">&#39;w element file&#39;</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            extension=(<span class="stringliteral">&#39;&#39;</span>)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            filetypename=<span class="stringliteral">&#39;all&#39;</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        currentFileParts=FileParts(self.partProperty.PropertyString(stype=<span class="stringliteral">&#39;raw&#39;</span>))</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">if</span> currentFileParts.filename==<span class="stringliteral">&#39;&#39;</span>:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            initialDirectory=self.parent.parent.parent.fileparts.AbsoluteFilePath()</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            initialFile=<span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            initialDirectory=currentFileParts.AbsoluteFilePath()</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordflow">if</span> currentFileParts.fileext <span class="keywordflow">in</span> [<span class="stringliteral">&#39;.si&#39;</span>,extension[0]]:</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                initialFile=currentFileParts.FileNameWithExtension()</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                initialFile=currentFileParts.filename+extension[0]</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        filename=AskOpenFileName(parent=self,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                 filetypes=[(filetypename,extension),(<span class="stringliteral">&#39;project&#39;</span>,<span class="stringliteral">&#39;.si&#39;</span>)],</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                 initialdir=initialDirectory,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                 initialfile=initialFile)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">if</span> filename <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            filename=<span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">if</span> isinstance(filename,tuple):</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            filename=<span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        filename=str(filename)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">if</span> filename != <span class="stringliteral">&#39;&#39;</span>:</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            filename=FileParts(filename).FullFilePathExtension()</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            self.propertyString.set(filename)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            self.partProperty.SetValueFromString(self.propertyString.get())</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            self.callBack()</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">if</span> self.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] == <span class="stringliteral">&#39;waveformfilename&#39;</span>:</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            filename=self.partProperty.GetValue()</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            isProject=FileParts(filename).fileext == <span class="stringliteral">&#39;.si&#39;</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">for</span> propertyFrame <span class="keywordflow">in</span> self.parent.propertyFrameList:</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="keywordflow">if</span> propertyFrame.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>]==<span class="stringliteral">&#39;wfprojname&#39;</span>:</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                    propertyFrame.partProperty[<span class="stringliteral">&#39;Hidden&#39;</span>]=<span class="keywordflow">not</span> isProject</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        self.callBack()</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keyword">def </span>onFileView(self):</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        self.parentFrame.focus()</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        filename=self.partProperty.GetValue()</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">if</span> filename != <span class="stringliteral">&#39;&#39;</span>:</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib.xhtml">SignalIntegrity.Lib</a> <span class="keyword">as</span> si</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordflow">if</span> FileParts(filename).fileext == <span class="stringliteral">&#39;.si&#39;</span>:</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="keyword">def </span>fileTreatment(value,typeString):</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    <span class="keywordflow">if</span> typeString == <span class="stringliteral">&#39;file&#39;</span>:</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                            value=os.path.relpath(value, os.path.dirname(filename)).replace(<span class="stringliteral">&#39;\\&#39;</span>,<span class="stringliteral">&#39;/&#39;</span>)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                        <span class="keywordflow">except</span> ValueError: <span class="comment"># occurs when drive name is different</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                            value=value.replace(<span class="stringliteral">&#39;\\&#39;</span>,<span class="stringliteral">&#39;/&#39;</span>)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                        <span class="keywordflow">if</span> <span class="stringliteral">&#39; &#39;</span> <span class="keywordflow">in</span> value:</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                            value=<span class="stringliteral">&#39;&quot;&#39;</span>+value+<span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                    <span class="keywordflow">return</span> value</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                kwPairs=<span class="stringliteral">&#39; &#39;</span>.join([v[<span class="stringliteral">&#39;Name&#39;</span>]+<span class="stringliteral">&#39; &#39;</span>+fileTreatment(v.Value(<span class="keyword">False</span>,<span class="keyword">True</span>),v[<span class="stringliteral">&#39;Type&#39;</span>]) <span class="keywordflow">for</span> v <span class="keywordflow">in</span> self.device.variablesList])</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                    useCalculationProperties=(self.device[<span class="stringliteral">&#39;calcprop&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>] == <span class="stringliteral">&#39;true&#39;</span>)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keywordflow">except</span> TypeError:</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                    useCalculationProperties=<span class="keyword">False</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="keywordflow">if</span> useCalculationProperties:</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                    calculationProperties=<a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a>[<span class="stringliteral">&#39;CalculationProperties&#39;</span>]</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                    kwPairs+=<span class="stringliteral">&#39; &#39;</span>+<span class="stringliteral">&#39; &#39;</span>.join([propertyName+<span class="stringliteral">&#39; &#39;</span>+str(calculationProperties[propertyName]) <span class="keywordflow">for</span> propertyName <span class="keywordflow">in</span> calculationProperties.Dictionary().keys()])</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Encryption.xhtml">SignalIntegrity.App.Encryption</a> <span class="keyword">import</span> Encryption</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                pwdArgString = <span class="stringliteral">&#39;&#39;</span> <span class="keywordflow">if</span> Encryption.password == <span class="keywordtype">None</span> <span class="keywordflow">else</span> <span class="stringliteral">&#39; --pwd &quot;&#39;</span>+Encryption.password+<span class="stringliteral">&#39;&quot; &#39;</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                result=os.system(<span class="stringliteral">&#39;SignalIntegrity &quot;&#39;</span>+os.path.abspath(filename)+<span class="stringliteral">&#39;&quot;&#39;</span>+pwdArgString+<span class="stringliteral">&#39; --external &#39;</span>+kwPairs)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <span class="keywordflow">if</span> result != 0:</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                    messagebox.showerror(<span class="stringliteral">&#39;ProjectFile&#39;</span>,<span class="stringliteral">&#39;could not be opened&#39;</span>)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                    <span class="keywordflow">return</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">elif</span> self.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] == <span class="stringliteral">&#39;filename&#39;</span>:</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    sp=si.sp.SParameterFile(filename)</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                <span class="keywordflow">except</span> si.SignalIntegrityException <span class="keyword">as</span> e:</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                    messagebox.showerror(<span class="stringliteral">&#39;S-parameter Viewer&#39;</span>,e.parameter+<span class="stringliteral">&#39;: &#39;</span>+e.message)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                    <span class="keywordflow">return</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                spd=SParametersDialog(self.parent.parent.parent,sp,filename)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                    spd.grab_set()</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                    spd.focus_set()</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                    <span class="keyword">import</span> platform</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    thisOS=platform.system()</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    <span class="keywordflow">if</span> thisOS == <span class="stringliteral">&#39;Linux&#39;</span>:</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                        spd.attributes(<span class="stringliteral">&#39;-type&#39;</span>,<span class="stringliteral">&#39;dialog&#39;</span>)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                    <span class="keywordflow">elif</span> thisOS == <span class="stringliteral">&#39;Windows&#39;</span>:</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                        spd.attributes(<span class="stringliteral">&#39;-toolwindow&#39;</span>,<span class="keyword">True</span>)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                    <span class="keyword">def </span>disable_event():</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                        <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                    self.parent.parent.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, disable_event)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                    spd.attributes(<span class="stringliteral">&#39;-topmost&#39;</span>, 1)</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">#                     spd.transient(self.parent.parent)</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                    self.wait_window(spd)</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="keywordflow">finally</span>:</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                    self.parent.parent.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, self.parent.parent.cancel)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="keywordflow">elif</span> self.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] == <span class="stringliteral">&#39;waveformfilename&#39;</span>:</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                filenametoshow=<span class="stringliteral">&quot;.&quot;</span>.join((<span class="stringliteral">&#39;/&#39;</span>.join(filename.split(<span class="stringliteral">&#39;\\&#39;</span>))).split(<span class="stringliteral">&#39;/&#39;</span>)[-1].split(<span class="stringliteral">&#39;.&#39;</span>)[0:-1])</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="keywordflow">if</span> filenametoshow <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                    filenametoshow=<span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                    wf=self.parent.device.Waveform()</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                <span class="keywordflow">except</span> si.SignalIntegrityException <span class="keyword">as</span> e:</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                    messagebox.showerror(<span class="stringliteral">&#39;Waveform Viewer&#39;</span>,e.parameter+<span class="stringliteral">&#39;: &#39;</span>+e.message)</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                    <span class="keywordflow">return</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                sd=SimulatorDialog(self.parent.parent)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                sd.title(filenametoshow)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                sd.UpdateWaveforms([wf],[filenametoshow])</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                sd.state(<span class="stringliteral">&#39;normal&#39;</span>)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                    <span class="keyword">import</span> platform</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                    thisOS=platform.system()</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    <span class="keywordflow">if</span> thisOS == <span class="stringliteral">&#39;Linux&#39;</span>:</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                        sd.attributes(<span class="stringliteral">&#39;-type&#39;</span>,<span class="stringliteral">&#39;dialog&#39;</span>)</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                    <span class="keywordflow">elif</span> thisOS == <span class="stringliteral">&#39;Windows&#39;</span>:</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                        sd.attributes(<span class="stringliteral">&#39;-toolwindow&#39;</span>,<span class="keyword">True</span>)</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                    <span class="keyword">def </span>disable_event():</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                        <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    self.parent.parent.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, disable_event)</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                    sd.attributes(<span class="stringliteral">&#39;-topmost&#39;</span>, 1)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    sd.focus_set()</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                    sd.grab_set()</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">#                     sd.transient(self.parent.parent)</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                    self.wait_window(sd)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                <span class="keywordflow">finally</span>:</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    self.parent.parent.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, self.parent.parent.cancel)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordflow">elif</span> self.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] == <span class="stringliteral">&#39;errorterms&#39;</span>:</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                calibration=self.parent.parent.parent.OpenCalibrationFile(os.path.abspath(filename))</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                <span class="keywordflow">if</span> calibration <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                    messagebox.showerror(<span class="stringliteral">&#39;Calibration File&#39;</span>,<span class="stringliteral">&#39;could not be opened&#39;</span>)</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    <span class="keywordflow">return</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    self.parent.parent.parent.ViewCalibration(calibration)</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">def </span>onPropertyVisible(self):</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        self.partProperty[<span class="stringliteral">&#39;Visible&#39;</span>]=bool(self.propertyVisible.get())</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        self.callBack()</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">def </span>onKeywordVisible(self):</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        self.partProperty[<span class="stringliteral">&#39;KeywordVisible&#39;</span>]=bool(self.keywordVisible.get())</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        self.callBack()</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keyword">def </span>onEntered(self,event):</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        self.partProperty.SetValueFromString(self.propertyString.get(),<span class="keyword">True</span>)</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">if</span> self.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] == <span class="stringliteral">&#39;waveformfilename&#39;</span>:</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            filename=self.partProperty.GetValue()</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            isProject=FileParts(filename).fileext == <span class="stringliteral">&#39;.si&#39;</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            <span class="keywordflow">for</span> propertyFrame <span class="keywordflow">in</span> self.parent.propertyFrameList:</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <span class="keywordflow">if</span> propertyFrame.partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>]==<span class="stringliteral">&#39;wfprojname&#39;</span>:</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                    propertyFrame.partProperty[<span class="stringliteral">&#39;Hidden&#39;</span>]=<span class="keywordflow">not</span> isProject</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        self.callBack()</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        self.onUntouchedLoseFocus(event)</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keyword">def </span>onTouched(self,event):</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        self.propertyEntry.focus()</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keyword">def </span>onCleared(self,event):</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        self.propertyString.set(<span class="stringliteral">&#39;&#39;</span>)</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keyword">def </span>onUntouched(self,event):</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        self.partProperty.SetValueFromString(self.propertyString.get())</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        self.propertyString.set(self.partProperty.PropertyString(stype=<span class="stringliteral">&#39;entry&#39;</span>))</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        self.callBack()</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keyword">def </span>onUntouchedLoseFocus(self,event):</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        self.parentFrame.focus()</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keyword">class </span>DeviceProperties(tk.Frame):</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">def </span>__init__(self,parent,device,advancedMode=False):</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        tk.Frame.__init__(self,parent)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        self.parent=parent</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        self.title = device.PartPropertyByName(<span class="stringliteral">&#39;type&#39;</span>).PropertyString(stype=<span class="stringliteral">&#39;raw&#39;</span>)</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        self.device=device</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        self.isAProjectDevice=<span class="keyword">False</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        partViewFrame=tk.Frame(self)</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        partViewFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.YES)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        self.partViewButton = tk.Button(partViewFrame,text=<span class="stringliteral">&#39;view s-parameters according to calc properties&#39;</span>,command=self.onPartView)</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        self.waveformViewButton = tk.Button(partViewFrame,text=<span class="stringliteral">&#39;view waveform&#39;</span>,command=self.onWaveformView)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordflow">if</span> isinstance(self.device,Device): <span class="comment"># part other than file - allow viewing</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            fileTypeKeywords = list(set([<span class="stringliteral">&#39;wffile&#39;</span>,<span class="stringliteral">&#39;file&#39;</span>]).intersection(set([property[<span class="stringliteral">&#39;Keyword&#39;</span>] <span class="keywordflow">for</span> property <span class="keywordflow">in</span> self.device.propertiesList])))</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">if</span> len(fileTypeKeywords) == 1:</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                filename=self.device[fileTypeKeywords[0]][<span class="stringliteral">&#39;Value&#39;</span>]</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="keywordflow">if</span> (len(filename)&gt;1) <span class="keywordflow">and</span> (filename[0]==<span class="stringliteral">&#39;=&#39;</span>):</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                    <span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                    <span class="keywordflow">if</span> filename[1:] <span class="keywordflow">in</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a>[<span class="stringliteral">&#39;Variables&#39;</span>].Names():</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                        filename = <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a>[<span class="stringliteral">&#39;Variables&#39;</span>].VariableByName(filename[1:])[<span class="stringliteral">&#39;Value&#39;</span>]</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                        <span class="keywordflow">if</span> filename == <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                            filename=<span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                self.isAProjectDevice = filename.split(<span class="stringliteral">&#39;.&#39;</span>)[-1]==<span class="stringliteral">&#39;si&#39;</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                <span class="keywordflow">if</span> self.device.netlist[<span class="stringliteral">&#39;DeviceName&#39;</span>]==<span class="stringliteral">&#39;device&#39;</span>:</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                    self.partViewButton.pack(expand=tk.NO,fill=tk.NONE,anchor=tk.CENTER)</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="keywordflow">elif</span> self.device.netlist[<span class="stringliteral">&#39;DeviceName&#39;</span>] <span class="keywordflow">in</span> [<span class="stringliteral">&#39;networkanalyzerport&#39;</span>,<span class="stringliteral">&#39;voltagesource&#39;</span>,<span class="stringliteral">&#39;currentsource&#39;</span>]:</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.device[<span class="stringliteral">&#39;wftype&#39;</span>].GetValue() == <span class="stringliteral">&#39;DC&#39;</span>:</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                        self.waveformViewButton.pack(expand=tk.NO,fill=tk.NONE,anchor=tk.CENTER)</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            self.device[<span class="stringliteral">&#39;calcprop&#39;</span>][<span class="stringliteral">&#39;Hidden&#39;</span>]= <span class="keywordflow">not</span> self.isAProjectDevice</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keywordflow">except</span> TypeError:</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        keywords = [property[<span class="stringliteral">&#39;Keyword&#39;</span>] <span class="keywordflow">for</span> property <span class="keywordflow">in</span> self.device.propertiesList]</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;wffile&#39;</span> <span class="keywordflow">in</span> keywords:</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            fileName = self.device.propertiesList[keywords.index(<span class="stringliteral">&#39;wffile&#39;</span>)].GetValue()</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            ext=str.lower(fileName).split(<span class="stringliteral">&#39;.&#39;</span>)[-1]</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            self.device.propertiesList[keywords.index(<span class="stringliteral">&#39;wfprojname&#39;</span>)][<span class="stringliteral">&#39;Hidden&#39;</span>]=(ext != <span class="stringliteral">&#39;si&#39;</span>)</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        propertyListFrame = tk.Frame(self)</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        propertyListFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.NO)</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        propertyListFrame.bind(<span class="stringliteral">&quot;&lt;Return&gt;&quot;</span>, parent.ok)</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        self.propertyFrameList=[]</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">for</span> partProperty <span class="keywordflow">in</span> self.device.propertiesList:</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            self.propertyFrameList.append(DeviceProperty(propertyListFrame,self,partProperty))</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        self.variablesFrame = tk.Frame(propertyListFrame)</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        self.variablesFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.NO)</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        self.variablesButton = tk.Button(self.variablesFrame,</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                      text=<span class="stringliteral">&#39;Variables&#39;</span>,</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                      command=self.onVariables)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">if</span> self.isAProjectDevice:</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            self.variablesButton.pack(side=tk.TOP,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            self.variablesButton.pack_forget()</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        self.configurationFrame = tk.Frame(propertyListFrame)</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        self.configurationFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.NO)</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> device.configuration <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="keywordflow">if</span> isinstance(device.configuration,list):</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                <span class="keywordflow">for</span> config <span class="keywordflow">in</span> device.configuration:</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">#                     config.parent=self.parent</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                    tk.Button(self.configurationFrame,text=config.label,command=<span class="keyword">lambda</span>: config.onConfiguration(self)).pack(side=tk.TOP,expand=tk.YES,fill=tk.X)</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">#                 device.configuration.parent=self.parent</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                tk.Button(self.configurationFrame,text=device.configuration.label,command=<span class="keyword">lambda</span>: device.configuration.onConfiguration(self)).pack(side=tk.TOP,expand=tk.YES,fill=tk.X)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        self.rotationFrame = tk.Frame(propertyListFrame)</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        self.rotationFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.NO)</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        self.rotationString=tk.StringVar(value=str(self.device.partPicture.current.orientation))</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        rotationLabel = tk.Label(self.rotationFrame,text=<span class="stringliteral">&#39;rotation: &#39;</span>)</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        rotationLabel.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        tk.Radiobutton(self.rotationFrame,text=<span class="stringliteral">&#39;0&#39;</span>,variable=self.rotationString,value=<span class="stringliteral">&#39;0&#39;</span>,command=self.onOrientationChange).pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        tk.Radiobutton(self.rotationFrame,text=<span class="stringliteral">&#39;90&#39;</span>,variable=self.rotationString,value=<span class="stringliteral">&#39;90&#39;</span>,command=self.onOrientationChange).pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        tk.Radiobutton(self.rotationFrame,text=<span class="stringliteral">&#39;180&#39;</span>,variable=self.rotationString,value=<span class="stringliteral">&#39;180&#39;</span>,command=self.onOrientationChange).pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        tk.Radiobutton(self.rotationFrame,text=<span class="stringliteral">&#39;270&#39;</span>,variable=self.rotationString,value=<span class="stringliteral">&#39;270&#39;</span>,command=self.onOrientationChange).pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        tk.Button(self.rotationFrame,text=<span class="stringliteral">&#39;toggle&#39;</span>,command=self.onToggleRotation).pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        tk.Frame(self.rotationFrame,height=2,bd=2,relief=tk.RAISED).pack(side=tk.LEFT,fill=tk.X,padx=5,pady=5)</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        tk.Button(self.rotationFrame,text=<span class="stringliteral">&#39;help&#39;</span>,command=self.onHelp).pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Device.xhtml">SignalIntegrity.App.Device</a> <span class="keyword">import</span> DeviceFile</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <span class="keywordflow">if</span> isinstance(self.device,DeviceFile):</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                extension = self.device[<span class="stringliteral">&#39;file&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>].split(<span class="stringliteral">&#39;.&#39;</span>)[-1]</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                <span class="keywordflow">if</span> extension[0].lower() == <span class="stringliteral">&#39;s&#39;</span> <span class="keywordflow">and</span> extension[-1].lower() == <span class="stringliteral">&#39;p&#39;</span> <span class="keywordflow">and</span> int(extension[1:-1]) &gt; 0:</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                    tk.Frame(self.rotationFrame,height=2,bd=2,relief=tk.RAISED).pack(side=tk.LEFT,fill=tk.X,padx=5,pady=5)</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                    tk.Button(self.rotationFrame,text=<span class="stringliteral">&#39;header&#39;</span>,command=self.onHeader).pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        self.mirrorFrame=tk.Frame(propertyListFrame)</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        self.mirrorFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.NO)</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        mirrorLabel = tk.Label(self.mirrorFrame,text=<span class="stringliteral">&#39;mirror: &#39;</span>)</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        mirrorLabel.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        self.mirrorVerticallyVar=tk.IntVar(value=int(self.device.partPicture.current.mirroredVertically))</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        mirrorVerticallyCheckBox = tk.Checkbutton(self.mirrorFrame,text=<span class="stringliteral">&#39;Vertically&#39;</span>,variable=self.mirrorVerticallyVar,command=self.onOrientationChange)</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        mirrorVerticallyCheckBox.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        self.mirrorHorizontallyVar=tk.IntVar(value=int(self.device.partPicture.current.mirroredHorizontally))</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        mirrorHorizontallyCheckBox = tk.Checkbutton(self.mirrorFrame,text=<span class="stringliteral">&#39;Horizontally&#39;</span>,variable=self.mirrorHorizontallyVar,command=self.onOrientationChange)</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        mirrorHorizontallyCheckBox.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="keywordflow">if</span> advancedMode:</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            advancedModeFrame=tk.Frame(propertyListFrame)</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            advancedModeFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.NO)</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            pinNumbersLabel = tk.Label(advancedModeFrame,text=<span class="stringliteral">&#39;pin numbers:&#39;</span>)</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            pinNumbersLabel.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            pinNumbersOnButton = tk.Button(advancedModeFrame,text=<span class="stringliteral">&#39;on&#39;</span>,command=self.onPinNumbersOn)</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            pinNumbersOnButton.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            pinNumbersOffButton = tk.Button(advancedModeFrame,text=<span class="stringliteral">&#39;off&#39;</span>,command=self.onPinNumbersOff)</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            pinNumbersOffButton.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            showBoxLabel = tk.Label(advancedModeFrame,text=<span class="stringliteral">&#39;  show box:&#39;</span>)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            showBoxLabel.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            showBoxOnButton = tk.Button(advancedModeFrame,text=<span class="stringliteral">&#39;on&#39;</span>,command=self.onShowBoxOn)</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            showBoxOnButton.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            showBoxOffButton = tk.Button(advancedModeFrame,text=<span class="stringliteral">&#39;off&#39;</span>,command=self.onShowBoxOff)</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            showBoxOffButton.pack(side=tk.LEFT,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        partPictureFrame = tk.Frame(self)</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        partPictureFrame.pack(side=tk.TOP,fill=tk.BOTH,expand=tk.YES)</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        self.partPictureCanvas = tk.Canvas(partPictureFrame)</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        self.partPictureCanvas.config(relief=tk.SUNKEN,borderwidth=1)</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        self.partPictureCanvas.pack(side=tk.TOP,fill=tk.BOTH,expand=tk.YES)</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        self.partPictureCanvas.bind(<span class="stringliteral">&#39;&lt;Button-1&gt;&#39;</span>,self.onMouseButton1InPartPicture)</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        device.DrawDevice(self.partPictureCanvas,20,-device.partPicture.current.origin[0]+5,-device.partPicture.current.origin[1]+5)</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        (minx,miny,maxx,maxy)=self.partPictureCanvas.bbox(tk.ALL) <span class="comment"># bounding box that contains part picture</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="keywordflow">if</span> minx &lt; 0 <span class="keywordflow">or</span> miny &lt; 0: <span class="comment"># the top or left side of the picture is clipped</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            <span class="comment"># adjust the picture so that the left and top of the picture is in the window</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            offsetx=max(-minx,0)</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            offsety=max(-miny,0)</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            self.partPictureCanvas.move(tk.ALL,offsetx,offsety)</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160; </div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keyword">def </span>onVariables(self):</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keywordflow">if</span> self.device[<span class="stringliteral">&#39;file&#39;</span>] != <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            filename=self.device[<span class="stringliteral">&#39;file&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>]</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">elif</span> self.device[<span class="stringliteral">&#39;wffile&#39;</span>] != <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            filename=self.device[<span class="stringliteral">&#39;wffile&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>]</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            filename=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keywordflow">if</span> filename != <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">if</span> (len(filename)&gt;1) <span class="keywordflow">and</span> (filename[0]==<span class="stringliteral">&#39;=&#39;</span>):</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                <span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                <span class="keywordflow">if</span> filename[1:] <span class="keywordflow">in</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a>[<span class="stringliteral">&#39;Variables&#39;</span>].Names():</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                    filename = <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a>[<span class="stringliteral">&#39;Variables&#39;</span>].VariableByName(filename[1:])[<span class="stringliteral">&#39;Value&#39;</span>]</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                    <span class="keywordflow">if</span> filename == <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                        filename=<span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            VariablesDialog(self.parent, self.device.variablesList, self.parent.parent, <span class="stringliteral">&#39;Device Variables&#39;</span>,filename=filename)</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keyword">def </span>UpdatePicture(self):</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        self.partPictureCanvas.delete(tk.ALL)</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.device[<span class="stringliteral">&#39;ports&#39;</span>] <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            self.device.partPicture.ports=self.device[<span class="stringliteral">&#39;ports&#39;</span>].GetValue()</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        self.device.partPicture.SwitchPartPicture(self.device.partPicture.partPictureSelected)</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        self.device.DrawDevice(self.partPictureCanvas,20,-self.device.partPicture.current.origin[0]+5,-self.device.partPicture.current.origin[1]+5)</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        (minx,miny,maxx,maxy)=self.partPictureCanvas.bbox(tk.ALL) <span class="comment"># bounding box that contains part picture</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <span class="keywordflow">if</span> minx &lt; 0 <span class="keywordflow">or</span> miny &lt; 0: <span class="comment"># the top or left side of the picture is clipped</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="comment"># adjust the picture so that the left and top of the picture is in the window</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            offsetx=max(-minx,0)</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            offsety=max(-miny,0)</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            self.partPictureCanvas.move(tk.ALL,offsetx,offsety)</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="comment"># also update part properties as some may have become hidden or unhidden</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        self.variablesFrame.pack_forget()</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        self.configurationFrame.pack_forget()</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        self.mirrorFrame.pack_forget()</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        self.rotationFrame.pack_forget()</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        self.partViewButton.pack_forget()</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        self.waveformViewButton.pack_forget()</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        self.variablesButton.pack_forget()</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        self.isAProjectDevice=<span class="keyword">False</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="keywordflow">if</span> isinstance(self.device,Device): <span class="comment"># part other than file - allow viewing</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            fileTypeKeywords = list(set([<span class="stringliteral">&#39;wffile&#39;</span>,<span class="stringliteral">&#39;file&#39;</span>]).intersection(set([property[<span class="stringliteral">&#39;Keyword&#39;</span>] <span class="keywordflow">for</span> property <span class="keywordflow">in</span> self.device.propertiesList])))</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="keywordflow">if</span> len(fileTypeKeywords) == 1:</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                filename=self.device[fileTypeKeywords[0]][<span class="stringliteral">&#39;Value&#39;</span>]</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                <span class="keywordflow">if</span> (len(filename)&gt;1) <span class="keywordflow">and</span> (filename[0]==<span class="stringliteral">&#39;=&#39;</span>):</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                    <span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                    <span class="keywordflow">if</span> filename[1:] <span class="keywordflow">in</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a>[<span class="stringliteral">&#39;Variables&#39;</span>].Names():</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                        filename = <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a>[<span class="stringliteral">&#39;Variables&#39;</span>].VariableByName(filename[1:])[<span class="stringliteral">&#39;Value&#39;</span>]</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                        <span class="keywordflow">if</span> filename == <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                            filename=<span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                self.isAProjectDevice = filename.split(<span class="stringliteral">&#39;.&#39;</span>)[-1]==<span class="stringliteral">&#39;si&#39;</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                <span class="keywordflow">if</span> self.device.netlist[<span class="stringliteral">&#39;DeviceName&#39;</span>]==<span class="stringliteral">&#39;device&#39;</span>:</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                    self.partViewButton.pack(expand=tk.NO,fill=tk.NONE,anchor=tk.CENTER)</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                <span class="keywordflow">elif</span> self.device.netlist[<span class="stringliteral">&#39;DeviceName&#39;</span>] <span class="keywordflow">in</span> [<span class="stringliteral">&#39;networkanalyzerport&#39;</span>,<span class="stringliteral">&#39;voltagesource&#39;</span>,<span class="stringliteral">&#39;currentsource&#39;</span>]:</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.device[<span class="stringliteral">&#39;wftype&#39;</span>].GetValue() == <span class="stringliteral">&#39;DC&#39;</span>:</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                        self.waveformViewButton.pack(expand=tk.NO,fill=tk.NONE,anchor=tk.CENTER)</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">if</span> self.isAProjectDevice:</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            self.variablesButton.pack(side=tk.TOP,expand=tk.NO,fill=tk.X)</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            self.device[<span class="stringliteral">&#39;calcprop&#39;</span>][<span class="stringliteral">&#39;Hidden&#39;</span>]= <span class="keywordflow">not</span> self.isAProjectDevice</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="keywordflow">except</span> TypeError:</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keywordflow">for</span> propertyFrame <span class="keywordflow">in</span> self.propertyFrameList:</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            propertyFrame.pack_forget()</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keywordflow">for</span> propertyFrame <span class="keywordflow">in</span> self.propertyFrameList:</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> propertyFrame.partProperty[<span class="stringliteral">&#39;Hidden&#39;</span>]:</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                propertyFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.YES)</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        self.variablesFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.NO)</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        self.configurationFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.NO)</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        self.rotationFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.NO)</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        self.mirrorFrame.pack(side=tk.TOP,fill=tk.X,expand=tk.NO)</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160; </div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <span class="keyword">def </span>onToggleRotation(self):</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        self.device.partPicture.current.Rotate()</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        self.rotationString.set(str(self.device.partPicture.current.orientation))</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        self.onOrientationChange()</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160; </div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="keyword">def </span>onHelp(self):</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1MenuSystemHelpers.xhtml">SignalIntegrity.App.MenuSystemHelpers</a> <span class="keyword">import</span> Doer</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> Doer.helpKeys <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                Doer.helpKeys.Open(self.device[<span class="stringliteral">&#39;help&#39;</span>].GetValue())</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160; </div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="keyword">def </span>onHeader(self):</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1HeaderDialog.xhtml">SignalIntegrity.App.HeaderDialog</a> <span class="keyword">import</span> HeaderDialog</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> hasattr(self, <span class="stringliteral">&#39;headerDialog&#39;</span>):</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                self.headerDialog = HeaderDialog(self.parent,FileParts(self.device[<span class="stringliteral">&#39;file&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>]).FileNameWithExtension(),FileParts(self.device[<span class="stringliteral">&#39;file&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>]))</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;            <span class="keywordflow">if</span> self.headerDialog == <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                self.headerDialog = HeaderDialog(self.parent,FileParts(self.device[<span class="stringliteral">&#39;file&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>]).FileNameWithExtension(),FileParts(self.device[<span class="stringliteral">&#39;file&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>]))</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.headerDialog.winfo_exists():</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                    self.headerDialog = HeaderDialog(self.parent,FileParts(self.device[<span class="stringliteral">&#39;file&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>]).FileNameWithExtension(),FileParts(self.device[<span class="stringliteral">&#39;file&#39;</span>][<span class="stringliteral">&#39;Value&#39;</span>]))</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            self.headerDialog.lift(self)</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160; </div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <span class="keyword">def </span>onOrientationChange(self):</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        self.device.partPicture.current.ApplyOrientation(self.rotationString.get(),bool(self.mirrorHorizontallyVar.get()),bool(self.mirrorVerticallyVar.get()))</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        self.UpdatePicture()</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160; </div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keyword">def </span>onPinNumbersOn(self):</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        <span class="keywordflow">for</span> pin <span class="keywordflow">in</span> self.device.partPicture.current.pinListSupplied:</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            pin.pinNumberVisible = <span class="keyword">True</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        <span class="keywordflow">for</span> pin <span class="keywordflow">in</span> self.device.partPicture.current.pinList:</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            pin.pinNumberVisible = <span class="keyword">True</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        self.UpdatePicture()</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160; </div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <span class="keyword">def </span>onPinNumbersOff(self):</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="keywordflow">for</span> pin <span class="keywordflow">in</span> self.device.partPicture.current.pinListSupplied:</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            pin.pinNumberVisible = <span class="keyword">False</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keywordflow">for</span> pin <span class="keywordflow">in</span> self.device.partPicture.current.pinList:</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            pin.pinNumberVisible = <span class="keyword">False</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        self.UpdatePicture()</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160; </div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <span class="keyword">def </span>onShowBoxOn(self):</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160; </div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keyword">def </span>onShowBoxOff(self):</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160; </div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="keyword">def </span>onMouseButton1InPartPicture(self,event):</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        numPictures=len(self.device.partPicture.partPictureClassList)</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        current=self.device.partPicture.partPictureSelected</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        selected=current+1</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="keywordflow">if</span> selected &gt;= numPictures:</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            selected = 0</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        self.device.partPicture.SwitchPartPicture(selected)</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        self.UpdatePicture()</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160; </div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keyword">def </span>onPartView(self):</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        self.focus()</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        device=self.device</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        varLines=<a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a>[<span class="stringliteral">&#39;Variables&#39;</span>].NetListLines()</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        numPorts=device[<span class="stringliteral">&#39;ports&#39;</span>].GetValue()</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        referenceDesignator=device[<span class="stringliteral">&#39;ref&#39;</span>].GetValue()</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        portLine=<span class="stringliteral">&#39;port&#39;</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="keywordflow">for</span> port <span class="keywordflow">in</span> range(numPorts):</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;            portLine=portLine+<span class="stringliteral">&#39; &#39;</span>+str(port+1)+<span class="stringliteral">&#39; &#39;</span>+referenceDesignator+<span class="stringliteral">&#39; &#39;</span>+str(port+1)</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        deviceLine=device.NetListLine()</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        netList=varLines+[deviceLine,portLine]</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        <span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib.xhtml">SignalIntegrity.Lib</a> <span class="keyword">as</span> si</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        spnp=si.p.SystemSParametersNumericParser(</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            <a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a>[<span class="stringliteral">&#39;CalculationProperties&#39;</span>].FrequencyList(),</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            Z0=<a class="code" href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a>[<span class="stringliteral">&#39;CalculationProperties.ReferenceImpedance&#39;</span>])</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        spnp.AddLines(netList)</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            sp=spnp.SParameters()</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        <span class="keywordflow">except</span> si.SignalIntegrityException <span class="keyword">as</span> e:</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            messagebox.showerror(<span class="stringliteral">&#39;S-parameter Calculator&#39;</span>,e.parameter+<span class="stringliteral">&#39;: &#39;</span>+e.message)</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            <span class="keywordflow">return</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        fileParts=copy.copy(self.parent.parent.fileparts)</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        fileParts.filename=fileParts.filename+<span class="stringliteral">&#39;_&#39;</span>+referenceDesignator</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        spd=SParametersDialog(self.parent.parent,sp,filename=fileParts.FullFilePathExtension(<span class="stringliteral">&#39;s&#39;</span>+str(sp.m_P)+<span class="stringliteral">&#39;p&#39;</span>))</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            <span class="keyword">import</span> platform</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            thisOS=platform.system()</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="keywordflow">if</span> thisOS == <span class="stringliteral">&#39;Linux&#39;</span>:</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                spd.attributes(<span class="stringliteral">&#39;-type&#39;</span>,<span class="stringliteral">&#39;dialog&#39;</span>)</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            <span class="keywordflow">elif</span> thisOS == <span class="stringliteral">&#39;Windows&#39;</span>:</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                spd.attributes(<span class="stringliteral">&#39;-toolwindow&#39;</span>,<span class="keyword">True</span>)</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            <span class="keyword">def </span>disable_event():</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;            self.parent.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, disable_event)</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;            spd.attributes(<span class="stringliteral">&#39;-topmost&#39;</span>, 1)</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;            spd.focus_set()</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            spd.grab_set()</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">#             spd.transient(self.parent)</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;            self.wait_window(spd)</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        <span class="keywordflow">finally</span>:</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            self.parent.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, self.parent.cancel)</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160; </div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="keyword">def </span>onWaveformView(self):</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        self.focus()</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        device=self.device</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        referenceDesignator=device[<span class="stringliteral">&#39;ref&#39;</span>].GetValue()</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        <span class="keyword">import</span> SignalIntegrity <span class="keyword">as</span> si</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            wf=device.Waveform()</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        <span class="keywordflow">except</span> si.SignalIntegrityException <span class="keyword">as</span> e:</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            messagebox.showerror(<span class="stringliteral">&#39;Waveform Viewer&#39;</span>,e.parameter+<span class="stringliteral">&#39;: &#39;</span>+e.message)</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            <span class="keywordflow">return</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        sim=self.parent.parent.simulator</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        sd=sim.SimulatorDialog()</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        sd.title(<span class="stringliteral">&#39;Waveform&#39;</span>)</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        sim.UpdateWaveforms([wf],[referenceDesignator])</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        <span class="comment">#sd.wait_visibility(sd)</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            <span class="keyword">import</span> platform</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;            thisOS=platform.system()</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;            <span class="keywordflow">if</span> thisOS == <span class="stringliteral">&#39;Linux&#39;</span>:</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                sd.attributes(<span class="stringliteral">&#39;-type&#39;</span>,<span class="stringliteral">&#39;dialog&#39;</span>)</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            <span class="keywordflow">elif</span> thisOS == <span class="stringliteral">&#39;Windows&#39;</span>:</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                sd.attributes(<span class="stringliteral">&#39;-toolwindow&#39;</span>,<span class="keyword">True</span>)</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            <span class="keyword">def </span>disable_event():</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            self.parent.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, disable_event)</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            sd.attributes(<span class="stringliteral">&#39;-topmost&#39;</span>, 1)</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            sd.focus_set()</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            sd.grab_set()</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment">#             sd.transient(self.parent)</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;            self.wait_window(sd)</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        <span class="keywordflow">finally</span>:</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            self.parent.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, self.parent.cancel)</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160; </div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="keyword">class </span>DevicePropertiesDialog(tk.Toplevel):</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="keyword">def </span>__init__(self,parent,device):</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        tk.Toplevel.__init__(self, parent)</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        self.transient(parent)</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        self.device = copy.deepcopy(device)</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        self.title(self.device[<span class="stringliteral">&#39;desc&#39;</span>].PropertyString(stype=<span class="stringliteral">&#39;raw&#39;</span>))</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        self.parent = parent</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        self.result = <span class="keywordtype">None</span></div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        self.DeviceProperties = DeviceProperties(self,self.device)</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        self.initial_focus = self.DeviceProperties</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        self.DeviceProperties.pack(side=tk.TOP,fill=tk.BOTH,expand=tk.YES,padx=5, pady=5)</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        self.buttonbox()</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        self.wait_visibility(self)</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        self.grab_set()</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.initial_focus:</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            self.initial_focus = self</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        self.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, self.cancel)</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        self.geometry(<span class="stringliteral">&quot;+%d+%d&quot;</span> % (parent.winfo_rootx()+50,parent.winfo_rooty()+50))</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        self.initial_focus.focus_set()</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        self.wait_window(self)</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <span class="comment"># construction hooks</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160; </div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keyword">def </span>buttonbox(self):</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        <span class="comment"># add standard button box. override if you don&#39;t want the</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        <span class="comment"># standard buttons</span></div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        box = tk.Frame(self)</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        w = tk.Button(box, text=<span class="stringliteral">&quot;OK&quot;</span>, width=10, command=self.ok)</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        w.pack(side=tk.LEFT, padx=5, pady=5)</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        w = tk.Button(box, text=<span class="stringliteral">&quot;Cancel&quot;</span>, width=10, command=self.cancel)</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        w.pack(side=tk.LEFT, padx=5, pady=5)</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        self.bind(<span class="stringliteral">&quot;&lt;Return&gt;&quot;</span>, self.ok)</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        self.bind(<span class="stringliteral">&quot;&lt;Escape&gt;&quot;</span>, self.cancel)</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        box.pack()</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <span class="comment">#</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="comment"># standard button semantics</span></div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <span class="keyword">def </span>ok(self, event=None):</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        self.withdraw()</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        self.update_idletasks()</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        self.apply()</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        self.parent.focus_set()</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        self.destroy()</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160; </div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <span class="keyword">def </span>cancel(self, event=None):</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        <span class="comment"># put focus back to the parent window</span></div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        self.result=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        self.parent.focus_set()</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        self.destroy()</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    <span class="comment">#</span></div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    <span class="comment"># command hooks</span></div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    <span class="keyword">def </span>apply(self):</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        self.result=copy.deepcopy(self.device)</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        <span class="keywordflow">for</span> pIndex <span class="keywordflow">in</span> range(len(self.DeviceProperties.propertyFrameList)):</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            propFrame=self.DeviceProperties.propertyFrameList[pIndex]</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            propFrame.partProperty.SetValueFromString(propFrame.propertyString.get())</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            self.result.propertiesList[pIndex]=propFrame.partProperty</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.device[<span class="stringliteral">&#39;ports&#39;</span>] <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            self.result.partPicture.ports=self.result[<span class="stringliteral">&#39;ports&#39;</span>].GetValue()</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;        self.result.partPicture.SwitchPartPicture(self.result.partPicture.partPictureSelected)</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;        <span class="keywordflow">return</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1VariablesDialog_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1VariablesDialog.xhtml">SignalIntegrity.App.VariablesDialog</a></div><div class="ttdef"><b>Definition:</b> <a href="VariablesDialog_8py_source.xhtml#l00001">VariablesDialog.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1Files_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1Files.xhtml">SignalIntegrity.App.Files</a></div><div class="ttdef"><b>Definition:</b> <a href="Files_8py_source.xhtml#l00001">Files.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1Device_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1Device.xhtml">SignalIntegrity.App.Device</a></div><div class="ttdef"><b>Definition:</b> <a href="App_2Device_8py_source.xhtml#l00001">Device.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1SParameterViewerWindow_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1SParameterViewerWindow.xhtml">SignalIntegrity.App.SParameterViewerWindow</a></div><div class="ttdef"><b>Definition:</b> <a href="SParameterViewerWindow_8py_source.xhtml#l00001">SParameterViewerWindow.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1Project_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1Project.xhtml">SignalIntegrity.App.Project</a></div><div class="ttdef"><b>Definition:</b> <a href="Project_8py_source.xhtml#l00001">Project.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib.xhtml">SignalIntegrity.Lib</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1HeaderDialog_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1HeaderDialog.xhtml">SignalIntegrity.App.HeaderDialog</a></div><div class="ttdef"><b>Definition:</b> <a href="HeaderDialog_8py_source.xhtml#l00001">HeaderDialog.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1MenuSystemHelpers_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1MenuSystemHelpers.xhtml">SignalIntegrity.App.MenuSystemHelpers</a></div><div class="ttdef"><b>Definition:</b> <a href="MenuSystemHelpers_8py_source.xhtml#l00001">MenuSystemHelpers.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1Simulator_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1Simulator.xhtml">SignalIntegrity.App.Simulator</a></div><div class="ttdef"><b>Definition:</b> <a href="App_2Simulator_8py_source.xhtml#l00001">Simulator.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1Encryption_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1Encryption.xhtml">SignalIntegrity.App.Encryption</a></div><div class="ttdef"><b>Definition:</b> <a href="Encryption_8py_source.xhtml#l00001">Encryption.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1FilePicker_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1FilePicker.xhtml">SignalIntegrity.App.FilePicker</a></div><div class="ttdef"><b>Definition:</b> <a href="FilePicker_8py_source.xhtml#l00001">FilePicker.py:1</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
