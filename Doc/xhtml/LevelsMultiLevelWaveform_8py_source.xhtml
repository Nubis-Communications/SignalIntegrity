<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/Lib/Prbs/LevelsMultiLevelWaveform.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.5.0</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_ba9856180bcd39f2b51d38e1b9ddb228.xhtml">Lib</a></li><li class="navelem"><a class="el" href="dir_50755683687b26ed05cf3e5a16649097.xhtml">Prbs</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">LevelsMultiLevelWaveform.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1Lib_1_1Prbs_1_1LevelsMultiLevelWaveform.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral"> levels defined multi-level waveform</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2021 Nubis Communications, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># Copyright (c) 2018-2020 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">import</span> math</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform</a> <span class="keyword">import</span> Waveform</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1PseudoRandomPolynomial_1_1PseudoRandomPolynomial.xhtml">SignalIntegrity.Lib.Prbs.PseudoRandomPolynomial</a> <span class="keyword">import</span> PseudoRandomPolynomial</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1SerialDataWaveform_1_1SerialDataWaveform.xhtml">SignalIntegrity.Lib.Prbs.SerialDataWaveform</a> <span class="keyword">import</span> SerialDataWaveform</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1LevelsMultiLevelWaveform_1_1LevelsMultiLevelWaveform.xhtml">LevelsMultiLevelWaveform</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform.xhtml">Waveform</a>):</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;a PRBS multi-level waveform with a given PRBS polynomial&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1LevelsMultiLevelWaveform_1_1LevelsMultiLevelWaveform.xhtml#ad9b0bfca43e7ba775a692a1d805dbfb3">__init__</a>(self,polynomial,baudrate,levels=2,symbols=1,amplitude=1.0,risetime=0.,delay=0.,td=None):</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;constructor</span></div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1LevelsMultiLevelWaveform_1_1LevelsMultiLevelWaveform.xhtml">   32</a></span>&#160;<span class="stringliteral">        @param polynomial integer polynomial number</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="stringliteral">        @param baudrate, amplitude, risetime, delay, td all pertain to the derived SerialDataWaveform class</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="stringliteral">        @see SerialDataWaveform</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="stringliteral">        @param levels integer (defaults to 2) are the number of levels (i.e. the PAM of the waveform).</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">        @param symbols integer (defaults to 1) are the number of symbols to be used for encoding</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">        @return self, a waveform.</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">        @throw SignalIntegrityWaveform exception is raised if the polynomial number cannot be found</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">        @see PseudoRandomPolynomial</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="stringliteral">        @note the pseudo-random bits are grouped for each symbol.</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        bits_per_symbol = math.log2(levels)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">if</span> float(round(bits_per_symbol)) == bits_per_symbol:</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="comment"># the bits per symbol resolves to an integer number (NRZ, PAM4, PAM8, etc.)</span></div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1LevelsMultiLevelWaveform_1_1LevelsMultiLevelWaveform.xhtml#ad9b0bfca43e7ba775a692a1d805dbfb3">   45</a></span>&#160;            <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1MultiLevelWaveform_1_1MultiLevelWaveform.xhtml">SignalIntegrity.Lib.Prbs.MultiLevelWaveform</a> <span class="keyword">import</span> MultiLevelWaveform</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            Waveform.__init__(self,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                  <a class="code" href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1MultiLevelWaveform_1_1MultiLevelWaveform.xhtml">MultiLevelWaveform</a>(polynomial,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                     baudrate,</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                     round(bits_per_symbol),</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                     amplitude,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                     risetime,</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                     delay,</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                     td))</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">return</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        total_symbols=int(math.ceil(td.Duration()*baudrate))</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        bits_per_symbol = math.log2(levels)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        bits_per_block = math.floor(symbols*bits_per_symbol)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        pattern=<a class="code" href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1PseudoRandomPolynomial_1_1PseudoRandomPolynomial.xhtml">PseudoRandomPolynomial</a>(polynomial).Pattern(int(math.ceil(total_symbols*bits_per_symbol))) <span class="keywordflow">if</span> isinstance(polynomial,int) <span class="keywordflow">else</span> polynomial</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="comment"># first generate the levels at the baudrate</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        pattern_length=len(pattern)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        symbol_count = 0</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        levels_list = []</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        index_in_pattern = 0</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">while</span> symbol_count &lt;= total_symbols:</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            block_number=0</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(bits_per_block):</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                block_number = block_number * 2 + pattern[index_in_pattern]</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                index_in_pattern = (index_in_pattern + 1) % pattern_length</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="comment"># this block will now be encoded in the number of symbols specified</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            block_levels=[]</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(symbols):</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                level=math.floor(block_number % levels + 0.5)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                block_levels.append(level)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                symbol_count = symbol_count + 1</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                <span class="keywordflow">if</span> symbol_count &gt;=total_symbols:</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    <span class="keywordflow">break</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                block_number = math.floor((block_number - level)/levels + 0.5)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            levels_list.extend(block_levels)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="comment"># levels_list now contains the value of each level for the number of symbols specified by total_symbols</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment"># each level is in 0 &lt;= level &lt;= levels - 1.</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="comment"># the total symbols are for the duration of the waveform.</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        levels_amplitude_list = [-amplitude + level_index * 2 * amplitude / (levels - 1) <span class="keywordflow">for</span> level_index <span class="keywordflow">in</span> range(levels)]</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        levels_list = [levels_amplitude_list[level] <span class="keywordflow">for</span> level <span class="keywordflow">in</span> levels_list]</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        Waveform.__init__(self,td,<span class="keywordtype">None</span>)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        UI=1/baudrate</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        times=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform.xhtml#a1473726ef73758eecc3291c232d25d3c">td</a>.<a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform.xhtml#a5ba53f81d111ea013ebb7f55ed99d959">Times</a>()</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">for</span> k <span class="keywordflow">in</span> range(len(self)):</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            self[k] = levels_list[int((times[k]-delay-1/(2.*td.Fs))/UI)]</div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2TimeDomain_2Waveform_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Prbs_1_1SerialDataWaveform_1_1SerialDataWaveform_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1SerialDataWaveform_1_1SerialDataWaveform.xhtml">SignalIntegrity.Lib.Prbs.SerialDataWaveform.SerialDataWaveform</a></div><div class="ttdoc">a serial data NRZ waveform</div><div class="ttdef"><b>Definition:</b> <a href="SerialDataWaveform_8py_source.xhtml#l00032">SerialDataWaveform.py:32</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform_xhtml_a5ba53f81d111ea013ebb7f55ed99d959"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform.xhtml#a5ba53f81d111ea013ebb7f55ed99d959">SignalIntegrity.Lib.TimeDomain.Waveform.Waveform.Waveform.Times</a></div><div class="ttdeci">def Times(self, unit=None)</div><div class="ttdoc">time values</div><div class="ttdef"><b>Definition:</b> <a href="Waveform_8py_source.xhtml#l00076">Waveform.py:76</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.Waveform.Waveform</a></div><div class="ttdoc">base class for all waveforms</div><div class="ttdef"><b>Definition:</b> <a href="Waveform_8py_source.xhtml#l00036">Waveform.py:36</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Prbs_1_1PseudoRandomPolynomial_1_1PseudoRandomPolynomial_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1PseudoRandomPolynomial_1_1PseudoRandomPolynomial.xhtml">SignalIntegrity.Lib.Prbs.PseudoRandomPolynomial.PseudoRandomPolynomial</a></div><div class="ttdoc">generates pseudo-random bit patterns   list obtained from http://www.xilinx.com/support/documentation...</div><div class="ttdef"><b>Definition:</b> <a href="PseudoRandomPolynomial_8py_source.xhtml#l00034">PseudoRandomPolynomial.py:34</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Prbs_1_1MultiLevelWaveform_1_1MultiLevelWaveform_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1MultiLevelWaveform_1_1MultiLevelWaveform.xhtml">SignalIntegrity.Lib.Prbs.MultiLevelWaveform.MultiLevelWaveform</a></div><div class="ttdoc">a PRBS multi-level waveform with a given PRBS polynomial</div><div class="ttdef"><b>Definition:</b> <a href="MultiLevelWaveform_8py_source.xhtml#l00032">MultiLevelWaveform.py:32</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform_xhtml_a1473726ef73758eecc3291c232d25d3c"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1Waveform_1_1Waveform.xhtml#a1473726ef73758eecc3291c232d25d3c">SignalIntegrity.Lib.TimeDomain.Waveform.Waveform.Waveform.td</a></div><div class="ttdeci">td</div><div class="ttdef"><b>Definition:</b> <a href="Waveform_8py_source.xhtml#l00057">Waveform.py:57</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Prbs_1_1LevelsMultiLevelWaveform_1_1LevelsMultiLevelWaveform_xhtml_ad9b0bfca43e7ba775a692a1d805dbfb3"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1LevelsMultiLevelWaveform_1_1LevelsMultiLevelWaveform.xhtml#ad9b0bfca43e7ba775a692a1d805dbfb3">SignalIntegrity.Lib.Prbs.LevelsMultiLevelWaveform.LevelsMultiLevelWaveform.__init__</a></div><div class="ttdeci">def __init__(self, polynomial, baudrate, levels=2, symbols=1, amplitude=1.0, risetime=0., delay=0., td=None)</div><div class="ttdoc">constructor</div><div class="ttdef"><b>Definition:</b> <a href="LevelsMultiLevelWaveform_8py_source.xhtml#l00045">LevelsMultiLevelWaveform.py:45</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Prbs_1_1LevelsMultiLevelWaveform_1_1LevelsMultiLevelWaveform_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Prbs_1_1LevelsMultiLevelWaveform_1_1LevelsMultiLevelWaveform.xhtml">SignalIntegrity.Lib.Prbs.LevelsMultiLevelWaveform.LevelsMultiLevelWaveform</a></div><div class="ttdoc">a PRBS multi-level waveform with a given PRBS polynomial</div><div class="ttdef"><b>Definition:</b> <a href="LevelsMultiLevelWaveform_8py_source.xhtml#l00032">LevelsMultiLevelWaveform.py:32</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
