<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/App/Encryption.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.3.5</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_970ef3fb0b92f0060bb9423c44cad0f7.xhtml">App</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Encryption.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1App_1_1Encryption.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">Encryption.py</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"># Copyright (c) 2021 Nubis Communications, Inc.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2018-2020 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">import</span> os</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml">Encryption</a>(object):</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="stringliteral">    https://cryptobook.nakov.com/symmetric-key-ciphers/aes-encrypt-decrypt-examples</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="stringliteral">    while this is not added to the setup.py (the encryption feature is probably needed</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="stringliteral">    by only a few, in order to use it, you need to pip install:</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="stringliteral">    pycryptodome</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="stringliteral">    scrypt</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    password = <span class="keywordtype">None</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    ending = <span class="stringliteral">&#39;$&#39;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml">   35</a></span>&#160;    Save=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">def </span>__init__(self,pwd=None,ending=None):</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordflow">if</span> pwd != <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            Encryption.password = pwd</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">if</span> ending != <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordflow">if</span> ending == <span class="stringliteral">&#39;&#39;</span> <span class="keywordflow">or</span> Encryption.ending <span class="keywordflow">in</span> [<span class="stringliteral">&#39;&#39;</span>,<span class="keywordtype">None</span>]:</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                ending = <span class="stringliteral">&#39;$&#39;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            Encryption.ending = ending</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">def </span>__encrypt_AES_GCM(self,msg, password=None):</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keyword">import</span> scrypt</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keywordflow">if</span> password == <span class="keywordtype">None</span>: password=self.<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a9dbb300e28bc21c8dab41b01883918eb">password</a>.encode()</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        kdfSalt = os.urandom(16)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        secretKey = scrypt.hash(password, kdfSalt, N=16384, r=8, p=1, buflen=32)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        aesCipher = AES.new(secretKey, AES.MODE_GCM)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        ciphertext, authTag = aesCipher.encrypt_and_digest(msg)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">return</span> (kdfSalt, ciphertext, aesCipher.nonce, authTag)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">def </span>__decrypt_AES_GCM(self,encryptedMsg, password=None):</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keyword">import</span> scrypt</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">if</span> password == <span class="keywordtype">None</span>: password=self.<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a9dbb300e28bc21c8dab41b01883918eb">password</a>.encode()</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        (kdfSalt, ciphertext, nonce, authTag) = encryptedMsg</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        secretKey = scrypt.hash(password, kdfSalt, N=16384, r=8, p=1, buflen=32)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        aesCipher = AES.new(secretKey, AES.MODE_GCM, nonce)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        plaintext = aesCipher.decrypt_and_verify(ciphertext, authTag)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">return</span> plaintext</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">def </span>Decrypt(self,text):</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keyword">import</span> binascii</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        kdfSalt=binascii.unhexlify(text[0:32])</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        aesIV=binascii.unhexlify(text[32:64])</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        authTag=binascii.unhexlify(text[64:96])</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        ciphertext=binascii.unhexlify(text[96:])</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        encryptedMsg=(kdfSalt, ciphertext, aesIV, authTag)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        plaintext=self.<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a958db5669b5500eec36606c1c2eaade3">__decrypt_AES_GCM</a>(encryptedMsg)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">return</span> plaintext</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">def </span>Encrypt(self,text):</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">import</span> binascii</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        (kdfSalt, ciphertext, aesIV, authTag)=self.<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#ac1450bdfc44b3c045ea13e1707874099">__encrypt_AES_GCM</a>(text, self.<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a9dbb300e28bc21c8dab41b01883918eb">password</a>)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        Encryption.Save=(kdfSalt, ciphertext, aesIV, authTag)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        kdfSaltText=binascii.hexlify(kdfSalt)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        ciphertextText=binascii.hexlify(ciphertext)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        aesIVText=binascii.hexlify(aesIV)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        authtagText=binascii.hexlify(authTag)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">return</span> kdfSaltText+aesIVText+authtagText+ciphertextText</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">def </span>WriteEncryptedLines(self,filename,lines):</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        textToWrite=<span class="stringliteral">&#39;&#39;</span>.join(lines)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a9dbb300e28bc21c8dab41b01883918eb">password</a> != <span class="keywordtype">None</span> <span class="keywordflow">and</span> os.path.splitext(filename)[0].endswith(self.<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a8330751aadc5b23e4f85413749f50c92">ending</a>):</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                textToWrite=self.<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a1d0935041f7ed5628214da1e8645d86c">Encrypt</a>(textToWrite.encode()).decode()</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">except</span> ModuleNotFoundError: <span class="comment"># pragma: no cover</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                <span class="keywordflow">raise</span> IOError(<span class="stringliteral">&#39;file cannot be encrypted&#39;</span>)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keyword">with</span> open(filename,<span class="stringliteral">&#39;w&#39;</span>) <span class="keyword">as</span> f:</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            f.write(textToWrite)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">def </span>ReadEncryptedLines(self,filename,split=True):</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keyword">with</span> open(filename,<span class="stringliteral">&#39;r&#39;</span>) <span class="keyword">as</span> f:</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            text=f.readlines()</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">if</span> len(text)==1:</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a9dbb300e28bc21c8dab41b01883918eb">password</a> != <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                    text=self.<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#af65ccfee3596c847294d7cc81d3245da">Decrypt</a>(text[0].encode()).decode()</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    <span class="keywordflow">if</span> split:</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                        text=text.splitlines(<span class="keyword">True</span>)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    <span class="keywordflow">raise</span> IOError(<span class="stringliteral">&#39;decryption failed&#39;</span>)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordflow">raise</span> IOError(<span class="stringliteral">&#39;file is encrypted&#39;</span>)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> text</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordflow">if</span> __name__ == <span class="stringliteral">&#39;__main__&#39;</span>: <span class="comment"># pragma: no cover</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    pwd=<a class="code" href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml">Encryption</a>(pwd=<span class="stringliteral">&#39;test&#39;</span>,ending=<span class="stringliteral">&#39;$&#39;</span>)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    lines=[<span class="stringliteral">&#39;This is a test\n&#39;</span>,<span class="stringliteral">&#39;of the emergency broadcast system\n&#39;</span>]</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    pwd.WriteEncryptedLines(<span class="stringliteral">&#39;test$.txt&#39;</span>,lines)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    print(pwd.ReadEncryptedLines(<span class="stringliteral">&#39;test$.txt&#39;</span>))</div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclassSignalIntegrity_1_1App_1_1Encryption_1_1Encryption_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml">SignalIntegrity.App.Encryption.Encryption</a></div><div class="ttdef"><b>Definition:</b> <a href="Encryption_8py_source.xhtml#l00035">Encryption.py:35</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1App_1_1Encryption_1_1Encryption_xhtml_af65ccfee3596c847294d7cc81d3245da"><div class="ttname"><a href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#af65ccfee3596c847294d7cc81d3245da">SignalIntegrity.App.Encryption.Encryption.Decrypt</a></div><div class="ttdeci">def Decrypt(self, text)</div><div class="ttdef"><b>Definition:</b> <a href="Encryption_8py_source.xhtml#l00067">Encryption.py:67</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1App_1_1Encryption_1_1Encryption_xhtml_a1d0935041f7ed5628214da1e8645d86c"><div class="ttname"><a href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a1d0935041f7ed5628214da1e8645d86c">SignalIntegrity.App.Encryption.Encryption.Encrypt</a></div><div class="ttdeci">def Encrypt(self, text)</div><div class="ttdef"><b>Definition:</b> <a href="Encryption_8py_source.xhtml#l00077">Encryption.py:77</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1App_1_1Encryption_1_1Encryption_xhtml_a9dbb300e28bc21c8dab41b01883918eb"><div class="ttname"><a href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a9dbb300e28bc21c8dab41b01883918eb">SignalIntegrity.App.Encryption.Encryption.password</a></div><div class="ttdeci">password</div><div class="ttdef"><b>Definition:</b> <a href="Encryption_8py_source.xhtml#l00036">Encryption.py:36</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1App_1_1Encryption_1_1Encryption_xhtml_a958db5669b5500eec36606c1c2eaade3"><div class="ttname"><a href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a958db5669b5500eec36606c1c2eaade3">SignalIntegrity.App.Encryption.Encryption.__decrypt_AES_GCM</a></div><div class="ttdeci">def __decrypt_AES_GCM(self, encryptedMsg, password=None)</div><div class="ttdef"><b>Definition:</b> <a href="Encryption_8py_source.xhtml#l00057">Encryption.py:57</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1App_1_1Encryption_1_1Encryption_xhtml_ac1450bdfc44b3c045ea13e1707874099"><div class="ttname"><a href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#ac1450bdfc44b3c045ea13e1707874099">SignalIntegrity.App.Encryption.Encryption.__encrypt_AES_GCM</a></div><div class="ttdeci">def __encrypt_AES_GCM(self, msg, password=None)</div><div class="ttdef"><b>Definition:</b> <a href="Encryption_8py_source.xhtml#l00047">Encryption.py:47</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1App_1_1Encryption_1_1Encryption_xhtml_a8330751aadc5b23e4f85413749f50c92"><div class="ttname"><a href="classSignalIntegrity_1_1App_1_1Encryption_1_1Encryption.xhtml#a8330751aadc5b23e4f85413749f50c92">SignalIntegrity.App.Encryption.Encryption.ending</a></div><div class="ttdeci">string ending</div><div class="ttdef"><b>Definition:</b> <a href="Encryption_8py_source.xhtml#l00037">Encryption.py:37</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
