<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/Lib/Parsers/DUTSParametersNumericParser.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.5.0</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_ba9856180bcd39f2b51d38e1b9ddb228.xhtml">Lib</a></li><li class="navelem"><a class="el" href="dir_527c090b61d38d7ca12ceea3c3f5cd9f.xhtml">Parsers</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">DUTSParametersNumericParser.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral"> network analyzer simulation DUT s-parameters from netlists</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2021 Nubis Communications, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># Copyright (c) 2018-2020 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemSParametersParser.xhtml">SignalIntegrity.Lib.Parsers.SystemSParametersParser</a> <span class="keyword">import</span> SystemSParametersNumericParser</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a> <span class="keyword">import</span> SignalIntegrityException,SignalIntegrityExceptionNetworkAnalyzer</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml">DUTSParametersNumericParser</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemSParametersParser_1_1SystemSParametersNumericParser.xhtml">SystemSParametersNumericParser</a>):</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;generates s-parameters of a DUT from a network analyzer model netlist&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#aa71d0907b8c593b301ce8f2eedc5c4ad">__init__</a>(self, f=None, args=None, callback=None, cacheFileName=None, Z0=50.):</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;constructor  </span></div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml">   29</a></span>&#160;<span class="stringliteral">        frequencies may be provided at construction time (or not for symbolic solutions).</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="stringliteral">        @param f (optional) list of frequencies</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="stringliteral">        @param args (optional) string arguments for the circuit.</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="stringliteral">        @param callback (optional) function taking one argument as a callback</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="stringliteral">        @param cacheFileName (optional) string name of file used to cache results</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="stringliteral">        @param Z0 float (optional, defaults to 50.) reference impedance for the calculation</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="stringliteral">        @remark Arguments are provided on a line as pairs of names and values separated by a space.  </span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">        The optional callback is used as described in the class CallBacker.  </span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">        The use of the cacheFileName is described in the class LineCache  </span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a5ad7df1d5b617a7540e196a2e2fecac5">NetworkAnalyzerProjectFile</a>=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#ab545e9d34c8213512f37b48ddaa07828">NetworkAnalyzerPortConnectionList</a>=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        SystemSParametersNumericParser.__init__(self, f, args, callback, cacheFileName, Z0)</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#aa71d0907b8c593b301ce8f2eedc5c4ad">   42</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a5ead5cf1fbb767c3ef67b6acf3b0bce3">HashValue</a>(self,stuffToHash=&#39;&#39;):</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Generates the hash for a definition.  </span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">        It is formed by hashing the port connection with whatever else is hashed.</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">        @param stuffToHash repr of stuff to hash</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">        @remark derived classes should override this method and call the base class HashValue with their stuff added</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">        @return integer hash value</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">return</span> SystemSParametersNumericParser.HashValue(self,repr(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#ab545e9d34c8213512f37b48ddaa07828">NetworkAnalyzerPortConnectionList</a>)+stuffToHash)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">def </span>ConfigureForDUTCalculation(self):</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Helpers_1_1LineSplitter.xhtml">SignalIntegrity.Lib.Helpers.LineSplitter</a> <span class="keyword">import</span> LineSplitter</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        numPorts=0</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a5ead5cf1fbb767c3ef67b6acf3b0bce3">   53</a></span>&#160;        <span class="comment"># first find the network analyzer model device</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        spNetList=[]</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">for</span> line <span class="keywordflow">in</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#ad92a05bc1289cfd9cb3065aa6371e8fb">m_lines</a>:</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            token=LineSplitter(line)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keywordflow">if</span> token[0]==<span class="stringliteral">&#39;device&#39;</span>:</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                <span class="keywordflow">if</span> token[3]==<span class="stringliteral">&#39;networkanalyzermodel&#39;</span>:</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                    naRefDeg=token[1]</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                    numPorts=int(token[2])</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                    <span class="keywordflow">for</span> tokenIndex <span class="keywordflow">in</span> range(len(token)):</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                        <span class="keywordflow">if</span> token[tokenIndex]==<span class="stringliteral">&#39;file&#39;</span>:</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                            self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a5ad7df1d5b617a7540e196a2e2fecac5">NetworkAnalyzerProjectFile</a>=token[tokenIndex+1] </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="keywordflow">else</span>: spNetList.append(line)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">else</span>: spNetList.append(line)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">if</span> numPorts==0:</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="comment"># the network analyzer model has been removed from the netlist</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="comment"># find all of the device ports connected to the network analyzer model device ports</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        naPortConnections=[[] <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(numPorts)]</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        spNetList2=[]</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">for</span> line <span class="keywordflow">in</span> spNetList:</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            token=LineSplitter(line)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordflow">if</span> token[0]==<span class="stringliteral">&#39;connect&#39;</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                theseConnections=[(token[2*i+1],token[2*i+2]) <span class="keywordflow">for</span> i <span class="keywordflow">in</span> range(0,(len(token)-1)//2)]</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <span class="keywordflow">if</span> any([device==naRefDeg <span class="keywordflow">for</span> (device,port) <span class="keywordflow">in</span> theseConnections]):</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    <span class="keywordflow">for</span> (device,port) <span class="keywordflow">in</span> theseConnections:</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                        <span class="keywordflow">if</span> device==naRefDeg:</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                            devicePortIndex=int(port)-1</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                            <span class="keywordflow">for</span> (d,p) <span class="keywordflow">in</span> theseConnections:</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                <span class="keywordflow">if</span> d!=naRefDeg:</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                    naPortConnections[devicePortIndex].append((d,p))</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                            <span class="keywordflow">break</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="keywordflow">else</span>: spNetList2.append(line)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">else</span>: spNetList2.append(line)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="comment"># all of the connections to network analyzer model have been removed</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="comment"># add back connections of other devices that are connected together</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">for</span> pci <span class="keywordflow">in</span> range(len(naPortConnections)):</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">if</span> len(naPortConnections[pci]) &gt; 1:</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                spNetList2.append(<span class="stringliteral">&#39;connect &#39;</span>+<span class="stringliteral">&#39; &#39;</span>.join([<span class="stringliteral">&#39; &#39;</span>.join(dp) <span class="keywordflow">for</span> dp <span class="keywordflow">in</span> naPortConnections[pci]]))</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="comment"># connect ports to the system that was connected to the network analyzer model</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        portNumber=1</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#ab545e9d34c8213512f37b48ddaa07828">NetworkAnalyzerPortConnectionList</a>=[<span class="keyword">False</span> <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(len(naPortConnections))]</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">for</span> pci <span class="keywordflow">in</span> range(len(naPortConnections)):</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">if</span> len(naPortConnections[pci])&gt;0:</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                spNetList2.append(<span class="stringliteral">&#39;port &#39;</span>+str(portNumber)+<span class="stringliteral">&#39; &#39;</span>+<span class="stringliteral">&#39; &#39;</span>.join(naPortConnections[pci][0]))</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#ab545e9d34c8213512f37b48ddaa07828">NetworkAnalyzerPortConnectionList</a>[pci]=<span class="keyword">True</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                portNumber=portNumber+1</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#ad92a05bc1289cfd9cb3065aa6371e8fb">m_lines</a>=spNetList2</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a8d7c0357cfcdfd41f8cca9627ff9a61f">SParameters</a>(self,solvetype=&#39;block&#39;):</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Compute the s-parameters of the DUT in a network analyzer simulation netlist.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral">        @param solvetype (optional) string how to solve it. (defaults to &#39;block&#39;).</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral">        @return instance of class SParameters as the solution of the network.</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="stringliteral">        @remark valid solvetype strings are:</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="stringliteral">        - &#39;block&#39; - use the block matrix solution method.</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="stringliteral">        - &#39;direct&#39; - use the direct method.  </span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">        &#39;block&#39; is faster and preferred, but direct is provided as an alternative and</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">        for testing. (Previously, instances were found where the block method failed,</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">        but the direct method did not - but this possibility is thought to be impossible</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">        now.</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a31cb28fa94ae28c17ac1bec66e1c4642">ConfigureForDUTCalculation</a>()</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a5ad7df1d5b617a7540e196a2e2fecac5">NetworkAnalyzerProjectFile</a> != <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordflow">return</span> (SystemSParametersNumericParser.SParameters(self,solvetype),self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a5ad7df1d5b617a7540e196a2e2fecac5">NetworkAnalyzerProjectFile</a>)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">except</span> SignalIntegrityException <span class="keyword">as</span> e:</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a8d7c0357cfcdfd41f8cca9627ff9a61f">  117</a></span>&#160;                <span class="keywordflow">raise</span> SignalIntegrityExceptionNetworkAnalyzer(e.message)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">return</span> (<span class="keywordtype">None</span>,<span class="keywordtype">None</span>)</div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml">SignalIntegrity.Lib.Parsers.DUTSParametersNumericParser.DUTSParametersNumericParser</a></div><div class="ttdoc">generates s-parameters of a DUT from a network analyzer model netlist</div><div class="ttdef"><b>Definition:</b> <a href="DUTSParametersNumericParser_8py_source.xhtml#l00029">DUTSParametersNumericParser.py:29</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser_xhtml_ad92a05bc1289cfd9cb3065aa6371e8fb"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#ad92a05bc1289cfd9cb3065aa6371e8fb">SignalIntegrity.Lib.Parsers.DUTSParametersNumericParser.DUTSParametersNumericParser.m_lines</a></div><div class="ttdeci">m_lines</div><div class="ttdef"><b>Definition:</b> <a href="DUTSParametersNumericParser_8py_source.xhtml#l00104">DUTSParametersNumericParser.py:104</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Helpers_1_1LineSplitter_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Helpers_1_1LineSplitter.xhtml">SignalIntegrity.Lib.Helpers.LineSplitter</a></div><div class="ttdef"><b>Definition:</b> <a href="LineSplitter_8py_source.xhtml#l00001">LineSplitter.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser_xhtml_a5ead5cf1fbb767c3ef67b6acf3b0bce3"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a5ead5cf1fbb767c3ef67b6acf3b0bce3">SignalIntegrity.Lib.Parsers.DUTSParametersNumericParser.DUTSParametersNumericParser.HashValue</a></div><div class="ttdeci">def HashValue(self, stuffToHash='')</div><div class="ttdoc">Generates the hash for a definition.</div><div class="ttdef"><b>Definition:</b> <a href="DUTSParametersNumericParser_8py_source.xhtml#l00053">DUTSParametersNumericParser.py:53</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser_xhtml_a8d7c0357cfcdfd41f8cca9627ff9a61f"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a8d7c0357cfcdfd41f8cca9627ff9a61f">SignalIntegrity.Lib.Parsers.DUTSParametersNumericParser.DUTSParametersNumericParser.SParameters</a></div><div class="ttdeci">def SParameters(self, solvetype='block')</div><div class="ttdoc">Compute the s-parameters of the DUT in a network analyzer simulation netlist.</div><div class="ttdef"><b>Definition:</b> <a href="DUTSParametersNumericParser_8py_source.xhtml#l00117">DUTSParametersNumericParser.py:117</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser_xhtml_a5ad7df1d5b617a7540e196a2e2fecac5"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a5ad7df1d5b617a7540e196a2e2fecac5">SignalIntegrity.Lib.Parsers.DUTSParametersNumericParser.DUTSParametersNumericParser.NetworkAnalyzerProjectFile</a></div><div class="ttdeci">NetworkAnalyzerProjectFile</div><div class="ttdef"><b>Definition:</b> <a href="DUTSParametersNumericParser_8py_source.xhtml#l00043">DUTSParametersNumericParser.py:43</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemSParametersParser_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemSParametersParser.xhtml">SignalIntegrity.Lib.Parsers.SystemSParametersParser</a></div><div class="ttdef"><b>Definition:</b> <a href="SystemSParametersParser_8py_source.xhtml#l00001">SystemSParametersParser.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Exception_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a></div><div class="ttdef"><b>Definition:</b> <a href="Exception_8py_source.xhtml#l00001">Exception.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemSParametersParser_1_1SystemSParametersNumericParser_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemSParametersParser_1_1SystemSParametersNumericParser.xhtml">SignalIntegrity.Lib.Parsers.SystemSParametersParser.SystemSParametersNumericParser</a></div><div class="ttdoc">generates system s-parameters from a netlist</div><div class="ttdef"><b>Definition:</b> <a href="SystemSParametersParser_8py_source.xhtml#l00035">SystemSParametersParser.py:35</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser_xhtml_aa71d0907b8c593b301ce8f2eedc5c4ad"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#aa71d0907b8c593b301ce8f2eedc5c4ad">SignalIntegrity.Lib.Parsers.DUTSParametersNumericParser.DUTSParametersNumericParser.__init__</a></div><div class="ttdeci">def __init__(self, f=None, args=None, callback=None, cacheFileName=None, Z0=50.)</div><div class="ttdoc">constructor   frequencies may be provided at construction time (or not for symbolic solutions).</div><div class="ttdef"><b>Definition:</b> <a href="DUTSParametersNumericParser_8py_source.xhtml#l00042">DUTSParametersNumericParser.py:42</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser_xhtml_ab545e9d34c8213512f37b48ddaa07828"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#ab545e9d34c8213512f37b48ddaa07828">SignalIntegrity.Lib.Parsers.DUTSParametersNumericParser.DUTSParametersNumericParser.NetworkAnalyzerPortConnectionList</a></div><div class="ttdeci">NetworkAnalyzerPortConnectionList</div><div class="ttdef"><b>Definition:</b> <a href="DUTSParametersNumericParser_8py_source.xhtml#l00044">DUTSParametersNumericParser.py:44</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser_xhtml_a31cb28fa94ae28c17ac1bec66e1c4642"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1DUTSParametersNumericParser_1_1DUTSParametersNumericParser.xhtml#a31cb28fa94ae28c17ac1bec66e1c4642">SignalIntegrity.Lib.Parsers.DUTSParametersNumericParser.DUTSParametersNumericParser.ConfigureForDUTCalculation</a></div><div class="ttdeci">def ConfigureForDUTCalculation(self)</div><div class="ttdef"><b>Definition:</b> <a href="DUTSParametersNumericParser_8py_source.xhtml#l00055">DUTSParametersNumericParser.py:55</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
