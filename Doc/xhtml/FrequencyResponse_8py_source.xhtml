<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/Lib/FrequencyDomain/FrequencyResponse.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.5.0</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_ba9856180bcd39f2b51d38e1b9ddb228.xhtml">Lib</a></li><li class="navelem"><a class="el" href="dir_e337560b59448cd859531e91e49e2676.xhtml">FrequencyDomain</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">FrequencyResponse.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">Frequency Response</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2021 Nubis Communications, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># Copyright (c) 2018-2020 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">from</span> numpy <span class="keyword">import</span> fft</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">import</span> math</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">import</span> cmath</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyDomain</a> <span class="keyword">import</span> FrequencyDomain</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1FrequencyList.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyList</a> <span class="keyword">import</span> EvenlySpacedFrequencyList</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1ImpulseResponse_1_1ImpulseResponse.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.ImpulseResponse</a> <span class="keyword">import</span> ImpulseResponse</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1TimeDescriptor_1_1TimeDescriptor.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.TimeDescriptor</a> <span class="keyword">import</span> TimeDescriptor</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Splines.xhtml">SignalIntegrity.Lib.Splines</a> <span class="keyword">import</span> Spline</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1ChirpZTransform.xhtml">SignalIntegrity.Lib.ChirpZTransform</a> <span class="keyword">import</span> CZT</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Rat.xhtml">SignalIntegrity.Lib.Rat</a> <span class="keyword">import</span> Rat</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml">FrequencyResponse</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml">FrequencyDomain</a>):</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;FrequencyResponse  </span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">    Frequency response view of a waveform assumed computed from the FrequencyResponse() method</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">    of a class ImpulseResponse, which is itself derived from the class Waveform.  In other words,</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">    it would contain complex frequency-domain values that, if multiplied by the values in an</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">    instance of class FrequencyContent, would filter the waveform in the frequency-domain.</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="stringliteral">    @see ImpulseResponse</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    oldSpline=<span class="keyword">True</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#af89c1b84b55a8388acf19c91be67a97e">__init__</a>(self,f=None,resp=None):</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml">   44</a></span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Constructor</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">        @param f instance of class FrequencyList</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">        @param resp list of complex values</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">        @remark</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">        It is assumed that the frequencies and the response provided were generated from</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="stringliteral">        the FrequencyResponse() method of the class ImpulseResponse.&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        FrequencyDomain.__init__(self,f,resp)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>(self,unit=None):</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Response</span></div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#af89c1b84b55a8388acf19c91be67a97e">   53</a></span>&#160;<span class="stringliteral">        @param unit string defining the desired units for the response.</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral">        @return list of frequency response values in the unit specified.</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">        @see FrequencyDomain.Values() for valid units.</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">Values</a>(unit)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">def </span>_DelayBy(self,TD):</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        fd=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">FrequencyList</a>()</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml">FrequencyResponse</a>(fd,</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">   61</a></span>&#160;        [self[n]*cmath.exp(-1j*2.*math.pi*fd[n]*TD)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(fd.N+1)])</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#aa301152e06c3881589eb5c70d53734f6">ImpulseResponse</a>(self,td=None,adjustDelay=True):</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;the time-domain impulse response</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="stringliteral">        @param td (optional) instance of class TimeDescriptor.</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="stringliteral">        @param adjustDelay (optional) bool whether to adjust the delay.</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="stringliteral">        @return instance of class ImpulseResponse corresponding to the frequency response.</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="stringliteral">        @remark</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="stringliteral">        If the optional time descriptor is supplied, the resulting impulse response is resampled</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="stringliteral">        onto that time descriptor.</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="stringliteral">        @note</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="stringliteral">        internally, the frequency response is either evenly spaced or not.</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="stringliteral">        whether evenly spaced, whether a time descriptor is specified and</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="stringliteral">        whether to adjust delay determines all possibilities.</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="stringliteral">        | evenly spaced | time descriptor | adjust delay | Situation                                         |</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="stringliteral">        |:------------: |:---------------:|:------------:|:---------------------------------------------------                                          |</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">        |  False        | False           | X            | Cannot be done                                    |</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">        |  False        | True            | X            | Spline resamples to time descriptor               |</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">        |  True         | False           | False        | generic impulse response                          |</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">        |  True         | False           | True         | impulse response with delay adjusted              |</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral">        |  True         | True            | X            | CZT resamples to td - ad forced to T              |</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral">        Much of these options are meant for internal use.  Mostly you should simply use ImpulseResponse()</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">        with the default arguments.</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">        @remark td can also be supplied as a float or int.  In this situation, the TimeDescriptor corresponding</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral">        to the internal FrequencyList is used, but the td supplied supplants the sample rate of the TimeDescriptor.</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral">        In this way, only the sample rate can be specified in the resampling, and all processing as shown in the</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">        table above will assume that a time descriptor has been supplied of this calculated type.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        fd = self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">FrequencyList</a>()</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">if</span> isinstance(td,float) <span class="keywordflow">or</span> isinstance(td,int):</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            Fs=float(td)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            td=fd.TimeDescriptor()</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            td = <a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1TimeDescriptor_1_1TimeDescriptor.xhtml">TimeDescriptor</a>(0.,2*int(math.ceil(Fs*td.K/2./td.Fs)),Fs)</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#aa301152e06c3881589eb5c70d53734f6">   97</a></span>&#160;        evenlySpaced = fd.CheckEvenlySpaced()</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> evenlySpaced <span class="keywordflow">and</span> td <span class="keywordflow">is</span> <span class="keywordtype">None</span>: <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> evenlySpaced <span class="keywordflow">and</span> <span class="keywordflow">not</span> td <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            newfd = td.FrequencyList()</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            oldfd = fd</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ac3ff9ae74e2d840ee2cc9b19bf67453f">oldSpline</a>:</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="comment"># pragma: silent include outdent</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                Poly=<a class="code" href="classSignalIntegrity_1_1Lib_1_1Splines_1_1Splines_1_1Spline.xhtml">Spline</a>(oldfd,self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>())</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                newresp=[Poly.Evaluate(f) <span class="keywordflow">if</span> f &lt;= oldfd[-1] <span class="keywordflow">else</span> 0.0001 <span class="keywordflow">for</span> f <span class="keywordflow">in</span> newfd]</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                <span class="keyword">from</span> scipy.interpolate <span class="keyword">import</span> CubicSpline</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                cs=CubicSpline(oldfd,self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>())</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                newresp=cs(newfd)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                newresp=[nr <span class="keywordflow">if</span> f &lt;= oldfd[-1] <span class="keywordflow">else</span> 0.0001 <span class="keywordflow">for</span> f,nr <span class="keywordflow">in</span> zip(newfd,newresp)]</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="comment"># pragma: silent include indent</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            newfr=<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml">FrequencyResponse</a>(newfd,newresp)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordflow">return</span> newfr.ImpulseResponse(<span class="keywordtype">None</span>,adjustDelay)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">if</span> evenlySpaced <span class="keywordflow">and</span> td <span class="keywordflow">is</span> <span class="keywordtype">None</span> <span class="keywordflow">and</span> <span class="keywordflow">not</span> adjustDelay:</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            yfp=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>()</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            ynp=[yfp[fd.N-nn].conjugate() <span class="keywordflow">for</span> nn <span class="keywordflow">in</span> range(1,fd.N)]</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            y=yfp+ynp</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            y[0]=y[0].real</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            y[fd.N]=y[fd.N].real</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            Y=fft.ifft(y)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            td=fd.TimeDescriptor()</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            tp=[Y[k].real <span class="keywordflow">for</span> k <span class="keywordflow">in</span> range(td.K//2)]</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            tn=[Y[k].real <span class="keywordflow">for</span> k <span class="keywordflow">in</span> range(td.K//2,td.K)]</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            Y=tn+tp</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1ImpulseResponse_1_1ImpulseResponse.xhtml">ImpulseResponse</a>(td,Y)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">if</span> evenlySpaced <span class="keywordflow">and</span> td <span class="keywordflow">is</span> <span class="keywordtype">None</span> <span class="keywordflow">and</span> adjustDelay:</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            TD=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#a51834fcd77ec8cf734e9ea7073ad56ff">_FractionalDelayTime</a>()</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">return</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#a56bf222d1e1c8d79c8ea8e8c5105b88c">_DelayBy</a>(-TD).<a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1ImpulseResponse_1_1ImpulseResponse.xhtml">ImpulseResponse</a>(<span class="keywordtype">None</span>,<span class="keyword">False</span>).DelayBy(TD)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">if</span> evenlySpaced <span class="keywordflow">and</span> <span class="keywordflow">not</span> td <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="comment"># if td is a float and not a time descriptor, it&#39;s assumed to be a</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="comment"># sample rate.  In this case, the number of points in a</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="comment"># time descriptor are filled in representing the time content of self</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">return</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#a6aa7e8bdecb4f17e41d783d00a27fdd8">Resample</a>(td.FrequencyList()).<a class="code" href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1ImpulseResponse_1_1ImpulseResponse.xhtml">ImpulseResponse</a>()</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">def </span>_Pad(self,P):</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Pads the frequency response</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="stringliteral">        @param P int number of frequency points to pad to (-1)</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="stringliteral">        @note N+1 is the number of points in the selfs frequency response.</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="stringliteral">        if P==N, the original response is returned.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="stringliteral">        if P&lt;N, the response is truncated to P+1 frequency points.</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="stringliteral">        if P&gt;N, the response is zero padded to P+1 frequency points.</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        fd=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">FrequencyList</a>()</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">if</span> P == fd.N: X=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>()</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">elif</span> P &lt; fd.N: X=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>()[:P+1]</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">else</span>: X=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>()+[0]*(P-fd.N)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml">FrequencyResponse</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1EvenlySpacedFrequencyList.xhtml">EvenlySpacedFrequencyList</a>(P*fd.Fe/fd.N,P),X)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keyword">def </span>_Decimate(self,D):</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;decimates the frequency response</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="stringliteral">        @param D integer decimation factor.</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="stringliteral">        @note D is assumed &gt;= 1.</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="stringliteral">        N+1 is the number of points in the selfs frequency response.</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="stringliteral">        N/D+1 is the number of points in the decimated frequency response.</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        fd=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">FrequencyList</a>()</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        R=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>()</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        X=[R[n*D] <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(fd.N//D+1)]</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml">FrequencyResponse</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1EvenlySpacedFrequencyList.xhtml">EvenlySpacedFrequencyList</a>(fd.N//D*D//fd.N*fd.Fe,fd.N//D),X)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keyword">def </span>_SplineResample(self,fdp):</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        fd=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">FrequencyList</a>()</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ac3ff9ae74e2d840ee2cc9b19bf67453f">oldSpline</a>:</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="comment"># pragma: silent include outdent</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            Poly=<a class="code" href="classSignalIntegrity_1_1Lib_1_1Splines_1_1Splines_1_1Spline.xhtml">Spline</a>(fd,self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>())</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            newresp=[Poly.Evaluate(f) <span class="keywordflow">if</span> f &lt;= fd[-1] <span class="keywordflow">else</span> 0.0001 <span class="keywordflow">for</span> f <span class="keywordflow">in</span> fdp]</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keyword">from</span> scipy.interpolate <span class="keyword">import</span> CubicSpline</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            cs=CubicSpline(fd,self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>())</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            newresp=cs(fdp)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            newresp=[nr <span class="keywordflow">if</span> f &lt;= fd[-1] <span class="keywordflow">else</span> 0.0001 <span class="keywordflow">for</span> f,nr <span class="keywordflow">in</span> zip(fdp,newresp)]</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="comment"># pragma: silent include indent</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml">FrequencyResponse</a>(fdp,newresp)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#a6aa7e8bdecb4f17e41d783d00a27fdd8">Resample</a>(self,fdp):</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Resamples to a different set of frequencies</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="stringliteral">        @param fdp instance of class FrequencyList to resample to</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="stringliteral">        @return instance of class FrequencyResponse containing resampled self</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="stringliteral">        @remark</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="stringliteral">        Resampling first attempts to find a ratio of numbers of points</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="stringliteral">        to resample to.  If a reasonable ratio is found, pure DFT and IDFT</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="stringliteral">        methods are utilized along with padding and decimation.</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="stringliteral">        Otherwise, the chirp z transform is used to resample.</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="stringliteral">        If the points are unevenly spaced, there is no choice but to resample with</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="stringliteral">        splines.</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="stringliteral">        @see FrequencyResponse.ResampleCZT()</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="stringliteral">        @see Spline</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        fd=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">FrequencyList</a>()</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1FrequencyList.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyList</a> <span class="keyword">import</span> GenericFrequencyList</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> fd.CheckEvenlySpaced():</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">if</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1GenericFrequencyList.xhtml">GenericFrequencyList</a>([0]+fd).CheckEvenlySpaced():</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="comment"># only the DC point is missing.  Restore that first</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                DCRestored=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ae1b4db8ba029589c5a628fa3a42c2448">_SplineResample</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1GenericFrequencyList.xhtml">GenericFrequencyList</a>([0]+fd))</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                <span class="keywordflow">return</span> DCRestored.Resample(fdp)</div>
<div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#a6aa7e8bdecb4f17e41d783d00a27fdd8">  200</a></span>&#160;        <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        evenlySpaced = fd.CheckEvenlySpaced() <span class="keywordflow">and</span> fdp.CheckEvenlySpaced()</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> evenlySpaced: <span class="keywordflow">return</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ae1b4db8ba029589c5a628fa3a42c2448">_SplineResample</a>(fdp)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        R=Rat(fd.Fe/fdp.Fe*fdp.N); ND1=R[0]; D2=R[1]</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">if</span> ND1 &lt; fd.N: R=Rat(fd.Fe/fdp.Fe*fdp.N/fd.N); ND1=R[0]*fd.N; D2=R[1]</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">if</span>  ND1 &gt; 50000: <span class="keywordflow">return</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#af61ffacaaef319b5b0752778bfe522e6">ResampleCZT</a>(fdp)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">if</span> ND1 == fd.N: fr=self</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">else</span>: fr=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#aa301152e06c3881589eb5c70d53734f6">ImpulseResponse</a>()._Pad(2*ND1).<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml">FrequencyResponse</a>(<span class="keywordtype">None</span>,<span class="keyword">False</span>)</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">if</span> D2*fdp.N != ND1: fr=fr._Pad(D2*fdp.N)</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">if</span> D2==1: <span class="keywordflow">return</span> fr</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">else</span>: <span class="keywordflow">return</span> fr._Decimate(D2)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keyword">def </span>_FractionalDelayTime(self):</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        ir = self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#aa301152e06c3881589eb5c70d53734f6">ImpulseResponse</a>(<span class="keywordtype">None</span>,adjustDelay=<span class="keyword">False</span>)</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        idx = ir.Values(<span class="stringliteral">&#39;abs&#39;</span>).index(max(ir.Values(<span class="stringliteral">&#39;abs&#39;</span>)))</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        TD = ir.td[idx] <span class="comment"># the time of the main peak</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="comment"># calculate the frequency response with this delay taken out</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="comment"># the fractional delay is based on the minimum adjustment to the phase of</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="comment"># the last point to make that point real</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        theta = self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#a56bf222d1e1c8d79c8ea8e8c5105b88c">_DelayBy</a>(-TD).<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>(<span class="stringliteral">&#39;rad&#39;</span>)[self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">FrequencyList</a>().N]</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="comment"># do not make this adjustment if the phase is of a tiny magnitude!</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">Response</a>(<span class="stringliteral">&#39;dB&#39;</span>)[self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">FrequencyList</a>().N]&lt;-90: theta=0.</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">if</span> theta &lt; -math.pi/2.: theta=-(math.pi+theta)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">elif</span> theta &gt; math.pi/2.: theta = math.pi-theta</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">else</span>: theta = -theta</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="comment"># calculate the fractional delay</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        TD=theta/2./math.pi/self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">FrequencyList</a>()[-1]</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">return</span> TD</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#af61ffacaaef319b5b0752778bfe522e6">ResampleCZT</a>(self,fdp,speedy=True):</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Uses the chirp z transform is used to resample.</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="stringliteral">        @param fdp instance of class FrequencyList to resample to</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="stringliteral">        @param speedy (optional) bool whether to use the fast version of the CZT()</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="stringliteral">        @return instance of class FrequencyResponse containing resampled self</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="stringliteral">        @see FrequencyResponse.Resample()</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="stringliteral">        @see CZT()</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        fd=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">FrequencyList</a>()</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        evenlySpaced = fd.CheckEvenlySpaced() <span class="keywordflow">and</span> fdp.CheckEvenlySpaced()</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> evenlySpaced: <span class="keywordflow">return</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ae1b4db8ba029589c5a628fa3a42c2448">_SplineResample</a>(fdp)</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        ir=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#aa301152e06c3881589eb5c70d53734f6">ImpulseResponse</a>()</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        TD=ir._FractionalDelayTime()</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        Ni=int(min(math.floor(fd.Fe*fdp.N/fdp.Fe),fdp.N))</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        Fei=Ni*fdp.Fe/fdp.N</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml">FrequencyResponse</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1EvenlySpacedFrequencyList.xhtml">EvenlySpacedFrequencyList</a>(Fei,Ni),</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            CZT(ir.DelayBy(-TD).<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">Values</a>(),ir.td.Fs,0,Fei,Ni,speedy)).\</div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#af61ffacaaef319b5b0752778bfe522e6">  244</a></span>&#160;            _Pad(fdp.N)._DelayBy(-fd.N/2./fd.Fe+TD)</div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain_xhtml_a3dc7b1e5eba8fb649156094dfdf7a893"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a3dc7b1e5eba8fb649156094dfdf7a893">SignalIntegrity.Lib.FrequencyDomain.FrequencyDomain.FrequencyDomain.Values</a></div><div class="ttdeci">def Values(self, unit=None)</div><div class="ttdoc">Values.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyDomain_8py_source.xhtml#l00077">FrequencyDomain.py:77</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse_xhtml_a56bf222d1e1c8d79c8ea8e8c5105b88c"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#a56bf222d1e1c8d79c8ea8e8c5105b88c">SignalIntegrity.Lib.FrequencyDomain.FrequencyResponse.FrequencyResponse._DelayBy</a></div><div class="ttdeci">def _DelayBy(self, TD)</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyResponse_8py_source.xhtml#l00063">FrequencyResponse.py:63</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1ChirpZTransform_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1ChirpZTransform.xhtml">SignalIntegrity.Lib.ChirpZTransform</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2ChirpZTransform_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1ImpulseResponse_1_1ImpulseResponse_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1ImpulseResponse_1_1ImpulseResponse.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.ImpulseResponse.ImpulseResponse</a></div><div class="ttdoc">impulse response of a filter as a waveform</div><div class="ttdef"><b>Definition:</b> <a href="ImpulseResponse_8py_source.xhtml#l00034">ImpulseResponse.py:34</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyDomain.FrequencyDomain</a></div><div class="ttdoc">base class for frequency domain elements.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyDomain_8py_source.xhtml#l00036">FrequencyDomain.py:36</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1FrequencyList_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1FrequencyList.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyList.FrequencyList</a></div><div class="ttdoc">Frequency lists.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyList_8py_source.xhtml#l00032">FrequencyList.py:32</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1TimeDescriptor_1_1TimeDescriptor_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1TimeDomain_1_1Waveform_1_1TimeDescriptor_1_1TimeDescriptor.xhtml">SignalIntegrity.Lib.TimeDomain.Waveform.TimeDescriptor.TimeDescriptor</a></div><div class="ttdoc">time-axis for waveforms</div><div class="ttdef"><b>Definition:</b> <a href="TimeDescriptor_8py_source.xhtml#l00029">TimeDescriptor.py:29</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse_xhtml_a6aa7e8bdecb4f17e41d783d00a27fdd8"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#a6aa7e8bdecb4f17e41d783d00a27fdd8">SignalIntegrity.Lib.FrequencyDomain.FrequencyResponse.FrequencyResponse.Resample</a></div><div class="ttdeci">def Resample(self, fdp)</div><div class="ttdoc">Resamples to a different set of frequencies.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyResponse_8py_source.xhtml#l00200">FrequencyResponse.py:200</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1GenericFrequencyList_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1GenericFrequencyList.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyList.GenericFrequencyList</a></div><div class="ttdoc">A generic list of frequencies assumed to be not evenly spaced.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyList_8py_source.xhtml#l00212">FrequencyList.py:212</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse_xhtml_af61ffacaaef319b5b0752778bfe522e6"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#af61ffacaaef319b5b0752778bfe522e6">SignalIntegrity.Lib.FrequencyDomain.FrequencyResponse.FrequencyResponse.ResampleCZT</a></div><div class="ttdeci">def ResampleCZT(self, fdp, speedy=True)</div><div class="ttdoc">Uses the chirp z transform is used to resample.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyResponse_8py_source.xhtml#l00244">FrequencyResponse.py:244</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse_xhtml_af89c1b84b55a8388acf19c91be67a97e"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#af89c1b84b55a8388acf19c91be67a97e">SignalIntegrity.Lib.FrequencyDomain.FrequencyResponse.FrequencyResponse.__init__</a></div><div class="ttdeci">def __init__(self, f=None, resp=None)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyResponse_8py_source.xhtml#l00053">FrequencyResponse.py:53</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse_xhtml_ac3ff9ae74e2d840ee2cc9b19bf67453f"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ac3ff9ae74e2d840ee2cc9b19bf67453f">SignalIntegrity.Lib.FrequencyDomain.FrequencyResponse.FrequencyResponse.oldSpline</a></div><div class="ttdeci">bool oldSpline</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyResponse_8py_source.xhtml#l00045">FrequencyResponse.py:45</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Splines_1_1Splines_1_1Spline_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Splines_1_1Splines_1_1Spline.xhtml">SignalIntegrity.Lib.Splines.Splines.Spline</a></div><div class="ttdoc">Splines.py.</div><div class="ttdef"><b>Definition:</b> <a href="Splines_8py_source.xhtml#l00024">Splines.py:24</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Splines_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Splines.xhtml">SignalIntegrity.Lib.Splines</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2Splines_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse_xhtml_ab4996cceccaa974296395d3039a9ca2a"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ab4996cceccaa974296395d3039a9ca2a">SignalIntegrity.Lib.FrequencyDomain.FrequencyResponse.FrequencyResponse.Response</a></div><div class="ttdeci">def Response(self, unit=None)</div><div class="ttdoc">Response.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyResponse_8py_source.xhtml#l00061">FrequencyResponse.py:61</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyResponse.FrequencyResponse</a></div><div class="ttdoc">FrequencyResponse   Frequency response view of a waveform assumed computed from the FrequencyResponse...</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyResponse_8py_source.xhtml#l00044">FrequencyResponse.py:44</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Rat_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Rat.xhtml">SignalIntegrity.Lib.Rat</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2Rat_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse_xhtml_aa301152e06c3881589eb5c70d53734f6"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#aa301152e06c3881589eb5c70d53734f6">SignalIntegrity.Lib.FrequencyDomain.FrequencyResponse.FrequencyResponse.ImpulseResponse</a></div><div class="ttdeci">def ImpulseResponse(self, td=None, adjustDelay=True)</div><div class="ttdoc">the time-domain impulse response</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyResponse_8py_source.xhtml#l00097">FrequencyResponse.py:97</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain_xhtml_a37f739efb0923d2a962945ab13df78ac"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyDomain_1_1FrequencyDomain.xhtml#a37f739efb0923d2a962945ab13df78ac">SignalIntegrity.Lib.FrequencyDomain.FrequencyDomain.FrequencyDomain.FrequencyList</a></div><div class="ttdeci">def FrequencyList(self)</div><div class="ttdoc">FrequencyList.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyDomain_8py_source.xhtml#l00050">FrequencyDomain.py:50</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse_xhtml_a51834fcd77ec8cf734e9ea7073ad56ff"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#a51834fcd77ec8cf734e9ea7073ad56ff">SignalIntegrity.Lib.FrequencyDomain.FrequencyResponse.FrequencyResponse._FractionalDelayTime</a></div><div class="ttdeci">def _FractionalDelayTime(self)</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyResponse_8py_source.xhtml#l00220">FrequencyResponse.py:220</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1EvenlySpacedFrequencyList_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1EvenlySpacedFrequencyList.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyList.EvenlySpacedFrequencyList</a></div><div class="ttdoc">A evenly spaced list of frequencies.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyList_8py_source.xhtml#l00196">FrequencyList.py:196</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse_xhtml_ae1b4db8ba029589c5a628fa3a42c2448"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyResponse_1_1FrequencyResponse.xhtml#ae1b4db8ba029589c5a628fa3a42c2448">SignalIntegrity.Lib.FrequencyDomain.FrequencyResponse.FrequencyResponse._SplineResample</a></div><div class="ttdeci">def _SplineResample(self, fdp)</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyResponse_8py_source.xhtml#l00168">FrequencyResponse.py:168</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
