<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: EyeDiagramBitmap Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.3.2</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceSignalIntegrity.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib.xhtml">Lib</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Eye.xhtml">Eye</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap.xhtml">EyeDiagramBitmap</a></li><li class="navelem"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml">EyeDiagramBitmap</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">EyeDiagramBitmap Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Generates the eye diagram bitmap and many associated measurements from it.  
 <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for EyeDiagramBitmap:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap__inherit__graph.svg" width="296" height="624"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Collaboration diagram for EyeDiagramBitmap:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap__coll__graph.svg" width="296" height="624"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5ead5cf1fbb767c3ef67b6acf3b0bce3"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a5ead5cf1fbb767c3ef67b6acf3b0bce3">HashValue</a> (self, stuffToHash='')</td></tr>
<tr class="memdesc:a5ead5cf1fbb767c3ef67b6acf3b0bce3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates the hash for a definition.  <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a5ead5cf1fbb767c3ef67b6acf3b0bce3">More...</a><br /></td></tr>
<tr class="separator:a5ead5cf1fbb767c3ef67b6acf3b0bce3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8388d249b60bce6843e31357121c36d4"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a8388d249b60bce6843e31357121c36d4">__init__</a> (self, callback=None, cacheFileName=None, YAxisMode='Auto', YMax=None, YMin=None, Rows=None, Cols=None, BaudRate=None, prbswf=None, EnhancementMode='Auto', EnhancementSteps=10, BitsPerSymbol=1)</td></tr>
<tr class="memdesc:a8388d249b60bce6843e31357121c36d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor Attempts to generate an eye diagram bitmap from the definition provided.  <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a8388d249b60bce6843e31357121c36d4">More...</a><br /></td></tr>
<tr class="separator:a8388d249b60bce6843e31357121c36d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ce234faa434f22d1287e9c5218fc3d9"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a3ce234faa434f22d1287e9c5218fc3d9">Bitmap</a> (self)</td></tr>
<tr class="memdesc:a3ce234faa434f22d1287e9c5218fc3d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the raw bitmap.  <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a3ce234faa434f22d1287e9c5218fc3d9">More...</a><br /></td></tr>
<tr class="separator:a3ce234faa434f22d1287e9c5218fc3d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97fc924689bb3b6243ac2fd901d7d642"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a97fc924689bb3b6243ac2fd901d7d642">ApplyJitterNoise</a> (self, NoiseSigma=0., JitterSigma=0., DeterministicJitter=0., MaxPixelsKernel=100000)</td></tr>
<tr class="memdesc:a97fc924689bb3b6243ac2fd901d7d642"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies jitter and/or noise to the eye diagram bitmap.  <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a97fc924689bb3b6243ac2fd901d7d642">More...</a><br /></td></tr>
<tr class="separator:a97fc924689bb3b6243ac2fd901d7d642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85a9afbd31ccc14de237f8149f99f6e8"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a85a9afbd31ccc14de237f8149f99f6e8">AutoAlign</a> (self, BERForAlignment=-3, AlignmentMode='Horizontal', HorizontalAlignment='Middle', VerticalAlignment='MaxMin')</td></tr>
<tr class="memdesc:a85a9afbd31ccc14de237f8149f99f6e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Automatically align the eye diagram.  <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a85a9afbd31ccc14de237f8149f99f6e8">More...</a><br /></td></tr>
<tr class="separator:a85a9afbd31ccc14de237f8149f99f6e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca020d6bf17e9ab0b799b5543c2cb201"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#aca020d6bf17e9ab0b799b5543c2cb201">Measure</a> (self, BERForMeasure=-6, DecisionMode='Mid', WaveformType='V')</td></tr>
<tr class="memdesc:aca020d6bf17e9ab0b799b5543c2cb201"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes measurements on the eye diagram.  <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#aca020d6bf17e9ab0b799b5543c2cb201">More...</a><br /></td></tr>
<tr class="separator:aca020d6bf17e9ab0b799b5543c2cb201"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a409fede69bfb7cd95c08ed90ddecd1a5"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a409fede69bfb7cd95c08ed90ddecd1a5">OpticalMeasure</a> (self, WaveformType='W', PinW=None)</td></tr>
<tr class="memdesc:a409fede69bfb7cd95c08ed90ddecd1a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes optical measurements on the eye diagram.  <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a409fede69bfb7cd95c08ed90ddecd1a5">More...</a><br /></td></tr>
<tr class="separator:a409fede69bfb7cd95c08ed90ddecd1a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb318087e325c834857bca0b2ab115c9"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#abb318087e325c834857bca0b2ab115c9">Bathtub</a> (self, DecadesFromJoin=0.25, MinPointsForFit=6)</td></tr>
<tr class="memdesc:abb318087e325c834857bca0b2ab115c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates bathtub curves on the eye diagram and calculates the error probabilities and rates.  <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#abb318087e325c834857bca0b2ab115c9">More...</a><br /></td></tr>
<tr class="separator:abb318087e325c834857bca0b2ab115c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43a8b76b19ac3946f4a6c4df1a736eed"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a43a8b76b19ac3946f4a6c4df1a736eed">Annotations</a> (self, MeanLevels=True, LevelExtents=True, EyeWidth=True, EyeHeight=True, Contours=True, WhichContours='Eye' # 'Eye' or 'All')</td></tr>
<tr class="memdesc:a43a8b76b19ac3946f4a6c4df1a736eed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates an annotation bitmap that goes along with the raw bitmap containing annotation marks.  <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a43a8b76b19ac3946f4a6c4df1a736eed">More...</a><br /></td></tr>
<tr class="separator:a43a8b76b19ac3946f4a6c4df1a736eed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a471a0c5837fc9ea7642b90b89feb8413"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a471a0c5837fc9ea7642b90b89feb8413">CreateImage</a> (self, LogIntensity=False, MinExponentLogIntensity=-6., MaxExponentLogIntensity=0, NumUI=1, Saturation=20., InvertImage=True, Color='#ffffff', AnnotationColor='#000000', ScaleX=100., ScaleY=100., LabelMeanLevels=False)</td></tr>
<tr class="memdesc:a471a0c5837fc9ea7642b90b89feb8413"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates the image (picture) from the raw bitmap and the annotation bit map.  <a href="classSignalIntegrity_1_1Lib_1_1Eye_1_1EyeDiagramBitmap_1_1EyeDiagramBitmap.xhtml#a471a0c5837fc9ea7642b90b89feb8413">More...</a><br /></td></tr>
<tr class="separator:a471a0c5837fc9ea7642b90b89feb8413"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker.xhtml">CallBacker</a></td></tr>
<tr class="memitem:a5580a7fcf0bfd317a8f8c7c80eefdd69 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker.xhtml#a5580a7fcf0bfd317a8f8c7c80eefdd69">__init__</a> (self, callback=None)</td></tr>
<tr class="memdesc:a5580a7fcf0bfd317a8f8c7c80eefdd69 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker.xhtml#a5580a7fcf0bfd317a8f8c7c80eefdd69">More...</a><br /></td></tr>
<tr class="separator:a5580a7fcf0bfd317a8f8c7c80eefdd69 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1aebee41f7b067b9fc11c28f87b27ba inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker.xhtml#ad1aebee41f7b067b9fc11c28f87b27ba">CallBack</a> (self, progressPercent)</td></tr>
<tr class="memdesc:ad1aebee41f7b067b9fc11c28f87b27ba inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is called periodically, which in turn calls any installed callback function.  <a href="classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker.xhtml#ad1aebee41f7b067b9fc11c28f87b27ba">More...</a><br /></td></tr>
<tr class="separator:ad1aebee41f7b067b9fc11c28f87b27ba inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9307eb7d2258b5f1df8bfc5f43effcab inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker.xhtml#a9307eb7d2258b5f1df8bfc5f43effcab">InstallCallback</a> (self, callback=None)</td></tr>
<tr class="memdesc:a9307eb7d2258b5f1df8bfc5f43effcab inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is an alternate way to supply the callback, if it cannot be installed during initialization of the derived class.  <a href="classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker.xhtml#a9307eb7d2258b5f1df8bfc5f43effcab">More...</a><br /></td></tr>
<tr class="separator:a9307eb7d2258b5f1df8bfc5f43effcab inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac93a2d2ea7a87653318147244b98b31c inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="memItemLeft" align="right" valign="top"><a id="ac93a2d2ea7a87653318147244b98b31c"></a>
def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker.xhtml#ac93a2d2ea7a87653318147244b98b31c">RemoveCallback</a> (self)</td></tr>
<tr class="memdesc:ac93a2d2ea7a87653318147244b98b31c inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes any callback previously installed. <br /></td></tr>
<tr class="separator:ac93a2d2ea7a87653318147244b98b31c inherit pub_methods_classSignalIntegrity_1_1Lib_1_1CallBacker_1_1CallBacker"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml">ResultsCache</a></td></tr>
<tr class="memitem:a19e3e370f701435403ddb078f27f1ecb inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#a19e3e370f701435403ddb078f27f1ecb">__init__</a> (self, name, filename=None)</td></tr>
<tr class="memdesc:a19e3e370f701435403ddb078f27f1ecb inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructor<br  />
 When a project with a given filename is processed, various results in that project can be cached.  <a href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#a19e3e370f701435403ddb078f27f1ecb">More...</a><br /></td></tr>
<tr class="separator:a19e3e370f701435403ddb078f27f1ecb inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaed8551afefa9ad488b67b7a9a8ed40 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#acaed8551afefa9ad488b67b7a9a8ed40">CheckCache</a> (self)</td></tr>
<tr class="memdesc:acaed8551afefa9ad488b67b7a9a8ed40 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called to see if the cache has results that can be used instead of processing the result.  <a href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#acaed8551afefa9ad488b67b7a9a8ed40">More...</a><br /></td></tr>
<tr class="separator:acaed8551afefa9ad488b67b7a9a8ed40 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf3d39d22f11766f437fdee4614fc027 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#abf3d39d22f11766f437fdee4614fc027">CacheResult</a> (self, keeperList=None)</td></tr>
<tr class="memdesc:abf3d39d22f11766f437fdee4614fc027 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="mdescLeft">&#160;</td><td class="mdescRight">Caches a calculated result.  <a href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#abf3d39d22f11766f437fdee4614fc027">More...</a><br /></td></tr>
<tr class="separator:abf3d39d22f11766f437fdee4614fc027 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e22153d5d1fd979909e2d855cfd4471 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#a0e22153d5d1fd979909e2d855cfd4471">FileTime</a> (self, filename)</td></tr>
<tr class="memdesc:a0e22153d5d1fd979909e2d855cfd4471 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modification time of a file.  <a href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#a0e22153d5d1fd979909e2d855cfd4471">More...</a><br /></td></tr>
<tr class="separator:a0e22153d5d1fd979909e2d855cfd4471 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f79588279cd652ca7edb2afa74063b1 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#a3f79588279cd652ca7edb2afa74063b1">CheckTimes</a> (self, cacheFilename)</td></tr>
<tr class="memdesc:a3f79588279cd652ca7edb2afa74063b1 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class function to check times of various components.  <a href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#a3f79588279cd652ca7edb2afa74063b1">More...</a><br /></td></tr>
<tr class="separator:a3f79588279cd652ca7edb2afa74063b1 inherit pub_methods_classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Generates the eye diagram bitmap and many associated measurements from it. </p>
<dl class="section note"><dt>Note</dt><dd>After construction, there are limitations on the order of further downstream processing. The recommended order is:<ol type="1">
<li>Constructor</li>
<li>ApplyJitterNoise</li>
<li>AutoAlign</li>
<li>Measure</li>
<li>Bathtub</li>
<li>Annotations</li>
<li>CreateImage </li>
</ol>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l00100">100</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8388d249b60bce6843e31357121c36d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8388d249b60bce6843e31357121c36d4">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def __init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>callback</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>cacheFileName</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>YAxisMode</em> = <code>'Auto'</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>YMax</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>YMin</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>Rows</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>Cols</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>BaudRate</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>prbswf</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>EnhancementMode</em> = <code>'Auto'</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>EnhancementSteps</em> = <code>10</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>BitsPerSymbol</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor Attempts to generate an eye diagram bitmap from the definition provided. </p>
<p>The bitmap generated here is not aligned &ndash; it assumes that the unit interval starts at zero time. (see AutoAlign for alignment). This class allows for caching of the bitmap if the cacheFileName is provided. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">callback</td><td>function reference (optional, defaults to None) callback function to call during calculation. If a callback function is supplied, it should take one argument, being the percentage of the calculation progress. </td></tr>
    <tr><td class="paramname">cacheFileName</td><td>string file name (defaults to None) containing the base cached file name. Usually, this file name is the name of the project file joined to the name of the waveform with an underscore. </td></tr>
    <tr><td class="paramname">YAxisMode</td><td>String, 'Auto' or 'Fixed' (defaults to 'Auto') defining the method of computing the y axis extents for the eye diagram. 'Auto' means to generate this axis depending on the extents of the input waveform. 'Fixed' means that these extents are defined in the YMax and YMin arguments. 'Auto' places the y axis such that it is 10% beyond the min and max extents of the waveform. </td></tr>
    <tr><td class="paramname">YMax</td><td>float, defaults to None, defining the upper extent of the y-axis in the bitmap when YAxisMode is provided as 'Fixed'. If YAxisMode is auto, this parameter is ignored. </td></tr>
    <tr><td class="paramname">YMin</td><td>float, defaults to None, defining the lower extent of the y-axis in the bitmap when YAxisMode is provided as 'Fixed'. If YAxisMode is auto, this parameter is ignored. </td></tr>
    <tr><td class="paramname">Rows</td><td>int, defaults to None, defining the number of rows in the eye diagram bitmap. </td></tr>
    <tr><td class="paramname">Cols</td><td>int, defaults to None, defining the number of columns in the eye diagram bitmap. </td></tr>
    <tr><td class="paramname">BaudRate</td><td>float, defaults to None, Baud or symbol rate for the waveform. </td></tr>
    <tr><td class="paramname">prbswf</td><td>instance of class Waveform, defaults to None, containing the serial data waveform used to generate the bitmap. </td></tr>
    <tr><td class="paramname">EnhancementMode</td><td>string, defaults to 'Auto', containing the enhancement mode &ndash; can be 'Auto', 'Fixed', or 'None'. The eye diagram is generated from a waveform that is upsampled to a rate such that every point falls in a column of the bitmap. When 'None' is specified, for each point, the row is calculated (usually a probability straddling two rows) and the probability is counted. Sometimes, the waveform transitions multiple rows in between columns and this can lead to bitmaps with vertical holes. This is not only visually undesirable but can play havoc with the measurements. When 'Fixed' is specified, for every point, the steps provided in EnhancementSteps is used. This is slow and not really advised. 'Auto' strikes a balance and calculates how many rows have been traversed and calculates a step amount to fill in about two steps per row. 'Auto' therefore dynamically adjusts the step size and is the recommended mode. </td></tr>
    <tr><td class="paramname">EnhancementSteps</td><td>int, defaults to 10, fixed number of steps to be used in 'Fixed' EnhancementMode. </td></tr>
    <tr><td class="paramname">BitsPerSymbol</td><td>int, defaults to 1, number of bits per symbol. One bit per symbol is NRZ, or PAM-2. Two bits per symbol is PAM-4, etc. <br  />
</td></tr>
  </table>
  </dd>
</dl>
<p>At the end of construction, the bitmap can be accessed through a call to Bitmap. <br  />
 The construction initializes several member variables that contain computed or partially computed results as a result of further processing. These are:</p><ul>
<li>self.BitmapLog - the logarithmic bitmap which is calculated in the call to Measure.</li>
<li>self.measDict - the dictionary containing the measurement and bathtub curve calculation results produced in calls to Measure and Bathtub.</li>
<li>self.annotationBitmap - the bitmap that is overlaid containing annotations on the eye created in the call to Annotations..</li>
<li>self.img - the actual bitmap picture created in the call to CreateImage. <br  />
</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>After construction, there are limitations on the order of further downstream processing. The recommended order is:<ol type="1">
<li>Constructor</li>
<li>ApplyJitterNoise</li>
<li>AutoAlign</li>
<li>Measure</li>
<li>Bathtub</li>
<li>Annotations</li>
<li>CreateImage </li>
</ol>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l00173">173</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a43a8b76b19ac3946f4a6c4df1a736eed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43a8b76b19ac3946f4a6c4df1a736eed">&#9670;&nbsp;</a></span>Annotations()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def Annotations </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>MeanLevels</em> = <code>True</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>LevelExtents</em> = <code>True</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>EyeWidth</em> = <code>True</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>EyeHeight</em> = <code>True</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>Contours</em> = <code>True</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>WhichContours</em> = <code>'Eye'&#160;#&#160;'Eye'&#160;or&#160;'All'</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates an annotation bitmap that goes along with the raw bitmap containing annotation marks. </p>
<p><br  />
 This creates an annotationBitmap member variable of the same dimensions as the rawBitmap member variable. Each pixel in the bitmap contains a 1 whereever there should be an overlaid, lit pixel for the annotation. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MeanLevels</td><td>bool, defaults to True, whether to place a horizontal line at the mean levels. </td></tr>
    <tr><td class="paramname">LevelExtents</td><td>bool, defaults to True, whether to place horizontal dotted lines about the mean levels to demarcate the extents. </td></tr>
    <tr><td class="paramname">EyeWidth</td><td>bool, defaults to True, whether to place a horizontal line where the eye width is measured. </td></tr>
    <tr><td class="paramname">EyeHeight</td><td>bool, defaults to True, whether to place a vertical line where the eye height is measured. </td></tr>
    <tr><td class="paramname">Contours</td><td>bool, defaults to True, whether to annotate the eye contour with the probability specified in the <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Measurement.xhtml">Measurement</a>. </td></tr>
    <tr><td class="paramname">WhichContours</td><td>string, '<a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Eye.xhtml">Eye</a>' or 'All', defaults to '<a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Eye.xhtml">Eye</a>', where to annotate the contour. '<a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Eye.xhtml">Eye</a>' annotates only the contour around the eye. 'All' annotates any region whose inside has the probability specified. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section remark"><dt>Remarks</dt><dd>The Measure member function be called prior to this call. </dd></dl>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l01202">1202</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>

</div>
</div>
<a id="a97fc924689bb3b6243ac2fd901d7d642"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97fc924689bb3b6243ac2fd901d7d642">&#9670;&nbsp;</a></span>ApplyJitterNoise()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def ApplyJitterNoise </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>NoiseSigma</em> = <code>0.</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>JitterSigma</em> = <code>0.</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>DeterministicJitter</em> = <code>0.</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>MaxPixelsKernel</em> = <code>100000</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Applies jitter and/or noise to the eye diagram bitmap. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">NoiseSigma</td><td>float, defaults to 0, amount of rms vertical noise to apply. </td></tr>
    <tr><td class="paramname">JitterSigma</td><td>float, defaults to 0, amount of rms horizontal jitter to apply. </td></tr>
    <tr><td class="paramname">DeterministicJitter</td><td>float, defaults to 0, amount of deterministic jitter to apply horizontally. </td></tr>
    <tr><td class="paramname">MaxPixelsKernel</td><td>int, defaults to 100000, maximum number of pixels in kernel <br  />
</td></tr>
  </table>
  </dd>
</dl>
<p>Noise and jitter are applied by constructing a kernel and then convolving this kernel with the eye diagram bitmap. The kernel itself is a convolution of a vertical histogram, containing the Gaussian distributed vertical noise and a horizontal histogram, containing the jitter. The jitter histogram is also, itself, a convolution of a dual-Dirac, whose pk-pk separation is twice the amount of deterministic jitter specified, with a Guassian distribution representing the jitter specified. <br  />
 The kernel generated covers 10 standard deviations in both vertical and horizontal direction. As a protection against absurd numbers for jitter and noise, a check is made that the number of points in the kernel does not exceed a gigantic number. If the kernel exceeds this amount, it is truncated. <br  />
 When this function concludes, the side effect is that the rawBitmap member variable is updated with a new bitmap representing the noise and jitter addition effect. </p><dl class="section remark"><dt>Remarks</dt><dd>The shape of the bitmap is adjusted by padding rows based on the amount of vertical noise added. </dd></dl>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l00300">300</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>

</div>
</div>
<a id="a85a9afbd31ccc14de237f8149f99f6e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85a9afbd31ccc14de237f8149f99f6e8">&#9670;&nbsp;</a></span>AutoAlign()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def AutoAlign </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>BERForAlignment</em> = <code>-3</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>AlignmentMode</em> = <code>'Horizontal'</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>HorizontalAlignment</em> = <code>'Middle'</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>VerticalAlignment</em> = <code>'MaxMin'</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Automatically align the eye diagram. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">BERForAlignment</td><td>float, defaults to -3, exponent of the probability contour to align on. </td></tr>
    <tr><td class="paramname">AlignmentMode</td><td>string, either 'Horizontal' or 'Vertical', defaults to 'Horizontal', defining the alignment mode. </td></tr>
    <tr><td class="paramname">HorizontalAlignment</td><td>string, either 'Middle' or 'Max' , defaults to 'Middle', defining the horizontal alignment mode. </td></tr>
    <tr><td class="paramname">VerticalAlignment</td><td>string, either 'MaxMin' or 'Max', defaults to MaxMin, defining the vertical alignment mode. <br  />
</td></tr>
  </table>
  </dd>
</dl>
<p>Alignment is made by considering contours that define the probability specified by the BERForAlignment. While not technically a BER, it is the probability contour inside of which, all hits are lower probability. All measurements of vertical height and horizontal width are taken on these contours produced. <br  />
 Alignment modes are a combination of the three alignment mode specifications: </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadCenter">AlignmentMode </th><th class="markdownTableHeadCenter">HorizontalAlignment </th><th class="markdownTableHeadCenter">VerticalAlignment </th><th class="markdownTableHeadLeft">Definition  </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyCenter">Horizontal </td><td class="markdownTableBodyCenter">Middle </td><td class="markdownTableBodyCenter">N/A </td><td class="markdownTableBodyLeft">The center of the eye is found by first computing the widest horizontal opening of the middle eye, then computing the horizontal midpoint.  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyCenter">Horizontal </td><td class="markdownTableBodyCenter">Max </td><td class="markdownTableBodyCenter">N/A </td><td class="markdownTableBodyLeft">The center of the eye is found by first computing the widest horizontal opening of the widest eye, then computing the horizontal midpoint.  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyCenter">Vertical </td><td class="markdownTableBodyCenter">N/A </td><td class="markdownTableBodyCenter">MaxMin </td><td class="markdownTableBodyLeft">The center of the eye is found by finding the horizontal location where the vertical opening is maximized for the narrowest eye.  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyCenter">Vertical </td><td class="markdownTableBodyCenter">N/A </td><td class="markdownTableBodyCenter">Max </td><td class="markdownTableBodyLeft">The center of the eye is found by finding the horizontal location where the vertical opening is maximized for any eye.  </td></tr>
</table>
<p>The side effect of this function is for the rawBitmap member variable to be replaced with a new bitmap containing the aligned eye diagram. </p>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l00393">393</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>

</div>
</div>
<a id="abb318087e325c834857bca0b2ab115c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb318087e325c834857bca0b2ab115c9">&#9670;&nbsp;</a></span>Bathtub()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def Bathtub </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>DecadesFromJoin</em> = <code>0.25</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>MinPointsForFit</em> = <code>6</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates bathtub curves on the eye diagram and calculates the error probabilities and rates. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DecadesFromJoin</td><td>float, defaults to 0.25, number of decades above the point where the PDFs join together to begin fitting the histogram tails. A bit further up, like 0.5-1 decade is ideal, but will cause algorithm failure for very low BER systems. Too low, and the tail estimate will contain portions of the adjacent PDF. </td></tr>
    <tr><td class="paramname">MinPointsForFit</td><td>integer, defaults to 6, minimum number of points to use to fit the tail of the PDF. <br  />
 After processing, the measDict member variable has an additional dictionary added called 'Bathtub' and 'Probabilities'. Inside the 'Bathtub' dictionary are the following items: Vertical - a dictionary containing:<ul>
<li>Data - contains two vectors called:<ul>
<li>x - an x axis containing one element per row containing the voltage.</li>
<li>y - a y axis containing one element per row containing the probability.</li>
</ul>
</li>
<li>Level - a dictionary array (each element in the dictionary is 0, 1, 2, etc.) containing, per level:<ul>
<li>LeftEst - a dictionary containing information on the left estimate (the PDF tail below the level in the histogram shown as a vertical slice:<ul>
<li>Start - a dictionary containing Bin which is the starting row for the estimate of the PDF.</li>
<li>End - a dictionary containing Bin which is the ending row for the estimate of the PDF.</li>
<li>Est - a dictionary of the estimatated polynomial:<ul>
<li>Coef - list of the three coefficients a0, a1, a2 for the polynomial a0+a1*x+a2*x^2 where x is the natural log of the probability.</li>
<li>Valid - if the estimate is valid.</li>
<li>Wf - a dictionary of the estimated PDF tail where:<ul>
<li>x - is the x axis containing the voltage.</li>
<li>y - is the y axis containing the probability.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>RightEst - a dictionary containing information on the right estimate (the PDF tail above the level in the histogram shown as a vertical slice:<ul>
<li>Start - a dictionary containing Bin which is the starting row for the estimate of the PDF.</li>
<li>End - a dictionary containing Bin which is the ending row for the estimate of the PDF.</li>
<li>Est - a dictionary of the estimatated polynomial:<ul>
<li>Coef - list of the three coefficients a0, a1, a2 for the polynomial a0+a1*x+a2*x^2 where x is the natural log of the probability.</li>
<li>Valid - if the estimate is valid.</li>
<li>Wf - a dictionary of the estimated PDF tail where:<ul>
<li>x - is the x axis containing the voltage.</li>
<li>y - is the y axis containing the probability.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Hist - the entire, partially estimated, PDF for this level vertically across the entire vertical slice. There is one probablity element per row in the eye diagram.</li>
<li>CDFFromLeft - The integrated PDF from the bottom to the top, forming the probability that a value could be below a given row.</li>
<li>CDFFromRight - The integrated PDF from the top to the bottom, forming the probability that a value could be above a given row.</li>
</ul>
</li>
<li>Horizontal - a dictionary array, one element per eye, where each element in the dictionary is 0, 1, 2, etc.), containing, per eye:<ul>
<li>Data - an instance of class Waveform, spanning the entire UI horizontally, containing the probability at the decision point for each column. This is used to plot the jitter bathtub curves. Inside the 'Probabilities' dictionary are the following items:</li>
</ul>
</li>
<li>SymbolCodes - a list of the codes for the symbol. This is just 0, 1, 2, etc. depending on the bits per symbol.</li>
<li>GrayCodes - a list of gray coded symbols corresponding to the symbol codes.</li>
<li>Interpretation - A list of lists representing a Symbols x Symbols matrix, where Interpretation[x][y] represents the probability that a symbol transmitted as symbol x is interpreted as symbol y.</li>
<li>Symbol - the measured probability that a symbol was transmitted.</li>
<li>ErrorRate - The error rates containing:<ul>
<li>Symbol - the symbol error rates as:<ul>
<li>PerSymbol - A list per symbol containing the probability of a symbol being erroneously decoded.</li>
<li>Nominal - The total, nominal symbol error rate, assuming that each symbol was transmitted with equal probability.</li>
<li>Measured - The total, measured symbol error rate, considering the measured probability that a given symbol was transmitted.</li>
</ul>
</li>
<li>Bit - The bit error rates containing:<ul>
<li>Standard - The un-gray coded bit errors:<ul>
<li>PerSymbol - a list per symbol containing the probability of one or more bit errors in the symbol.</li>
<li>Nominal - The total, nominal bit error rate, assuming that each bit was transmitted with equal probability.</li>
<li>Measured - the total, measured bit error rate, considering the measured probability that a given bit was transmitted.</li>
</ul>
</li>
<li>Gray - The gray coded bit errors:<ul>
<li>PerSymbol - a list per symbol containing the probability of one or more bit errors in the symbol.</li>
<li>Nominal - The total, nominal bit error rate, assuming that each bit was transmitted with equal probability. Nominally, this should be the nominal BER divided by the number of bits per symbol.</li>
<li>Measured - the total, measured bit error rate, considering the measured probability that a given bit was transmitted. </li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>
<dl class="section remark"><dt>Remarks</dt><dd>The Measure member function be called prior to this call. </dd></dl>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l00967">967</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>

</div>
</div>
<a id="a3ce234faa434f22d1287e9c5218fc3d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ce234faa434f22d1287e9c5218fc3d9">&#9670;&nbsp;</a></span>Bitmap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def Bitmap </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the raw bitmap. </p>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l00274">274</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>

</div>
</div>
<a id="a471a0c5837fc9ea7642b90b89feb8413"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a471a0c5837fc9ea7642b90b89feb8413">&#9670;&nbsp;</a></span>CreateImage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def CreateImage </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>LogIntensity</em> = <code>False</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>MinExponentLogIntensity</em> = <code>-6.</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>MaxExponentLogIntensity</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>NumUI</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>Saturation</em> = <code>20.</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>InvertImage</em> = <code>True</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>Color</em> = <code>'#ffffff'</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>AnnotationColor</em> = <code>'#000000'</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>ScaleX</em> = <code>100.</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>ScaleY</em> = <code>100.</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>LabelMeanLevels</em> = <code>False</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates the image (picture) from the raw bitmap and the annotation bit map. </p>
<p><br  />
 </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">LogIntensity</td><td>bool, defaults to False, whether to generate the eye diagram with a logarithmic intensity. This allows better insight into the BER contours. </td></tr>
    <tr><td class="paramname">MinExponentLogIntensity</td><td>float, defaults to -6. If LogIntensity is specified, this is the exponent on the probablity, below which pixels are shown a totally colored (or totally black if inverted). </td></tr>
    <tr><td class="paramname">MaxExponentLogIntensity</td><td>float, defaults to 0. If LogIntensity is specified, this is the exponent on the probablity, above which pixels are shown a totally black (or totally colored if inverted). </td></tr>
    <tr><td class="paramname">NumUI</td><td>int, defaults to 1, number of unit intervals to show in the eye diagram. </td></tr>
    <tr><td class="paramname">Saturation</td><td>float, defaults to 20 (%) used to generate a saturation curve for the eye, otherwise the correct contrast is not shown. Best values are 20 % or lower. </td></tr>
    <tr><td class="paramname">InvertImage</td><td>bool, defaults to True. Non-inverted images are shades of black on the color specified. Inverted images are shades of the color specified on black. </td></tr>
    <tr><td class="paramname">Color</td><td>string, defaults to #ffffff, hexadecimal code where each of the three bytes represents the 0-255 value of R, G, and B, for the eye diagram. '#ffffff' is white. '#000000' is black. </td></tr>
    <tr><td class="paramname">AnnotationColor</td><td>string, defaults to #000000, hexadecimal code where each of the three bytes represents the 0-255 value of R, G, and B, for the annotations. </td></tr>
    <tr><td class="paramname">ScaleX</td><td>float, defaults to 100, scaling of the x axis of the image after construction. </td></tr>
    <tr><td class="paramname">ScaleY</td><td>float, defaults to 100, scaling of the y axis of the image after construction. Scaling allows for lower resolution images, requiring less processing, to create larger, beautiful eye diagrams. <br  />
 Upon completion, the image is held in the image member variable. </td></tr>
    <tr><td class="paramname">LabelMeanLevels</td><td>bool, defaults to false, whether to label the mean levels in the image. Note that it can onl try to do this. If annotations are not made, then it will be unable to do this. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l01339">1339</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>

</div>
</div>
<a id="a5ead5cf1fbb767c3ef67b6acf3b0bce3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ead5cf1fbb767c3ef67b6acf3b0bce3">&#9670;&nbsp;</a></span>HashValue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def HashValue </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>stuffToHash</em> = <code>''</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates the hash for a definition. </p>
<p><br  />
 It is formed by hashing the bitmap definition with whatever else is hashed. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stuffToHash</td><td>repr of stuff to hash </td></tr>
  </table>
  </dd>
</dl>
<dl class="section remark"><dt>Remarks</dt><dd>derived classes should override this method and call the base class HashValue with their stuff added </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>integer hash value </dd></dl>

<p>Reimplemented from <a class="el" href="classSignalIntegrity_1_1Lib_1_1ResultsCache_1_1ResultsCache.xhtml#a5ead5cf1fbb767c3ef67b6acf3b0bce3">ResultsCache</a>.</p>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l00108">108</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>

</div>
</div>
<a id="aca020d6bf17e9ab0b799b5543c2cb201"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca020d6bf17e9ab0b799b5543c2cb201">&#9670;&nbsp;</a></span>Measure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def Measure </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>BERForMeasure</em> = <code>-6</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>DecisionMode</em> = <code>'Mid'</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>WaveformType</em> = <code>'V'</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes measurements on the eye diagram. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">BERForMeasure</td><td>float, defaults to -6, exponent of probability contour in eye to make measurements on. </td></tr>
    <tr><td class="paramname">DecisionMode</td><td>string, 'Mid' or 'Best', defaults to 'Mid' to determine where the decision point is. If 'Mid', the decision point is the vertical middle of the eye. If 'Best' is specified, it is the least likey point in the middle of the eye. If the probability goes to zero in the middle, it is the midpoint of the middle zero locations. </td></tr>
    <tr><td class="paramname">WaveformType</td><td>string (optional, defaults to 'V') indicator of the type of waveform being measured. Valid waveform types are:<ul>
<li>'V' &ndash; voltage, in volts</li>
<li>'A' &ndash; current, in amperes</li>
<li>'W' &ndash; power, in watts</li>
<li>'FW' &ndash; fractional power, in fractions of watts</li>
<li>'FA' &ndash; fractional current, in fractions of amperes</li>
<li>'FV' &ndash; fractional voltage, in fractions of volts</li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>
<p>Measurements are made by first determining a probablity contour in the eye such that everything inside the contour is lower probability than the contour edge, which is above the probability of the BERForMeasure. The vertical extents of the contour (the eye height) is the length of the vertical line in the exact center of the eye diagram. The horizontal extents of the contour (the eye width) are the lengths of the horizontal line at the decision point, specified by the DecisionMode. <br  />
</p>
<p>Upon completion, the member variable measDict contains a dictionary with the following elements:</p><ul>
<li>R - Rows in the bitmap.</li>
<li>C - Columns in the bitmap.</li>
<li>MinV - Voltage defined by row 0.</li>
<li>MaxV - Voltage defined by the maximum row.</li>
<li>MinT - Time defined by the column 0.</li>
<li>MaxT - Time defined by the last column.</li>
<li>BERForMeasure - BER, or probability, for contour for all of the eye measurements.</li>
<li>WaveformType - Type of waveform as either V, A, W, FW, AW, VW</li>
<li><a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Eye.xhtml">Eye</a> - An array of parameters, one for each eye containing:<ul>
<li>Start - a dictionary containing Bin and Time defining the pixel column of the horizontal start of the eye.</li>
<li>End - a dictionary containing Bin and Time defining the pixel column of the horizontal end of the eye.</li>
<li>Width - a dictionary containing the Bin and Time width of the eye.</li>
<li>High - a dictionary containing the Bin and Volt defining the pixel row of the vertical top of the eye.</li>
<li>Low - a dictionary containing the Bin and Volt defining the pixel row of the vertical bottom of the eye.</li>
<li>Mid - a dictionary containing the Bin and Volt defining the pixel row of the vertical middle of the eye.</li>
<li>Best - a dictionary containing the Bin and Volt defining the pixel row of the best decision point for the eye.</li>
<li>Height - a dictionary containing the Bin and Volt defining the vertical height of the eye.</li>
<li>AV - a dictionary containing Volt defining the volts between the level extents at each edge of the eye.</li>
</ul>
</li>
<li>Level - An array of parameters, one for each level of the eye (the number of eyes plus one) containing:<ul>
<li>Min - a dictionary containing the Bin and Volt of the minimum edge of the level extent.</li>
<li>Max - a dictionary containing the Bin and Volt of the maximum edge of the level extent.</li>
<li>Delta - a dictionary containing the Bin and Volt vertical distance between the edeges of the level extent.</li>
<li>Mean - a dictionary containing the Bin and Volt of the mean vertical location of the level extent.</li>
</ul>
</li>
<li>Linearity - The eye linearity calculated as the Min(AV)/Max(AV). This is 100% for NRZ waveforms.</li>
<li>RLM - Relative Level Mismatch - only defined for PAM-4.</li>
<li>RMS - Rms value of the waveform</li>
<li>Noise - Rms value of the noise</li>
<li>NoiseResidual - Rms value of the residual noise (ISI and linearity only - no noise added).</li>
<li>SDR - Ratio of sampled ideal signal to residual error (noise) in dB (without noise added).</li>
<li>SNR - Signal to noise ratio.</li>
<li>SNDR - Signal to noise and distortion ratio.</li>
<li>VerticalResolution - the resolution, in V, for each row of the eye.</li>
<li>HorizontalResolution - the resolution in seconds, for each column of the eye. </li>
</ul>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l00588">588</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>

</div>
</div>
<a id="a409fede69bfb7cd95c08ed90ddecd1a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a409fede69bfb7cd95c08ed90ddecd1a5">&#9670;&nbsp;</a></span>OpticalMeasure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def OpticalMeasure </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>WaveformType</em> = <code>'W'</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>PinW</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes optical measurements on the eye diagram. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WaveformType</td><td>string definition of waveform type. Can be 'W', 'FW', 'AW', 'VW', which stands for Power, Fractional power, Current proportional to power, and Voltage proportional to power. If 'V' or 'A' is specified, for voltage and current waveforms, this function exits with no results.</td></tr>
    <tr><td class="paramname">PinW</td><td>float, optional defaults to None, input power in Watts, if known and applicable (i.e. is a transmitter measurement)</td></tr>
  </table>
  </dd>
</dl>
<p>Computes optical measurements assuming an input waveform. The most straightforward is for waveforms in Watts. <br  />
</p>
<p>Upon completion, the 'Optical' field in the member variable measDict contains a dictionary with the following elements:</p><ul>
<li>PL - low level.<ul>
<li>W - value in Watts.</li>
<li>dBm - value in dBm.</li>
</ul>
</li>
<li>PH - High level.<ul>
<li>W - value in Watts.</li>
<li>dBm - value in dBm.</li>
</ul>
</li>
<li>OMA - Optical modulation amplitude.<ul>
<li>W - value in Watts.</li>
<li>dBm - value in dBm.</li>
</ul>
</li>
<li>Pavg - Average power.<ul>
<li>W - value in Watts.</li>
<li>dBm - value in dBm.</li>
</ul>
</li>
<li>ER - Extinction ration.<ul>
<li>Linear - value as ratio.</li>
<li>dB - value in dB. (if input power supplied):</li>
</ul>
</li>
<li>Pin - Input power.<ul>
<li>W - value in Watts.</li>
<li>dBm - value in dBm.</li>
</ul>
</li>
<li>TP - Transmission penalty.<ul>
<li>Linear - value as ratio.</li>
<li>dB - value in dB.</li>
</ul>
</li>
<li>IL - Insertion loss<ul>
<li>Linear - value as ratio. -dB - value in dB. </li>
</ul>
</li>
</ul>

<p class="definition">Definition at line <a class="el" href="EyeDiagramBitmap_8py_source.xhtml#l00805">805</a> of file <a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>SignalIntegrity/SignalIntegrity/Lib/Eye/<a class="el" href="EyeDiagramBitmap_8py_source.xhtml">EyeDiagramBitmap.py</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
