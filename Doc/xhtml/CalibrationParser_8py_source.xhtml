<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/Lib/Parsers/CalibrationParser.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.1.11</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_ba9856180bcd39f2b51d38e1b9ddb228.xhtml">Lib</a></li><li class="navelem"><a class="el" href="dir_527c090b61d38d7ca12ceea3c3f5cd9f.xhtml">Parsers</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">CalibrationParser.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral"> base class for calibration netlist handling</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2018 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml">SignalIntegrity.Lib.Measurement.Calibration.Calibration</a> <span class="keyword">import</span> Calibration</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements.xhtml">SignalIntegrity.Lib.Measurement.Calibration.CalibrationMeasurements</a> <span class="keyword">import</span> *</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemDescriptionParser_1_1SystemDescriptionParser.xhtml">SignalIntegrity.Lib.Parsers.SystemDescriptionParser</a> <span class="keyword">import</span> SystemDescriptionParser</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml">SignalIntegrity.Lib.SParameters.SParameterFile</a> <span class="keyword">import</span> SParameterFile</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a> <span class="keyword">import</span> SignalIntegrityExceptionCalibration</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> copy</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml">CalibrationParser</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemDescriptionParser_1_1SystemDescriptionParser.xhtml">SystemDescriptionParser</a>):</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;base class for netlist based error terms solutions&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#af9856388f7022892c3159ad55872a27e">__init__</a>(self, f=None, args=None):</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Constructor  </span></div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml">   32</a></span>&#160;<span class="stringliteral">        frequencies may be provided at construction time (or not for symbolic solutions).</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="stringliteral">        @param f (optional) list of frequencies</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="stringliteral">        @param args (optional) string arguments for the circuit.</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="stringliteral">        @remark Arguments are provided on a line as pairs of names and values separated by a space.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        SystemDescriptionParser.__init__(self, f, args)</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>=0</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">calibrationMeasurementList</a>=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#af9856388f7022892c3159ad55872a27e">   40</a></span>&#160;    <span class="keyword">def </span>_ProcessCalibrationLine(self,line):</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;processes a line of a netlist, handing calibration specific commands.  </span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="stringliteral">        Lines that can be processed at this level are processed and lines that</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="stringliteral">        are unknown are place in a list of unknown lines for upstream processing.  This</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">        enables derived classes to benefit from what this class knows how to process and</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">        to simply add specific functionality.  As a simple example, a derived simulator class</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">        needs to add output probes, and this simple system description class knows nothing of</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">        this.  </span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">        netlist lines that are handled at this level are:</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="stringliteral">        - &#39;calibration&#39; - handling of calibration measurements</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="stringliteral">        @todo document the exact syntax of the netlist lines processed here.</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        lineList=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1ParserArgs_1_1ParserArgs.xhtml#aa526e9c58a0f534dc6097112c51df9af">ReplaceArgs</a>(line.split())</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">if</span> len(lineList) == 0: <span class="keywordflow">return</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">if</span> lineList[0] == <span class="stringliteral">&#39;calibration&#39;</span>:</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">calibrationMeasurementList</a> == <span class="keywordtype">None</span>: self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">calibrationMeasurementList</a> = []</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keywordflow">if</span> lineList[1] <span class="keywordflow">in</span> [<span class="stringliteral">&#39;reflect&#39;</span>,<span class="stringliteral">&#39;thru&#39;</span>]:</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">calibrationMeasurementList</a> <span class="keywordflow">is</span> <span class="keywordtype">None</span>: self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">calibrationMeasurementList</a>=[]</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                measDict={}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                measDict[<span class="stringliteral">&#39;type&#39;</span>]=lineList[1]</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                <span class="keywordflow">for</span> i <span class="keywordflow">in</span> range(2,len(lineList),2):</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                    tokenName,tokenValue = lineList[i],lineList[i+1]</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                    <span class="keywordflow">if</span> tokenName == <span class="stringliteral">&#39;file&#39;</span>:</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                        measDict[<span class="stringliteral">&#39;raw&#39;</span>]=<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml">SParameterFile</a>(tokenValue).Resample(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemDescriptionParser_1_1SystemDescriptionParser.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    <span class="keywordflow">elif</span> tokenName == <span class="stringliteral">&#39;std&#39;</span>:</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                        <span class="keywordflow">if</span> <span class="keywordflow">not</span> tokenValue <span class="keywordflow">in</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac07dce7aba8ae222e474e0ca9c4b8821">m_spc</a>:</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                            self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac07dce7aba8ae222e474e0ca9c4b8821">m_spc</a>[tokenValue] = <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml">SParameterFile</a>(tokenValue)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                        measDict[<span class="stringliteral">&#39;std&#39;</span>]=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac07dce7aba8ae222e474e0ca9c4b8821">m_spc</a>[tokenValue]</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                    <span class="keywordflow">elif</span> tokenName == <span class="stringliteral">&#39;pn&#39;</span>:</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                        measDict[<span class="stringliteral">&#39;driven&#39;</span>]=port=int(tokenValue)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>=max(port,self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                    <span class="keywordflow">elif</span> tokenName == <span class="stringliteral">&#39;opn&#39;</span>:</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                        measDict[<span class="stringliteral">&#39;other&#39;</span>]=port=int(tokenValue)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>=max(port,self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    <span class="keywordflow">elif</span> tokenName == <span class="stringliteral">&#39;ct&#39;</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                        measDict[<span class="stringliteral">&#39;thrutype&#39;</span>]=tokenValue</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <span class="keywordflow">if</span> measDict[<span class="stringliteral">&#39;type&#39;</span>]==<span class="stringliteral">&#39;reflect&#39;</span>:</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">calibrationMeasurementList</a>.append(<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_1_1ReflectCalibrationMeasurement.xhtml">ReflectCalibrationMeasurement</a>(measDict[<span class="stringliteral">&#39;raw&#39;</span>].FrequencyResponse(1,1),</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                        measDict[<span class="stringliteral">&#39;std&#39;</span>],</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                        measDict[<span class="stringliteral">&#39;driven&#39;</span>]-1))</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">elif</span> measDict[<span class="stringliteral">&#39;type&#39;</span>]==<span class="stringliteral">&#39;thru&#39;</span>:</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    <span class="keywordflow">if</span> measDict[<span class="stringliteral">&#39;thrutype&#39;</span>]==<span class="stringliteral">&#39;SOLT&#39;</span>:</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">calibrationMeasurementList</a>.append(<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_1_1ThruCalibrationMeasurement.xhtml">ThruCalibrationMeasurement</a>(measDict[<span class="stringliteral">&#39;raw&#39;</span>].FrequencyResponse(1,1),</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                            measDict[<span class="stringliteral">&#39;raw&#39;</span>].FrequencyResponse(2,1),measDict[<span class="stringliteral">&#39;std&#39;</span>],measDict[<span class="stringliteral">&#39;driven&#39;</span>]-1,measDict[<span class="stringliteral">&#39;other&#39;</span>]-1))</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">calibrationMeasurementList</a>.append(<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_1_1ThruCalibrationMeasurement.xhtml">ThruCalibrationMeasurement</a>(measDict[<span class="stringliteral">&#39;raw&#39;</span>].FrequencyResponse(2,2),</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                            measDict[<span class="stringliteral">&#39;raw&#39;</span>].FrequencyResponse(1,2),measDict[<span class="stringliteral">&#39;std&#39;</span>],measDict[<span class="stringliteral">&#39;other&#39;</span>]-1,measDict[<span class="stringliteral">&#39;driven&#39;</span>]-1))</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    <span class="keywordflow">elif</span> measDict[<span class="stringliteral">&#39;thrutype&#39;</span>]==<span class="stringliteral">&#39;SOLR&#39;</span>:</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">calibrationMeasurementList</a>.append(<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_1_1UnknownThruCalibrationMeasurement.xhtml">UnknownThruCalibrationMeasurement</a>(measDict[<span class="stringliteral">&#39;raw&#39;</span>],</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                            measDict[<span class="stringliteral">&#39;std&#39;</span>],measDict[<span class="stringliteral">&#39;driven&#39;</span>]-1,measDict[<span class="stringliteral">&#39;other&#39;</span>]-1))     </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">else</span>: self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aa3dd16335e478bde71bb87fd3a826683">m_ul</a>.append(line)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">def </span>_ProcessLines(self):</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;processes all of the lines in a netlist</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral">        @see _ProcessLine() for explanation of parameters and functionality.</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        SystemDescriptionParser._ProcessLines(self)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac07dce7aba8ae222e474e0ca9c4b8821">m_spc</a>={key:value.Resample(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemDescriptionParser_1_1SystemDescriptionParser.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>) <span class="keywordflow">for</span> (key,value) <span class="keywordflow">in</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac07dce7aba8ae222e474e0ca9c4b8821">m_spc</a>}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        lines=copy.deepcopy(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aa3dd16335e478bde71bb87fd3a826683">m_ul</a>); self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aa3dd16335e478bde71bb87fd3a826683">m_ul</a>=[]</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">for</span> i <span class="keywordflow">in</span> range(len(lines)):</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            line=lines[i]</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeb4f2954462301294e334d905149f567">_ProcessCalibrationLine</a>(line)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">if</span> self.HasACallBack():</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                progress=(float(i)+1)/len(lines)*100.0</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.CallBack(progress):</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                    <span class="keywordflow">raise</span> SignalIntegrityExceptionCalibration(<span class="stringliteral">&#39;calculation aborted&#39;</span>)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeab101580fa4596fb4bff802525e6020">calibration</a> = <a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml">Calibration</a>(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>,self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemDescriptionParser_1_1SystemDescriptionParser.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeab101580fa4596fb4bff802525e6020">calibration</a>.AddMeasurements(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">calibrationMeasurementList</a>)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> self</div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser_xhtml_aeb4f2954462301294e334d905149f567"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeb4f2954462301294e334d905149f567">SignalIntegrity.Lib.Parsers.CalibrationParser.CalibrationParser._ProcessCalibrationLine</a></div><div class="ttdeci">def _ProcessCalibrationLine(self, line)</div><div class="ttdoc">processes a line of a netlist, handing calibration specific commands.</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationParser_8py_source.xhtml#l00056">CalibrationParser.py:56</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements.xhtml">SignalIntegrity.Lib.Measurement.Calibration.CalibrationMeasurements</a></div><div class="ttdef"><b>Definition:</b> <a href="CalibrationMeasurements_8py_source.xhtml#l00001">CalibrationMeasurements.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser_xhtml_aeab101580fa4596fb4bff802525e6020"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeab101580fa4596fb4bff802525e6020">SignalIntegrity.Lib.Parsers.CalibrationParser.CalibrationParser.calibration</a></div><div class="ttdeci">calibration</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationParser_8py_source.xhtml#l00112">CalibrationParser.py:112</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser_xhtml_aa3dd16335e478bde71bb87fd3a826683"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aa3dd16335e478bde71bb87fd3a826683">SignalIntegrity.Lib.Parsers.CalibrationParser.CalibrationParser.m_ul</a></div><div class="ttdeci">m_ul</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationParser_8py_source.xhtml#l00102">CalibrationParser.py:102</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemDescriptionParser_1_1SystemDescriptionParser_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemDescriptionParser_1_1SystemDescriptionParser.xhtml">SignalIntegrity.Lib.Parsers.SystemDescriptionParser.SystemDescriptionParser</a></div><div class="ttdoc">Parses netlists and produces system descriptions.</div><div class="ttdef"><b>Definition:</b> <a href="SystemDescriptionParser_8py_source.xhtml#l00032">SystemDescriptionParser.py:32</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser_xhtml_ac07dce7aba8ae222e474e0ca9c4b8821"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac07dce7aba8ae222e474e0ca9c4b8821">SignalIntegrity.Lib.Parsers.CalibrationParser.CalibrationParser.m_spc</a></div><div class="ttdeci">m_spc</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationParser_8py_source.xhtml#l00101">CalibrationParser.py:101</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_1_1UnknownThruCalibrationMeasurement_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_1_1UnknownThruCalibrationMeasurement.xhtml">SignalIntegrity.Lib.Measurement.Calibration.CalibrationMeasurements.UnknownThruCalibrationMeasurement</a></div><div class="ttdoc">An unknown thru calibration measurement taken between two ports.</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationMeasurements_8py_source.xhtml#l00092">CalibrationMeasurements.py:92</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser_xhtml_af9856388f7022892c3159ad55872a27e"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#af9856388f7022892c3159ad55872a27e">SignalIntegrity.Lib.Parsers.CalibrationParser.CalibrationParser.__init__</a></div><div class="ttdeci">def __init__(self, f=None, args=None)</div><div class="ttdoc">Constructor   frequencies may be provided at construction time (or not for symbolic solutions).</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationParser_8py_source.xhtml#l00040">CalibrationParser.py:40</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml">SignalIntegrity.Lib.SParameters.SParameterFile.SParameterFile</a></div><div class="ttdoc">class for s-parameters read from a file</div><div class="ttdef"><b>Definition:</b> <a href="SParameterFile_8py_source.xhtml#l00037">SParameterFile.py:37</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1ParserArgs_1_1ParserArgs_xhtml_aa526e9c58a0f534dc6097112c51df9af"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1ParserArgs_1_1ParserArgs.xhtml#aa526e9c58a0f534dc6097112c51df9af">SignalIntegrity.Lib.Parsers.ParserArgs.ParserArgs.ReplaceArgs</a></div><div class="ttdeci">def ReplaceArgs(self, lineList)</div><div class="ttdef"><b>Definition:</b> <a href="ParserArgs_8py_source.xhtml#l00033">ParserArgs.py:33</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser_xhtml_ac5a965d3aaf532842d02995e58c647e0"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#ac5a965d3aaf532842d02995e58c647e0">SignalIntegrity.Lib.Parsers.CalibrationParser.CalibrationParser.ports</a></div><div class="ttdeci">ports</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationParser_8py_source.xhtml#l00042">CalibrationParser.py:42</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml">SignalIntegrity.Lib.Parsers.CalibrationParser.CalibrationParser</a></div><div class="ttdoc">base class for netlist based error terms solutions</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationParser_8py_source.xhtml#l00032">CalibrationParser.py:32</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Exception_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a></div><div class="ttdef"><b>Definition:</b> <a href="Exception_8py_source.xhtml#l00001">Exception.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration</a></div><div class="ttdoc">Generates calibrated s-parameter measurements.</div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00036">Calibration.py:36</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemDescriptionParser_1_1SystemDescriptionParser_xhtml_a40a26fb5046a51e40dd1b61c78d72ace"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1SystemDescriptionParser_1_1SystemDescriptionParser.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">SignalIntegrity.Lib.Parsers.SystemDescriptionParser.SystemDescriptionParser.m_f</a></div><div class="ttdeci">m_f</div><div class="ttdef"><b>Definition:</b> <a href="SystemDescriptionParser_8py_source.xhtml#l00042">SystemDescriptionParser.py:42</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_1_1ReflectCalibrationMeasurement_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_1_1ReflectCalibrationMeasurement.xhtml">SignalIntegrity.Lib.Measurement.Calibration.CalibrationMeasurements.ReflectCalibrationMeasurement</a></div><div class="ttdoc">A reflect measurement taken on a port with a reflect standard (like short, open, or load).</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationMeasurements_8py_source.xhtml#l00052">CalibrationMeasurements.py:52</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_1_1ThruCalibrationMeasurement_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1CalibrationMeasurements_1_1ThruCalibrationMeasurement.xhtml">SignalIntegrity.Lib.Measurement.Calibration.CalibrationMeasurements.ThruCalibrationMeasurement</a></div><div class="ttdoc">A thru calibration measurement taken between two ports.</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationMeasurements_8py_source.xhtml#l00069">CalibrationMeasurements.py:69</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser_xhtml_aeeb72d2a1742780a4089a1a6f3dba9ac"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1CalibrationParser_1_1CalibrationParser.xhtml#aeeb72d2a1742780a4089a1a6f3dba9ac">SignalIntegrity.Lib.Parsers.CalibrationParser.CalibrationParser.calibrationMeasurementList</a></div><div class="ttdeci">calibrationMeasurementList</div><div class="ttdef"><b>Definition:</b> <a href="CalibrationParser_8py_source.xhtml#l00043">CalibrationParser.py:43</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
