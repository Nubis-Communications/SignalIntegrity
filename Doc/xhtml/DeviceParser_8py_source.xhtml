<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/Lib/Parsers/Devices/DeviceParser.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.1.13</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_ba9856180bcd39f2b51d38e1b9ddb228.xhtml">Lib</a></li><li class="navelem"><a class="el" href="dir_527c090b61d38d7ca12ceea3c3f5cd9f.xhtml">Parsers</a></li><li class="navelem"><a class="el" href="dir_082a4b62bd6847897c86bad4372ce068.xhtml">Devices</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">DeviceParser.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">DeviceParser.py</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2018 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">from</span> numpy <span class="keyword">import</span> zeros</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">import</span> copy</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(object):</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;class defining how to parse devices&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a286a7f15e5aa7761d219f91accd234c1">__init__</a>(self,devicename,ports,arginname,defaults,frequencyDependent,func):</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Constructor</span></div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">   27</a></span>&#160;<span class="stringliteral">        @param devicename string name of device</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="stringliteral">        @param ports integer or string number of ports in device or None.  If a string, then the string</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="stringliteral">        is either a comma separated list of possible numbers of ports or is two numbers separated</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="stringliteral">        by a - indicating a range of numbers of ports.  If None, then the device can have</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="stringliteral">        any number of ports.</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="stringliteral">        @param arginname boolean whether the first argument requires a keyword or not.  Simple</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="stringliteral">        things like resistors and capacitors just have their value after the device and ports</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="stringliteral">        declaration.  This is False if the device has no arguments.</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="stringliteral">        @param defaults dictionary containing keyword/default value pairs.  if arginname is True</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">        then one arguments keyword will be the empty string &#39;&#39;.</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">        @param frequencyDependent boolean whether the device is frequency dependent.</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">        @param func string that when evaluated will be the device.  </span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#a45ac73548ffbf890c645804b7301b377">devicename</a>=devicename</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>=ports</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#a583e2428c4cc82875b837607cb1138dd">arginname</a>=arginname</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#ac11c3f53e8e6927c672d9f9f0aa5b933">   43</a></span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#a7cafc845c45c84cbda0408f57a7f0dd2">defaults</a>=defaults</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#a3909d31bcdbe6e7a3450d1fa216755a2">frequencyDependent</a>=frequencyDependent</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#a3699148440db7bdde6e95e16092363d1">func</a>=func</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml">DeviceFactory</a>(list):</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;device class factory that produces devices&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#ac11c3f53e8e6927c672d9f9f0aa5b933">__init__</a>(self):</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Constructor</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral">        list of devices</span></div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml">   53</a></span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral">        | name                                  |ports|arginname| defaults                                                                                      |frequency\n dependent|device                                                                                           |</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">        |:-------------------------------------:|:---:|:-------:|:---------------------------------------------------------------------------------------------:|:-------------------:|:------------------------------------------------------------------------------------------------|</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">        |file                                   |any  |True     |filename=None                                                                                  | True                |sp.dev.SParameterFile(filename,50.)                                                              |</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">        |c                                      |1    |True     |c=None df=0 esr=0 z0=50                                                                        | True                |sp.dev.TerminationC(f,c,z0,df,esr)                                                               |</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="stringliteral">        |c                                      |2    |True     |c=None df=0 esr=0 z0=50                                                                        | True                |sp.dev.SeriesC(f,c,z0,df,esr)                                                                    |</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="stringliteral">        |l                                      |1    |True     |l=None                                                                                         | True                |sp.dev.TerminationL(f,l,z0)                                                                      |</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="stringliteral">        |l                                      |2    |True     |l=None                                                                                         | True                |sp.dev.SeriesL(f,l,z0)                                                                           |</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="stringliteral">        |r                                      |1    |True     |r=None                                                                                         | False               |dev.TerminationZ(r)                                                                              |</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="stringliteral">        |r                                      |2    |True     |r=None                                                                                         | False               |dev.SeriesZ(r)                                                                                   |</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral">        |rse                                    |2    |True     |r=None                                                                                         | True                |sp.dev.SeriesRse(r)                                                                              |</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="stringliteral">        |shunt                                  |2-4  |True     |r=None                                                                                         | False               |dev.ShuntZ(ports,r)                                                                              |</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="stringliteral">        |m                                      |4    |True     |m=None                                                                                         | True                |sp.dev.Mutual(f,m)                                                                               |</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="stringliteral">        |ground                                 |1    |False    |                                                                                               | False               |dev.Ground()                                                                                     |</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="stringliteral">        |open                                   |1    |False    |                                                                                               | False               |dev.Open()                                                                                       |</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="stringliteral">        |thru                                   |2    |False    |                                                                                               | False               |dev.Thru()                                                                                       |</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="stringliteral">        |directional\n coupler                  |3-4  |False    |                                                                                               | False               |dev.DirectionalCoupler(ports)                                                                    |</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="stringliteral">        |termination                            |any  |False    |                                                                                               | False               |zeros(shape=(ports,ports)).tolist()                                                              |</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="stringliteral">        |tee                                    |any  |False    |                                                                                               | False               |dev.Tee(ports)                                                                                   |</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="stringliteral">        |mixedmode                              |4    |True     |&#39;power&#39;                                                                                        | False               |dev.MixedModeConverter()\n or dev.MixedModeConverterVoltage()                                    |</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="stringliteral">        |ideal\n transformer                    |4    |True     |tr=1                                                                                           | False               |dev.IdealTransformer(tr)                                                                         |</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="stringliteral">        |voltage\n controlled\n voltage\n source|4    |True     |gain=None                                                                                      | False               |dev.VoltageControlledVoltageSource(gain)                                                         |</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="stringliteral">        |current\n controlled\n current\n source|4    |True     |gain=None                                                                                      | False               |dev.CurrentControlledCurrentSource(gain)                                                         |</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="stringliteral">        |current\n controlled\n voltage\n source|4    |True     |gain=None                                                                                      | False               |dev.CurrentControlledVoltageSource(gain)                                                         |</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="stringliteral">        |voltage\n controlled\n current\n source|4    |True     |gain=None                                                                                      | False               |dev.VoltageControlledCurrentSource(gain)                                                         |</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="stringliteral">        |voltage\n amplifier                    |2-4  |False    |gain=None zo=0 zi=1e8 z0=50                                                                    | False               |dev.VoltageAmplifier(ports,gain,zi,zo)                                                           |</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">        |current\n amplifier                    |2-4  |False    |gain=None zo=1e8 zi=0 z0=50                                                                    | False               |dev.CurrentAmplifier(ports,gain,zi,zo)                                                           |</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">        |transresistance\n amplifier            |2-4  |False    |gain=None zo=0 zi=0 z0=50                                                                      | False               |dev.TransresistanceAmplifier(ports,gain,zi,zo)                                                   |</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">        |transconductance\n amplifier           |2-4  |False    |gain=None zo=1e8 zi=1e8 z0=50                                                                  | False               |dev.TransconductanceAmplifier(ports,gain,zi,zo)                                                  |</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">        |opamp                                  |3    |False    |zi=1e8 zd=1e8 zo=0 gain=1e8 z0=50                                                              | False               |dev.OperationalAmplifier(zi,zd,zo,gain,z0)                                                       |</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral">        |tline                                  |2,4  |False    |zc=50 td=0                                                                                     | True                |sp.dev.TLineLossless(f,ports,zc,td)                                                              |</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral">        |telegrapher                            |2    |False    |r=0 rse=0 l=0 c=0 df=0 g=0 z0=50 sect=0                                                        | True                |sp.dev.TLineTwoPortRLGC(\n f,r,rse,l,g,c,df,z0,sect,scale)                                       |</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral">        |telegrapher                            |4    |False    |rp=0 rsep=0 lp=0 cp=0\n dfp=0 gp=0 rn=0 rsen=0\n ln=0 cn=0 dfn=0 gn=0\n lm 0 gm=0 z0=50\n scale=1.0 sect=0 | True    |sp.dev.TLineDifferentialRLGC(\n f,rp,rsep,lp,gp,cp,dfp,\n rn,rsen,ln,gn,cn,dfn,\n cm,dfm,gm,lm,z0,sect,scale) |</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">        |rlgcfit                                |2    |False    |file=None scale=1.0 z0=50                                                                      | True                |fit.RLGCFitFromFile(f,file,scale,Z0)                                                             |</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">        |shortstd                               |1    |False    |od=0 oz0=50 ol=0 f0=1e9\n l0=0 l1=0.0 l2=0 l3=0                                                | True                |m.calkit.std.ShortStandard(f,od,oz0,ol,f0,l0,l1,l2,l3)                                           |</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral">        |openstd                                |1    |False    |od=0 oz0=50 ol=0 f0=1e9\n c0=0 c1=0 c2=0 c3=0                                                  | True                |m.calkit.std.OpenStandard(f,od,oz0,ol,f0,c0,c1,c2,c3)                                            |</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral">        |loadstd                                |1    |False    |od=0 oz0=50 ol=0 f0=1e9 tz=50                                                                  | True                |m.calkit.std.LoadStandard(f,od,oz0,ol,f0,tz0)                                                    |</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">        |thrustd                                |2    |False    |od=0 oz0=50 ol=0 f0=1e9                                                                        | True                |m.calkit.std.ThruStandard(f,od,oz0,ol,f0)                                                        |</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">        |networkanalyzer                        |any  |False    |file=None, et=None, pl=None, cd=calculate                                                      | True                |m.cal.NetworkAnalyzer(f,file,et,pl,not cd==&#39;uncalculate&#39;)                                                              |</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">        @note ports any mean None supplied. comma or dash separated ports are supplied as a string.</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral">        @note arginname means the argument is supplied without a keyword.  The first default argument has the actual name of the argument.</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">        @note frequency dependent devices usually come from &#39;sp.dev&#39; meaning SParameters.Devices package.  Devices that are not frequency dependent</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">        come from &#39;dev&#39; meaning devices.  &#39;m.calkit.std&#39; refers to &#39;Measurement.CalKit.Standards&#39; package.</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral">        @note Usually when an argument is defaulted to None, the device production will fail if the argument is not supplied - meaning the default value cannot be used.</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        list.__init__(self,[</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;file&#39;</span>,<span class="keywordtype">None</span>,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">True</span>,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="stringliteral">&quot;SParameterFile(arg[&#39;&#39;],50.).Resample(f)&quot;</span>),</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;c&#39;</span>,1,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>,<span class="stringliteral">&#39;df&#39;</span>:0.,<span class="stringliteral">&#39;esr&#39;</span>:0.,<span class="stringliteral">&#39;z0&#39;</span>:50.},<span class="keyword">True</span>,</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="stringliteral">&quot;TerminationC(f,float(arg[&#39;&#39;]),float(arg[&#39;z0&#39;]),\</span></div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#ae64f0875afe3067b97ba370b354b9213">  104</a></span>&#160;<span class="stringliteral">            float(arg[&#39;df&#39;]),float(arg[&#39;esr&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;c&#39;</span>,2,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>,<span class="stringliteral">&#39;df&#39;</span>:0.,<span class="stringliteral">&#39;esr&#39;</span>:0.,<span class="stringliteral">&#39;z0&#39;</span>:50.},<span class="keyword">True</span>,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="stringliteral">&quot;SeriesC(f,float(arg[&#39;&#39;]),float(arg[&#39;z0&#39;]),float(arg[&#39;df&#39;]),\</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">            float(arg[&#39;esr&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;l&#39;</span>,1,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">True</span>,<span class="stringliteral">&quot;TerminationL(f,float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;l&#39;</span>,2,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">True</span>,<span class="stringliteral">&quot;SeriesL(f,float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;r&#39;</span>,1,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">False</span>,<span class="stringliteral">&quot;TerminationZ(float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;r&#39;</span>,2,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">False</span>,<span class="stringliteral">&quot;SeriesZ(float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;rse&#39;</span>,2,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">False</span>,<span class="stringliteral">&quot;SeriesRse(float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;shunt&#39;</span>,<span class="stringliteral">&#39;2-4&#39;</span>,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">False</span>,</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="stringliteral">&quot;ShuntZ(ports,float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;m&#39;</span>,4,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">True</span>,<span class="stringliteral">&quot;Mutual(f,float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;ground&#39;</span>,1,<span class="keyword">False</span>,{},<span class="keyword">False</span>,<span class="stringliteral">&quot;Ground()&quot;</span>),</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;open&#39;</span>,1,<span class="keyword">False</span>,{},<span class="keyword">False</span>,<span class="stringliteral">&quot;Open()&quot;</span>),</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;thru&#39;</span>,2,<span class="keyword">False</span>,{},<span class="keyword">False</span>,<span class="stringliteral">&quot;Thru()&quot;</span>),</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;directionalcoupler&#39;</span>,<span class="stringliteral">&#39;3-4&#39;</span>,<span class="keyword">False</span>,{},<span class="keyword">False</span>,</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="stringliteral">&quot;DirectionalCoupler(ports)&quot;</span>),</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;termination&#39;</span>,<span class="keywordtype">None</span>,<span class="keyword">False</span>,{},<span class="keyword">False</span>,</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="stringliteral">&quot;zeros(shape=(ports,ports)).tolist()&quot;</span>),</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;tee&#39;</span>,<span class="keywordtype">None</span>,<span class="keyword">False</span>,{},<span class="keyword">False</span>,<span class="stringliteral">&quot;Tee(ports)&quot;</span>),</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;mixedmode&#39;</span>,4,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="stringliteral">&#39;power&#39;</span>},<span class="keyword">False</span>,</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="stringliteral">&quot;(MixedModeConverterVoltage() if arg[&#39;&#39;] == &#39;voltage&#39;\</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">            else MixedModeConverter())&quot;</span>),</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;idealtransformer&#39;</span>,4,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:1.},<span class="keyword">False</span>,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="stringliteral">&quot;IdealTransformer(float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;voltagecontrolledvoltagesource&#39;</span>,4,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">False</span>,</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="stringliteral">&quot;VoltageControlledVoltageSource(float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;currentcontrolledcurrentsource&#39;</span>,4,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">False</span>,</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="stringliteral">&quot;CurrentControlledCurrentSource(float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;currentcontrolledvoltagesource&#39;</span>,4,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">False</span>,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="stringliteral">&quot;CurrentControlledVoltageSource(float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;voltagecontrolledcurrentsource&#39;</span>,4,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">False</span>,</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="stringliteral">&quot;VoltageControlledCurrentSource(float(arg[&#39;&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;voltageamplifier&#39;</span>,<span class="stringliteral">&#39;2-4&#39;</span>,<span class="keyword">False</span>,{<span class="stringliteral">&#39;gain&#39;</span>:<span class="keywordtype">None</span>,<span class="stringliteral">&#39;zo&#39;</span>:0,<span class="stringliteral">&#39;zi&#39;</span>:1e8,</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="stringliteral">&#39;z0&#39;</span>:50.},<span class="keyword">False</span>,<span class="stringliteral">&quot;VoltageAmplifier(ports,float(arg[&#39;gain&#39;]),\</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="stringliteral">            float(arg[&#39;zi&#39;]),float(arg[&#39;zo&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;currentamplifier&#39;</span>,<span class="stringliteral">&#39;2-4&#39;</span>,<span class="keyword">False</span>,{<span class="stringliteral">&#39;gain&#39;</span>:<span class="keywordtype">None</span>,<span class="stringliteral">&#39;zo&#39;</span>:1e8,<span class="stringliteral">&#39;zi&#39;</span>:0,</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="stringliteral">&#39;z0&#39;</span>:50.},<span class="keyword">False</span>,<span class="stringliteral">&quot;CurrentAmplifier(ports,float(arg[&#39;gain&#39;]),\</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="stringliteral">            float(arg[&#39;zi&#39;]),float(arg[&#39;zo&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;transresistanceamplifier&#39;</span>,<span class="stringliteral">&#39;2-4&#39;</span>,<span class="keyword">False</span>,{<span class="stringliteral">&#39;gain&#39;</span>:<span class="keywordtype">None</span>,<span class="stringliteral">&#39;zo&#39;</span>:0.,</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="stringliteral">&#39;zi&#39;</span>:0.,<span class="stringliteral">&#39;z0&#39;</span>:50.},<span class="keyword">False</span>,<span class="stringliteral">&quot;TransresistanceAmplifier(ports,\</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="stringliteral">            float(arg[&#39;gain&#39;]),float(arg[&#39;zi&#39;]),float(arg[&#39;zo&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;transconductanceamplifier&#39;</span>,<span class="stringliteral">&#39;2-4&#39;</span>,<span class="keyword">False</span>,{<span class="stringliteral">&#39;gain&#39;</span>:<span class="keywordtype">None</span>,<span class="stringliteral">&#39;zo&#39;</span>:1e8,</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="stringliteral">&#39;zi&#39;</span>:1e8,<span class="stringliteral">&#39;z0&#39;</span>:50.},<span class="keyword">False</span>,<span class="stringliteral">&quot;TransconductanceAmplifier(ports,\</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="stringliteral">            float(arg[&#39;gain&#39;]),float(arg[&#39;zi&#39;]),float(arg[&#39;zo&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;opamp&#39;</span>,3,<span class="keyword">False</span>,{<span class="stringliteral">&#39;zi&#39;</span>:1e8,<span class="stringliteral">&#39;zd&#39;</span>:1e8,<span class="stringliteral">&#39;zo&#39;</span>:0.,<span class="stringliteral">&#39;gain&#39;</span>:1e8,<span class="stringliteral">&#39;z0&#39;</span>:50.},</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keyword">False</span>,<span class="stringliteral">&quot;OperationalAmplifier(float(arg[&#39;zi&#39;]),float(arg[&#39;zd&#39;]),\</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="stringliteral">            float(arg[&#39;zo&#39;]),float(arg[&#39;gain&#39;]),float(arg[&#39;z0&#39;]))&quot;</span>)])</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#aec4e7f98b8bcbe19d0e664fe9532c781">__init__Contd</a>()</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keyword">def </span>__init__Contd(self):</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        list.__init__(self,list(self+[</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;tline&#39;</span>,<span class="stringliteral">&#39;2,4&#39;</span>,<span class="keyword">False</span>,{<span class="stringliteral">&#39;zc&#39;</span>:50.,<span class="stringliteral">&#39;td&#39;</span>:0.},<span class="keyword">True</span>,</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="stringliteral">&quot;TLineLossless(f,ports,float(arg[&#39;zc&#39;]),float(arg[&#39;td&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;telegrapher&#39;</span>,2,<span class="keyword">False</span>,{<span class="stringliteral">&#39;r&#39;</span>:0.,<span class="stringliteral">&#39;rse&#39;</span>:0.,<span class="stringliteral">&#39;l&#39;</span>:0.,<span class="stringliteral">&#39;c&#39;</span>:0.,<span class="stringliteral">&#39;df&#39;</span>:0.,</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="stringliteral">&#39;g&#39;</span>:0.,<span class="stringliteral">&#39;z0&#39;</span>:50.,<span class="stringliteral">&#39;sect&#39;</span>:0,<span class="stringliteral">&#39;scale&#39;</span>:1.},<span class="keyword">True</span>,<span class="stringliteral">&quot;TLineTwoPortRLGC(f,\</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="stringliteral">            float(arg[&#39;r&#39;]),float(arg[&#39;rse&#39;]),float(arg[&#39;l&#39;]),float(arg[&#39;g&#39;]),\</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="stringliteral">            float(arg[&#39;c&#39;]),float(arg[&#39;df&#39;]),float(arg[&#39;z0&#39;]),int(arg[&#39;sect&#39;]),\</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="stringliteral">            float(arg[&#39;scale&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;telegrapher&#39;</span>,4,<span class="keyword">False</span>,{<span class="stringliteral">&#39;rp&#39;</span>:0.,<span class="stringliteral">&#39;rsep&#39;</span>:0.,<span class="stringliteral">&#39;lp&#39;</span>:0.,<span class="stringliteral">&#39;cp&#39;</span>:0.,<span class="stringliteral">&#39;dfp&#39;</span>:0.,</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="stringliteral">&#39;gp&#39;</span>:0.,<span class="stringliteral">&#39;rn&#39;</span>:0.,<span class="stringliteral">&#39;rsen&#39;</span>:0.,<span class="stringliteral">&#39;ln&#39;</span>:0.,<span class="stringliteral">&#39;cn&#39;</span>:0.,<span class="stringliteral">&#39;dfn&#39;</span>:0.,<span class="stringliteral">&#39;gn&#39;</span>:0.,<span class="stringliteral">&#39;lm&#39;</span>:0.,</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="stringliteral">&#39;cm&#39;</span>:0.,<span class="stringliteral">&#39;dfm&#39;</span>:0.,<span class="stringliteral">&#39;gm&#39;</span>:0.,<span class="stringliteral">&#39;z0&#39;</span>:50.,<span class="stringliteral">&#39;sect&#39;</span>:0,<span class="stringliteral">&#39;scale&#39;</span>:1.},</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keyword">True</span>,<span class="stringliteral">&quot;TLineDifferentialRLGC(f, float(arg[&#39;rp&#39;]),float(arg[&#39;rsep&#39;]),\</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="stringliteral">            float(arg[&#39;lp&#39;]),float(arg[&#39;gp&#39;]),float(arg[&#39;cp&#39;]),float(arg[&#39;dfp&#39;]),\</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="stringliteral">            float(arg[&#39;rn&#39;]),float(arg[&#39;rsen&#39;]),float(arg[&#39;ln&#39;]),float(arg[&#39;gn&#39;]),\</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="stringliteral">            float(arg[&#39;cn&#39;]),float(arg[&#39;dfn&#39;]),float(arg[&#39;cm&#39;]),float(arg[&#39;dfm&#39;]),\</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="stringliteral">            float(arg[&#39;gm&#39;]),float(arg[&#39;lm&#39;]),float(arg[&#39;z0&#39;]),int(arg[&#39;sect&#39;]),\</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="stringliteral">            float(arg[&#39;scale&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;rlgcfit&#39;</span>,2,<span class="keyword">False</span>,{<span class="stringliteral">&#39;file&#39;</span>:<span class="keywordtype">None</span>,<span class="stringliteral">&#39;scale&#39;</span>:1,<span class="stringliteral">&#39;z0&#39;</span>:50},<span class="keyword">True</span>,</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="stringliteral">&quot;RLGCFitFromFile(f,arg[&#39;file&#39;],scale=float(arg[&#39;scale&#39;]),\</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="stringliteral">            Z0=float(arg[&#39;z0&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;shortstd&#39;</span>,1,<span class="keyword">False</span>,{<span class="stringliteral">&#39;od&#39;</span>:0.,<span class="stringliteral">&#39;oz0&#39;</span>:50.,<span class="stringliteral">&#39;ol&#39;</span>:0.0,<span class="stringliteral">&#39;f0&#39;</span>:1e9,</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="stringliteral">&#39;l0&#39;</span>:0.0,<span class="stringliteral">&#39;l1&#39;</span>:0.0,<span class="stringliteral">&#39;l2&#39;</span>:0.0,<span class="stringliteral">&#39;l3&#39;</span>:0.0},<span class="keyword">True</span>,</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="stringliteral">&quot;ShortStandard(f,float(arg[&#39;od&#39;]),float(arg[&#39;oz0&#39;]),float(arg[&#39;ol&#39;]),\</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="stringliteral">            float(arg[&#39;f0&#39;]),float(arg[&#39;l0&#39;]),float(arg[&#39;l1&#39;]),float(arg[&#39;l2&#39;]),\</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="stringliteral">            float(arg[&#39;l3&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;openstd&#39;</span>,1,<span class="keyword">False</span>,{<span class="stringliteral">&#39;od&#39;</span>:0.,<span class="stringliteral">&#39;oz0&#39;</span>:50.,<span class="stringliteral">&#39;ol&#39;</span>:0.0,<span class="stringliteral">&#39;f0&#39;</span>:1e9,</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="stringliteral">&#39;c0&#39;</span>:0.0,<span class="stringliteral">&#39;c1&#39;</span>:0.0,<span class="stringliteral">&#39;c2&#39;</span>:0.0,<span class="stringliteral">&#39;c3&#39;</span>:0.0},<span class="keyword">True</span>,</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="stringliteral">&quot;OpenStandard(f,float(arg[&#39;od&#39;]),float(arg[&#39;oz0&#39;]),float(arg[&#39;ol&#39;]),\</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="stringliteral">            float(arg[&#39;f0&#39;]),float(arg[&#39;c0&#39;]),float(arg[&#39;c1&#39;]),float(arg[&#39;c2&#39;]),\</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="stringliteral">            float(arg[&#39;c3&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;loadstd&#39;</span>,1,<span class="keyword">False</span>,{<span class="stringliteral">&#39;od&#39;</span>:0.,<span class="stringliteral">&#39;oz0&#39;</span>:50.,<span class="stringliteral">&#39;ol&#39;</span>:0.0,<span class="stringliteral">&#39;f0&#39;</span>:1e9,<span class="stringliteral">&#39;tz&#39;</span>:50.0},</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keyword">True</span>,<span class="stringliteral">&quot;LoadStandard(f,float(arg[&#39;od&#39;]),float(arg[&#39;oz0&#39;]),float(arg[&#39;ol&#39;]),\</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="stringliteral">            float(arg[&#39;f0&#39;]),float(arg[&#39;tz&#39;]))&quot;</span>),</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;thrustd&#39;</span>,2,<span class="keyword">False</span>,{<span class="stringliteral">&#39;od&#39;</span>:0.,<span class="stringliteral">&#39;oz0&#39;</span>:50.,<span class="stringliteral">&#39;ol&#39;</span>:0.0,<span class="stringliteral">&#39;f0&#39;</span>:1e9},</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keyword">True</span>,<span class="stringliteral">&quot;ThruStandard(f,float(arg[&#39;od&#39;]),float(arg[&#39;oz0&#39;]),float(arg[&#39;ol&#39;]),\</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="stringliteral">            float(arg[&#39;f0&#39;]))&quot;</span>)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        ]))</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#aca065403871d6a25f26ecc42dbcc7b45">__init__Contd2</a>()</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keyword">def </span>__init__Contd2(self):</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        list.__init__(self,list(self+[</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;networkanalyzer&#39;</span>,<span class="keywordtype">None</span>,<span class="keyword">False</span>,{<span class="stringliteral">&#39;file&#39;</span>:<span class="keywordtype">None</span>,<span class="stringliteral">&#39;et&#39;</span>:<span class="keywordtype">None</span>,<span class="stringliteral">&#39;pl&#39;</span>:<span class="keywordtype">None</span>,<span class="stringliteral">&#39;cd&#39;</span>:<span class="stringliteral">&#39;calculate&#39;</span>},<span class="keyword">True</span>,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="stringliteral">&quot;NetworkAnalyzer(f,arg[&#39;file&#39;],arg[&#39;et&#39;],arg[&#39;pl&#39;],not arg[&#39;cd&#39;]==&#39;uncalculate&#39;)&quot;</span>),</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">ParserDevice</a>(<span class="stringliteral">&#39;dut&#39;</span>,<span class="keywordtype">None</span>,<span class="keyword">True</span>,{<span class="stringliteral">&#39;&#39;</span>:<span class="keywordtype">None</span>},<span class="keyword">True</span>,<span class="stringliteral">&quot;SParameterFile(arg[&#39;&#39;],50.).Resample(f)&quot;</span>)</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        ]))</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#a84bd6828768b3a1677c71d39f3cb91dd">MakeDevice</a>(self,ports,argsList,f):</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;makes a device from a set of arguments</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="stringliteral">        The device is assigned to self.dev and self.frequencyDependent determines whether the</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="stringliteral">        device is frequency dependent.  Frequency dependent devices are assumed to be instances</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="stringliteral">        of the class SParameters.  Otherwise, they are list of list matrices.</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="stringliteral">        @param ports integer number of ports</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="stringliteral">        @param argsList list of arguments.  The name of the device is the first argument.</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="stringliteral">        If the device has no keyword for the argument, then that argument is next.  Otherwise, besides</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="stringliteral">        the name and the argument with no keyword, the remaining arguments come in keyword/value pairs where the</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="stringliteral">        keyword is a string and the value is the value of the keyword.</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="stringliteral">        @param f list of frequencies</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="stringliteral">        @return boolean whether the device was created.</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="stringliteral">        @throw SignalIntegrityExceptionDeviceParser if the device cannot be created.</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SignalIntegrity.Lib.SParameters</a> <span class="keyword">import</span> SParameterFile</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1CurrentAmplifier.xhtml">SignalIntegrity.Lib.Devices.CurrentAmplifier</a> <span class="keyword">import</span> CurrentAmplifier</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1CurrentControlledCurrentSource.xhtml">SignalIntegrity.Lib.Devices.CurrentControlledCurrentSource</a> <span class="keyword">import</span> CurrentControlledCurrentSource</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1CurrentControlledVoltageSource.xhtml">SignalIntegrity.Lib.Devices.CurrentControlledVoltageSource</a> <span class="keyword">import</span> CurrentControlledVoltageSource</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1DirectionalCoupler.xhtml">SignalIntegrity.Lib.Devices.DirectionalCoupler</a> <span class="keyword">import</span> DirectionalCoupler</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#a84bd6828768b3a1677c71d39f3cb91dd">  224</a></span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Ground.xhtml">SignalIntegrity.Lib.Devices.Ground</a> <span class="keyword">import</span> Ground</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1IdealTransformer.xhtml">SignalIntegrity.Lib.Devices.IdealTransformer</a> <span class="keyword">import</span> IdealTransformer</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1MixedModeConverter.xhtml">SignalIntegrity.Lib.Devices.MixedModeConverter</a> <span class="keyword">import</span> MixedModeConverter</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Open.xhtml">SignalIntegrity.Lib.Devices.Open</a> <span class="keyword">import</span> Open</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1OperationalAmplifier.xhtml">SignalIntegrity.Lib.Devices.OperationalAmplifier</a> <span class="keyword">import</span> OperationalAmplifier</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1SeriesZ.xhtml">SignalIntegrity.Lib.Devices.SeriesZ</a> <span class="keyword">import</span> SeriesZ</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1TerminationZ.xhtml">SignalIntegrity.Lib.Devices.TerminationZ</a> <span class="keyword">import</span> TerminationZ</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1MixedModeConverter.xhtml">SignalIntegrity.Lib.Devices.MixedModeConverter</a> <span class="keyword">import</span> MixedModeConverterVoltage</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Thru.xhtml">SignalIntegrity.Lib.Devices.Thru</a> <span class="keyword">import</span> Thru</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1VoltageAmplifier.xhtml">SignalIntegrity.Lib.Devices.VoltageAmplifier</a> <span class="keyword">import</span> VoltageAmplifier</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1ShuntZ.xhtml">SignalIntegrity.Lib.Devices.ShuntZ</a> <span class="keyword">import</span> ShuntZ</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Tee.xhtml">SignalIntegrity.Lib.Devices.Tee</a> <span class="keyword">import</span> Tee</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1TransconductanceAmplifier.xhtml">SignalIntegrity.Lib.Devices.TransconductanceAmplifier</a> <span class="keyword">import</span> TransconductanceAmplifier</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1TransresistanceAmplifier.xhtml">SignalIntegrity.Lib.Devices.TransresistanceAmplifier</a> <span class="keyword">import</span> TransresistanceAmplifier</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1VoltageControlledVoltageSource.xhtml">SignalIntegrity.Lib.Devices.VoltageControlledVoltageSource</a> <span class="keyword">import</span> VoltageControlledVoltageSource</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1VoltageControlledCurrentSource.xhtml">SignalIntegrity.Lib.Devices.VoltageControlledCurrentSource</a> <span class="keyword">import</span> VoltageControlledCurrentSource</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Fit_1_1RLGCFitFromFile_1_1RLGCFitFromFile.xhtml">SignalIntegrity.Lib.Fit.RLGCFitFromFile</a> <span class="keyword">import</span> RLGCFitFromFile</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1Mutual_1_1Mutual.xhtml">SignalIntegrity.Lib.SParameters.Devices.Mutual</a> <span class="keyword">import</span> Mutual</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1SeriesC_1_1SeriesC.xhtml">SignalIntegrity.Lib.SParameters.Devices.SeriesC</a> <span class="keyword">import</span> SeriesC</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1SeriesL_1_1SeriesL.xhtml">SignalIntegrity.Lib.SParameters.Devices.SeriesL</a> <span class="keyword">import</span> SeriesL</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TerminationC_1_1TerminationC.xhtml">SignalIntegrity.Lib.SParameters.Devices.TerminationC</a> <span class="keyword">import</span> TerminationC</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TerminationL_1_1TerminationL.xhtml">SignalIntegrity.Lib.SParameters.Devices.TerminationL</a> <span class="keyword">import</span> TerminationL</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TLineLossless_1_1TLineLossless.xhtml">SignalIntegrity.Lib.SParameters.Devices.TLineLossless</a> <span class="keyword">import</span> TLineLossless</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TLineTwoPortRLGC_1_1TLineTwoPortRLGC.xhtml">SignalIntegrity.Lib.SParameters.Devices.TLineTwoPortRLGC</a> <span class="keyword">import</span> TLineTwoPortRLGC</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a> <span class="keyword">import</span> SignalIntegrityExceptionDeviceParser</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1ShortStandard_1_1ShortStandard.xhtml">SignalIntegrity.Lib.Measurement.CalKit.Standards.ShortStandard</a> <span class="keyword">import</span> ShortStandard</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1OpenStandard_1_1OpenStandard.xhtml">SignalIntegrity.Lib.Measurement.CalKit.Standards.OpenStandard</a> <span class="keyword">import</span> OpenStandard</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1LoadStandard_1_1LoadStandard.xhtml">SignalIntegrity.Lib.Measurement.CalKit.Standards.LoadStandard</a> <span class="keyword">import</span> LoadStandard</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1ThruStandard_1_1ThruStandard.xhtml">SignalIntegrity.Lib.Measurement.CalKit.Standards.ThruStandard</a> <span class="keyword">import</span> ThruStandard</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1Offset_1_1Offset.xhtml">SignalIntegrity.Lib.Measurement.CalKit.Standards.Offset</a> <span class="keyword">import</span> Offset</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TLineDifferentialRLGC_1_1TLineDifferentialRLGC.xhtml">SignalIntegrity.Lib.SParameters.Devices.TLineDifferentialRLGC</a> <span class="keyword">import</span> TLineDifferentialRLGC</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1NetworkAnalyzer.xhtml">SignalIntegrity.Lib.Measurement.Calibration.NetworkAnalyzer</a> <span class="keyword">import</span> NetworkAnalyzer</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#ac43812121e594f158520698ba706118f">dev</a>=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="keywordflow">if</span> len(argsList) == 0:</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        name=argsList[0].lower()</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        argsList=argsList[1:]</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keywordflow">for</span> device <span class="keywordflow">in</span> self:</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">if</span> device.ports <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#ac43812121e594f158520698ba706118f">  264</a></span>&#160;                <span class="keywordflow">if</span> isinstance(device.ports,int):</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    <span class="keywordflow">if</span> device.ports != ports:</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                        <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                <span class="keywordflow">elif</span> isinstance(device.ports,str):</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    <span class="keywordflow">if</span> <span class="stringliteral">&#39;-&#39;</span> <span class="keywordflow">in</span> device.ports:</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                        (minPort,maxPort) = device.ports.split(<span class="stringliteral">&#39;-&#39;</span>)</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                        <span class="keywordflow">if</span> ports &lt; int(minPort):</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                            <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                        <span class="keywordflow">if</span> ports &gt; int(maxPort):</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                            <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                        acceptablePorts = device.ports.split(<span class="stringliteral">&#39;,&#39;</span>)</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                        <span class="keywordflow">if</span> <span class="keywordflow">not</span> any(ports == int(acceptablePort)</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                   <span class="keywordflow">for</span> acceptablePort <span class="keywordflow">in</span> acceptablePorts):</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                            <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            <span class="keywordflow">if</span> device.devicename != name: <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="comment"># this is the device, try to make it</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">if</span> device.arginname:</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="keywordflow">if</span> len(argsList) &gt; 0:</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                    argsList=[<span class="stringliteral">&#39;&#39;</span>]+argsList</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keywordflow">if</span> len(argsList)//2*2 != len(argsList): <span class="comment"># must be keyword value pairs</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                <span class="keywordflow">raise</span> SignalIntegrityExceptionDeviceParser(</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                    <span class="stringliteral">&#39;arguments must come in keyword pairs: &#39;</span>+name+<span class="stringliteral">&#39; &#39;</span>+<span class="stringliteral">&#39; &#39;</span>.join(argsList))</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            argsProvidedDict = {argsList[i].lower():argsList[i+1]</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                <span class="keywordflow">for</span> i <span class="keywordflow">in</span> range(0,len(argsList),2)}</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> all(key <span class="keywordflow">in</span> device.defaults <span class="keywordflow">for</span> key <span class="keywordflow">in</span> argsProvidedDict.keys()):</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                invalidKeyList=[]</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                <span class="keywordflow">for</span> key <span class="keywordflow">in</span> argsProvidedDict.keys():</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                    <span class="keywordflow">if</span> key <span class="keywordflow">not</span> <span class="keywordflow">in</span> device.defaults:</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                        invalidKeyList.append(key)</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                <span class="keywordflow">raise</span> SignalIntegrityExceptionDeviceParser(</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                    <span class="stringliteral">&#39;argument keyword(s) invalid: &#39;</span>+str(invalidKeyList)+<span class="stringliteral">&#39; for &#39;</span>+name)</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            arg=copy.copy(device.defaults)</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            arg.update(argsProvidedDict)</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> all(arg[key] != <span class="keywordtype">None</span> <span class="keywordflow">for</span> key <span class="keywordflow">in</span> arg.keys()):</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                argNotProvidedList=[]</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                <span class="keywordflow">for</span> key <span class="keywordflow">in</span> arg:</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                    <span class="keywordflow">if</span> arg[key] == <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                        argNotProvidedList.append(key)</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                <span class="keywordflow">raise</span> SignalIntegrityExceptionDeviceParser(</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                    <span class="stringliteral">&#39;mandatory keyword(s) not supplied: &#39;</span>+str(argNotProvidedList)+<span class="stringliteral">&#39; for &#39;</span>+name)</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="comment"># pragma: include outdent</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#ac43812121e594f158520698ba706118f">dev</a>=eval(device.func)</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#a3909d31bcdbe6e7a3450d1fa216755a2">frequencyDependent</a>=device.frequencyDependent</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="comment"># pragma: silent exclude indent</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                    f=[0]</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                    eval(device.func)</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#a3909d31bcdbe6e7a3450d1fa216755a2">  322</a></span>&#160;                    <span class="keywordflow">raise</span> SignalIntegrityExceptionDeviceParser(</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                        <span class="stringliteral">&#39;device &#39;</span>+name+<span class="stringliteral">&#39; could not be instantiated with arguments: &#39;</span>+<span class="stringliteral">&#39; &#39;</span>.join(argsList))</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                <span class="keywordflow">raise</span> SignalIntegrityExceptionDeviceParser(</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                    <span class="stringliteral">&#39;frequency dependent device &#39;</span>+name+<span class="stringliteral">&#39; could not be instantiated because no frequencies provided&#39;</span>)</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160; </div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml">DeviceParser</a>():</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;contains s-parameters of devices made from a netlist line&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    deviceFactory=<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml">DeviceFactory</a>()</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#ae64f0875afe3067b97ba370b354b9213">__init__</a>(self,f,ports,argsList):</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Constructor</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="stringliteral">        makes a device from a set of arguments</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="stringliteral">        The device is assigned to self.m_spf if frequencyDependent and assumed</span></div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml">  346</a></span>&#160;<span class="stringliteral">        to be an instance of class SParameters.</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="stringliteral">        Otherwise, it is assigned to self.m_sp and is assumed to be a list of</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="stringliteral">        list matrix.</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="stringliteral">        The intent of this class is that &quot;Parser&quot; classes use this DeviceParser</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="stringliteral">        to parse netlist lines that have &#39;device&#39;</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="stringliteral">        as the first token.  It keeps these s-parameters and assigns them as</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="stringliteral">        it loops over the frequencies generating numeric</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="stringliteral">        solutions.</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="stringliteral">        @param f list of frequencies</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="stringliteral">        @param ports integer number of ports</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="stringliteral">        @param argsList list of arguments.  The name of the device is the</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="stringliteral">        first argument.</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="stringliteral">        If the device has no keyword for the argument, then that argument is next. </span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="stringliteral">        Otherwise, besides the name and the argument with no keyword, the</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="stringliteral">        remaining arguments come in keyword/value pairs where the</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="stringliteral">        keyword is a string and the value is the value of the keyword.</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="stringliteral">        @return None</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="stringliteral">        @throw SignalIntegrityExceptionDeviceParser if the device cannot be created.</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="stringliteral">        @see SignalIntegrity.Parsers.SystemDescriptionParser</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a> <span class="keyword">import</span> SignalIntegrityExceptionDeviceParser</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1SubCircuits_1_1SubCircuit.xhtml">SignalIntegrity.Lib.SubCircuits.SubCircuit</a> <span class="keyword">import</span> SubCircuit</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>=f</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#aeca0e75de33f68cf0f94eb5c932037bd">m_sp</a>=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a5bad8e400189aa634b24535daee44ee0">m_spf</a>=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <span class="keywordflow">if</span> argsList <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00376"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a286a7f15e5aa7761d219f91accd234c1">  376</a></span>&#160;            <span class="keywordflow">return</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <span class="keywordflow">if</span> len(argsList) == 0:</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            <span class="keywordflow">return</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="keywordflow">if</span> argsList[0] == <span class="stringliteral">&#39;subcircuit&#39;</span>:</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a5bad8e400189aa634b24535daee44ee0">m_spf</a>=SubCircuit(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>,argsList[1],</div>
<div class="line"><a name="l00381"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">  381</a></span>&#160;            <span class="stringliteral">&#39; &#39;</span>.join([x <span class="keywordflow">if</span> len(x.split())==1 <span class="keywordflow">else</span> <span class="stringliteral">&quot;\&#39;&quot;</span>+x+<span class="stringliteral">&quot;\&#39;&quot;</span> <span class="keywordflow">for</span> x <span class="keywordflow">in</span> argsList[2:]]))</div>
<div class="line"><a name="l00382"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#aeca0e75de33f68cf0f94eb5c932037bd">  382</a></span>&#160;            <span class="keywordflow">return</span></div>
<div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a5bad8e400189aa634b24535daee44ee0">  383</a></span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a7754df816b89f92ecfdb10d2fd13fad3">deviceFactory</a>.MakeDevice(ports, argsList, f):</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a7754df816b89f92ecfdb10d2fd13fad3">deviceFactory</a>.frequencyDependent:</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a5bad8e400189aa634b24535daee44ee0">m_spf</a>=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a7754df816b89f92ecfdb10d2fd13fad3">deviceFactory</a>.dev</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#aeca0e75de33f68cf0f94eb5c932037bd">m_sp</a>=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a7754df816b89f92ecfdb10d2fd13fad3">deviceFactory</a>.dev</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="comment">#print &#39;device not found: &#39;+&#39; &#39;.join(argsList)</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            <span class="keywordflow">raise</span> SignalIntegrityExceptionDeviceParser(</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                <span class="stringliteral">&#39;device not found: &#39;</span>+<span class="stringliteral">&#39; &#39;</span>.join(argsList))</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="keywordflow">return</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    </div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1Mutual_1_1Mutual_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1Mutual_1_1Mutual.xhtml">SignalIntegrity.Lib.SParameters.Devices.Mutual.Mutual</a></div><div class="ttdoc">s-parameters of a mutual inductance</div><div class="ttdef"><b>Definition:</b> <a href="SParameters_2Devices_2Mutual_8py_source.xhtml#l00027">Mutual.py:27</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser_xhtml_a286a7f15e5aa7761d219f91accd234c1"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a286a7f15e5aa7761d219f91accd234c1">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceParser.__init__</a></div><div class="ttdeci">def __init__(self, f, ports, argsList)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00376">DeviceParser.py:376</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory_xhtml_a3909d31bcdbe6e7a3450d1fa216755a2"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#a3909d31bcdbe6e7a3450d1fa216755a2">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceFactory.frequencyDependent</a></div><div class="ttdeci">frequencyDependent</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00322">DeviceParser.py:322</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser_xhtml_a7754df816b89f92ecfdb10d2fd13fad3"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a7754df816b89f92ecfdb10d2fd13fad3">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceParser.deviceFactory</a></div><div class="ttdeci">deviceFactory</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00347">DeviceParser.py:347</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TLineLossless_1_1TLineLossless_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TLineLossless_1_1TLineLossless.xhtml">SignalIntegrity.Lib.SParameters.Devices.TLineLossless.TLineLossless</a></div><div class="ttdoc">s-parameters of ideal lossless single-ended transmission line</div><div class="ttdef"><b>Definition:</b> <a href="TLineLossless_8py_source.xhtml#l00025">TLineLossless.py:25</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1CurrentControlledCurrentSource_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1CurrentControlledCurrentSource.xhtml">SignalIntegrity.Lib.Devices.CurrentControlledCurrentSource</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2CurrentControlledCurrentSource_8py_source.xhtml#l00001">CurrentControlledCurrentSource.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1SeriesC_1_1SeriesC_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1SeriesC_1_1SeriesC.xhtml">SignalIntegrity.Lib.SParameters.Devices.SeriesC.SeriesC</a></div><div class="ttdoc">s-parameters of a series capacitance</div><div class="ttdef"><b>Definition:</b> <a href="SParameters_2Devices_2SeriesC_8py_source.xhtml#l00026">SeriesC.py:26</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Tee_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Tee.xhtml">SignalIntegrity.Lib.Devices.Tee</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2Tee_8py_source.xhtml#l00001">Tee.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1MixedModeConverter_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1MixedModeConverter.xhtml">SignalIntegrity.Lib.Devices.MixedModeConverter</a></div><div class="ttdef"><b>Definition:</b> <a href="MixedModeConverter_8py_source.xhtml#l00001">MixedModeConverter.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice_xhtml_a45ac73548ffbf890c645804b7301b377"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#a45ac73548ffbf890c645804b7301b377">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.ParserDevice.devicename</a></div><div class="ttdeci">devicename</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00044">DeviceParser.py:44</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1TransconductanceAmplifier_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1TransconductanceAmplifier.xhtml">SignalIntegrity.Lib.Devices.TransconductanceAmplifier</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2TransconductanceAmplifier_8py_source.xhtml#l00001">TransconductanceAmplifier.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1LoadStandard_1_1LoadStandard_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1LoadStandard_1_1LoadStandard.xhtml">SignalIntegrity.Lib.Measurement.CalKit.Standards.LoadStandard.LoadStandard</a></div><div class="ttdoc">Class providing the s-parameters of a load standard as commonly defined for a calibration kit.</div><div class="ttdef"><b>Definition:</b> <a href="LoadStandard_8py_source.xhtml#l00031">LoadStandard.py:31</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory_xhtml_ae64f0875afe3067b97ba370b354b9213"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#ae64f0875afe3067b97ba370b354b9213">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceFactory.__init__</a></div><div class="ttdeci">def __init__(self)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00104">DeviceParser.py:104</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice_xhtml_a3909d31bcdbe6e7a3450d1fa216755a2"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#a3909d31bcdbe6e7a3450d1fa216755a2">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.ParserDevice.frequencyDependent</a></div><div class="ttdeci">frequencyDependent</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00048">DeviceParser.py:48</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1SParameters_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SignalIntegrity.Lib.SParameters</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2SParameters_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1SeriesL_1_1SeriesL_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1SeriesL_1_1SeriesL.xhtml">SignalIntegrity.Lib.SParameters.Devices.SeriesL.SeriesL</a></div><div class="ttdoc">s-parameters of a series inductance</div><div class="ttdef"><b>Definition:</b> <a href="SParameters_2Devices_2SeriesL_8py_source.xhtml#l00024">SeriesL.py:24</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Open_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Open.xhtml">SignalIntegrity.Lib.Devices.Open</a></div><div class="ttdef"><b>Definition:</b> <a href="Open_8py_source.xhtml#l00001">Open.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TLineDifferentialRLGC_1_1TLineDifferentialRLGC_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TLineDifferentialRLGC_1_1TLineDifferentialRLGC.xhtml">SignalIntegrity.Lib.SParameters.Devices.TLineDifferentialRLGC.TLineDifferentialRLGC</a></div><div class="ttdoc">s-parameters of differential RLGC (telegrapher's) transmission line</div><div class="ttdef"><b>Definition:</b> <a href="TLineDifferentialRLGC_8py_source.xhtml#l00027">TLineDifferentialRLGC.py:27</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice_xhtml_a583e2428c4cc82875b837607cb1138dd"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#a583e2428c4cc82875b837607cb1138dd">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.ParserDevice.arginname</a></div><div class="ttdeci">arginname</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00046">DeviceParser.py:46</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1OperationalAmplifier_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1OperationalAmplifier.xhtml">SignalIntegrity.Lib.Devices.OperationalAmplifier</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2OperationalAmplifier_8py_source.xhtml#l00001">OperationalAmplifier.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Ground_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Ground.xhtml">SignalIntegrity.Lib.Devices.Ground</a></div><div class="ttdef"><b>Definition:</b> <a href="Ground_8py_source.xhtml#l00001">Ground.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1ShuntZ_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1ShuntZ.xhtml">SignalIntegrity.Lib.Devices.ShuntZ</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2ShuntZ_8py_source.xhtml#l00001">ShuntZ.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser_xhtml_a40a26fb5046a51e40dd1b61c78d72ace"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceParser.m_f</a></div><div class="ttdeci">m_f</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00381">DeviceParser.py:381</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceFactory</a></div><div class="ttdoc">device class factory that produces devices</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00053">DeviceParser.py:53</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice_xhtml_ac11c3f53e8e6927c672d9f9f0aa5b933"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#ac11c3f53e8e6927c672d9f9f0aa5b933">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.ParserDevice.__init__</a></div><div class="ttdeci">def __init__(self, devicename, ports, arginname, defaults, frequencyDependent, func)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00043">DeviceParser.py:43</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1CurrentAmplifier_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1CurrentAmplifier.xhtml">SignalIntegrity.Lib.Devices.CurrentAmplifier</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2CurrentAmplifier_8py_source.xhtml#l00001">CurrentAmplifier.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory_xhtml_ac43812121e594f158520698ba706118f"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#ac43812121e594f158520698ba706118f">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceFactory.dev</a></div><div class="ttdeci">dev</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00264">DeviceParser.py:264</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1VoltageControlledVoltageSource_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1VoltageControlledVoltageSource.xhtml">SignalIntegrity.Lib.Devices.VoltageControlledVoltageSource</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2VoltageControlledVoltageSource_8py_source.xhtml#l00001">VoltageControlledVoltageSource.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Fit_1_1RLGCFitFromFile_1_1RLGCFitFromFile_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Fit_1_1RLGCFitFromFile_1_1RLGCFitFromFile.xhtml">SignalIntegrity.Lib.Fit.RLGCFitFromFile.RLGCFitFromFile</a></div><div class="ttdoc">fits a two-port RLGC model to s-parameters from a file</div><div class="ttdef"><b>Definition:</b> <a href="RLGCFitFromFile_8py_source.xhtml#l00029">RLGCFitFromFile.py:29</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1ShortStandard_1_1ShortStandard_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1ShortStandard_1_1ShortStandard.xhtml">SignalIntegrity.Lib.Measurement.CalKit.Standards.ShortStandard.ShortStandard</a></div><div class="ttdoc">Class providing the s-parameters of a short standard as commonly defined for a calibration kit.</div><div class="ttdef"><b>Definition:</b> <a href="ShortStandard_8py_source.xhtml#l00031">ShortStandard.py:31</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory_xhtml_aca065403871d6a25f26ecc42dbcc7b45"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#aca065403871d6a25f26ecc42dbcc7b45">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceFactory.__init__Contd2</a></div><div class="ttdeci">def __init__Contd2(self)</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00202">DeviceParser.py:202</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1TransresistanceAmplifier_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1TransresistanceAmplifier.xhtml">SignalIntegrity.Lib.Devices.TransresistanceAmplifier</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2TransresistanceAmplifier_8py_source.xhtml#l00001">TransresistanceAmplifier.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.ParserDevice</a></div><div class="ttdoc">class defining how to parse devices</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00027">DeviceParser.py:27</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1IdealTransformer_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1IdealTransformer.xhtml">SignalIntegrity.Lib.Devices.IdealTransformer</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2IdealTransformer_8py_source.xhtml#l00001">IdealTransformer.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceParser</a></div><div class="ttdoc">contains s-parameters of devices made from a netlist line</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00346">DeviceParser.py:346</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1VoltageAmplifier_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1VoltageAmplifier.xhtml">SignalIntegrity.Lib.Devices.VoltageAmplifier</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2VoltageAmplifier_8py_source.xhtml#l00001">VoltageAmplifier.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Exception_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a></div><div class="ttdef"><b>Definition:</b> <a href="Exception_8py_source.xhtml#l00001">Exception.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1SeriesZ_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1SeriesZ.xhtml">SignalIntegrity.Lib.Devices.SeriesZ</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2SeriesZ_8py_source.xhtml#l00001">SeriesZ.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice_xhtml_ac5a965d3aaf532842d02995e58c647e0"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#ac5a965d3aaf532842d02995e58c647e0">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.ParserDevice.ports</a></div><div class="ttdeci">ports</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00045">DeviceParser.py:45</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TLineTwoPortRLGC_1_1TLineTwoPortRLGC_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TLineTwoPortRLGC_1_1TLineTwoPortRLGC.xhtml">SignalIntegrity.Lib.SParameters.Devices.TLineTwoPortRLGC.TLineTwoPortRLGC</a></div><div class="ttdoc">s-parameters of single-ended RLGC (telegraphers) transmission line</div><div class="ttdef"><b>Definition:</b> <a href="TLineTwoPortRLGC_8py_source.xhtml#l00028">TLineTwoPortRLGC.py:28</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Thru_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1Thru.xhtml">SignalIntegrity.Lib.Devices.Thru</a></div><div class="ttdef"><b>Definition:</b> <a href="Thru_8py_source.xhtml#l00001">Thru.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser_xhtml_aeca0e75de33f68cf0f94eb5c932037bd"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#aeca0e75de33f68cf0f94eb5c932037bd">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceParser.m_sp</a></div><div class="ttdeci">m_sp</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00382">DeviceParser.py:382</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1OpenStandard_1_1OpenStandard_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1OpenStandard_1_1OpenStandard.xhtml">SignalIntegrity.Lib.Measurement.CalKit.Standards.OpenStandard.OpenStandard</a></div><div class="ttdoc">class providing the s-parameters of an open standard as commonly defined for a calibration kit.</div><div class="ttdef"><b>Definition:</b> <a href="OpenStandard_8py_source.xhtml#l00031">OpenStandard.py:31</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1ThruStandard_1_1ThruStandard_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1ThruStandard_1_1ThruStandard.xhtml">SignalIntegrity.Lib.Measurement.CalKit.Standards.ThruStandard.ThruStandard</a></div><div class="ttdoc">Class providing the s-parameters of a thru standard as commonly defined for a calibration kit.</div><div class="ttdef"><b>Definition:</b> <a href="ThruStandard_8py_source.xhtml#l00028">ThruStandard.py:28</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TerminationL_1_1TerminationL_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TerminationL_1_1TerminationL.xhtml">SignalIntegrity.Lib.SParameters.Devices.TerminationL.TerminationL</a></div><div class="ttdoc">s-parameters of a termination (one-port) inductance</div><div class="ttdef"><b>Definition:</b> <a href="SParameters_2Devices_2TerminationL_8py_source.xhtml#l00025">TerminationL.py:25</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TerminationC_1_1TerminationC_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices_1_1TerminationC_1_1TerminationC.xhtml">SignalIntegrity.Lib.SParameters.Devices.TerminationC.TerminationC</a></div><div class="ttdoc">s-parameters of a termination (one-port) capacitance</div><div class="ttdef"><b>Definition:</b> <a href="SParameters_2Devices_2TerminationC_8py_source.xhtml#l00025">TerminationC.py:25</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1Offset_1_1Offset_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards_1_1Offset_1_1Offset.xhtml">SignalIntegrity.Lib.Measurement.CalKit.Standards.Offset.Offset</a></div><div class="ttdoc">class providing the s-parameters of an offset portion of the various calibration standards for a cali...</div><div class="ttdef"><b>Definition:</b> <a href="Offset_8py_source.xhtml#l00030">Offset.py:30</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1VoltageControlledCurrentSource_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1VoltageControlledCurrentSource.xhtml">SignalIntegrity.Lib.Devices.VoltageControlledCurrentSource</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2VoltageControlledCurrentSource_8py_source.xhtml#l00001">VoltageControlledCurrentSource.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1CurrentControlledVoltageSource_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1CurrentControlledVoltageSource.xhtml">SignalIntegrity.Lib.Devices.CurrentControlledVoltageSource</a></div><div class="ttdef"><b>Definition:</b> <a href="Devices_2CurrentControlledVoltageSource_8py_source.xhtml#l00001">CurrentControlledVoltageSource.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser_xhtml_a5bad8e400189aa634b24535daee44ee0"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceParser.xhtml#a5bad8e400189aa634b24535daee44ee0">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceParser.m_spf</a></div><div class="ttdeci">m_spf</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00383">DeviceParser.py:383</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice_xhtml_a7cafc845c45c84cbda0408f57a7f0dd2"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#a7cafc845c45c84cbda0408f57a7f0dd2">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.ParserDevice.defaults</a></div><div class="ttdeci">defaults</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00047">DeviceParser.py:47</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice_xhtml_a3699148440db7bdde6e95e16092363d1"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1ParserDevice.xhtml#a3699148440db7bdde6e95e16092363d1">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.ParserDevice.func</a></div><div class="ttdeci">func</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00049">DeviceParser.py:49</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1TerminationZ_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1TerminationZ.xhtml">SignalIntegrity.Lib.Devices.TerminationZ</a></div><div class="ttdef"><b>Definition:</b> <a href="TerminationZ_8py_source.xhtml#l00001">TerminationZ.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Devices_1_1DirectionalCoupler_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Devices_1_1DirectionalCoupler.xhtml">SignalIntegrity.Lib.Devices.DirectionalCoupler</a></div><div class="ttdef"><b>Definition:</b> <a href="DirectionalCoupler_8py_source.xhtml#l00001">DirectionalCoupler.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory_xhtml_aec4e7f98b8bcbe19d0e664fe9532c781"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#aec4e7f98b8bcbe19d0e664fe9532c781">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceFactory.__init__Contd</a></div><div class="ttdeci">def __init__Contd(self)</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00161">DeviceParser.py:161</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1NetworkAnalyzer_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1NetworkAnalyzer.xhtml">SignalIntegrity.Lib.Measurement.Calibration.NetworkAnalyzer</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2Measurement_2Calibration_2NetworkAnalyzer_8py_source.xhtml#l00001">NetworkAnalyzer.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory_xhtml_a84bd6828768b3a1677c71d39f3cb91dd"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#a84bd6828768b3a1677c71d39f3cb91dd">SignalIntegrity.Lib.Parsers.Devices.DeviceParser.DeviceFactory.MakeDevice</a></div><div class="ttdeci">def MakeDevice(self, ports, argsList, f)</div><div class="ttdoc">makes a device from a set of arguments</div><div class="ttdef"><b>Definition:</b> <a href="DeviceParser_8py_source.xhtml#l00224">DeviceParser.py:224</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1SubCircuits_1_1SubCircuit_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1SubCircuits_1_1SubCircuit.xhtml">SignalIntegrity.Lib.SubCircuits.SubCircuit</a></div><div class="ttdef"><b>Definition:</b> <a href="SubCircuit_8py_source.xhtml#l00001">SubCircuit.py:1</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
