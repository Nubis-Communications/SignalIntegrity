<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrityPages/SignalIntegrity/App/Help/elyxer-1.2.5/forks/jras-elyxer/math2html.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.1.13</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_b9fdada3f2e13cef1825d6786bc9035d.xhtml">SignalIntegrityPages</a></li><li class="navelem"><a class="el" href="dir_028a9223bee22939bccc3f6c1a6cb3a3.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_5b686ebfb9be912765538ef193999c48.xhtml">App</a></li><li class="navelem"><a class="el" href="dir_4fd30fa432b1bd9f918b04bf58ad3f14.xhtml">Help</a></li><li class="navelem"><a class="el" href="dir_99d9149e1df89b2e91206bbd6265a65c.xhtml">elyxer-1.2.5</a></li><li class="navelem"><a class="el" href="dir_8eec2e1300d6de011d8246002f659316.xhtml">forks</a></li><li class="navelem"><a class="el" href="dir_48a46efab03d400ddc57ce85017e0eca.xhtml">jras-elyxer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">math2html.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespacemath2html.xhtml">    1</a></span>&#160;<span class="comment">#! /usr/bin/env python</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"># -*- coding: utf-8 -*-</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">#   math2html: convert LaTeX equations to HTML output.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">#   Copyright (C) 2009-2011 Alex Fern√°ndez</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">#   Released under the terms of the `2-Clause BSD license&#39;_, in short:</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">#   Copying and distribution of this file, with or without modification,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">#   are permitted in any medium without royalty provided the copyright</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">#   notice and this notice are preserved.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">#   This file is offered as-is, without any warranty.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># .. _2-Clause BSD license: http://www.spdx.org/licenses/BSD-2-Clause</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">#   Based on eLyXer: convert LyX source files to HTML output.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#   http://elyxer.nongnu.org/</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># --end--</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"># Alex 20101110</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"># eLyXer standalone formula conversion to HTML.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> sys</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">class </span>Trace(object):</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="stringliteral">&quot;A tracing class&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  debugmode = <span class="keyword">False</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  quietmode = <span class="keyword">False</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  showlinesmode = <span class="keyword">False</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  prefix = <span class="keywordtype">None</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">def </span>debug(cls, message):</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="stringliteral">&quot;Show a debug message&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> Trace.debugmode <span class="keywordflow">or</span> Trace.quietmode:</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    Trace.show(message, sys.stdout)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">def </span>message(cls, message):</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="stringliteral">&quot;Show a trace message&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">if</span> Trace.quietmode:</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">if</span> Trace.prefix <span class="keywordflow">and</span> Trace.showlinesmode:</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      message = Trace.prefix + message</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    Trace.show(message, sys.stdout)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keyword">def </span>error(cls, message):</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="stringliteral">&quot;Show an error message&quot;</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    message = <span class="stringliteral">&#39;* &#39;</span> + message</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">if</span> Trace.prefix <span class="keywordflow">and</span> Trace.showlinesmode:</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      message = Trace.prefix + message</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    Trace.show(message, sys.stderr)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keyword">def </span>fatal(cls, message):</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="stringliteral">&quot;Show an error message and terminate&quot;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    Trace.error(<span class="stringliteral">&#39;FATAL: &#39;</span> + message)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    exit(-1)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keyword">def </span>show(cls, message, channel):</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="stringliteral">&quot;Show a message out of a channel&quot;</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">if</span> sys.version_info &lt; (3,0):</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      message = message.encode(<span class="stringliteral">&#39;utf-8&#39;</span>)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    channel.write(message + <span class="stringliteral">&#39;\n&#39;</span>)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  debug = classmethod(debug)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  message = classmethod(message)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  error = classmethod(error)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  fatal = classmethod(fatal)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  show = classmethod(show)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">import</span> os.path</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">import</span> sys</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">class </span>BibStylesConfig(object):</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  abbrvnat = {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="stringliteral">u&#39;@article&#39;</span>:<span class="stringliteral">u&#39;$authors. $title. &lt;i&gt;$journal&lt;/i&gt;,{ {$volume:}$pages,} $month $year.{ doi: $doi.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="stringliteral">u&#39;cite&#39;</span>:<span class="stringliteral">u&#39;$surname($year)&#39;</span>, </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="stringliteral">u&#39;default&#39;</span>:<span class="stringliteral">u&#39;$authors. &lt;i&gt;$title&lt;/i&gt;. $publisher, $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  alpha = {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="stringliteral">u&#39;@article&#39;</span>:<span class="stringliteral">u&#39;$authors. $title.{ &lt;i&gt;$journal&lt;/i&gt;{, {$volume}{($number)}}{: $pages}{, $year}.}{ &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ &lt;a href=&quot;$filename&quot;&gt;$filename&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="stringliteral">u&#39;cite&#39;</span>:<span class="stringliteral">u&#39;$Sur$YY&#39;</span>, </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="stringliteral">u&#39;default&#39;</span>:<span class="stringliteral">u&#39;$authors. $title.{ &lt;i&gt;$journal&lt;/i&gt;,} $year.{ &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ &lt;a href=&quot;$filename&quot;&gt;$filename&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  authordate2 = {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="stringliteral">u&#39;@article&#39;</span>:<span class="stringliteral">u&#39;$authors. $year. $title. &lt;i&gt;$journal&lt;/i&gt;, &lt;b&gt;$volume&lt;/b&gt;($number), $pages.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="stringliteral">u&#39;@book&#39;</span>:<span class="stringliteral">u&#39;$authors. $year. &lt;i&gt;$title&lt;/i&gt;. $publisher.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="stringliteral">u&#39;cite&#39;</span>:<span class="stringliteral">u&#39;$surname, $year&#39;</span>, </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="stringliteral">u&#39;default&#39;</span>:<span class="stringliteral">u&#39;$authors. $year. &lt;i&gt;$title&lt;/i&gt;. $publisher.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  default = {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="stringliteral">u&#39;@article&#39;</span>:<span class="stringliteral">u&#39;$authors: ‚Äú$title‚Äù, &lt;i&gt;$journal&lt;/i&gt;,{ pp. $pages,} $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="stringliteral">u&#39;@book&#39;</span>:<span class="stringliteral">u&#39;{$authors: }&lt;i&gt;$title&lt;/i&gt;{ ($editor, ed.)}.{{ $publisher,} $year.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="stringliteral">u&#39;@booklet&#39;</span>:<span class="stringliteral">u&#39;$authors: &lt;i&gt;$title&lt;/i&gt;.{{ $publisher,} $year.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="stringliteral">u&#39;@conference&#39;</span>:<span class="stringliteral">u&#39;$authors: ‚Äú$title‚Äù, &lt;i&gt;$journal&lt;/i&gt;,{ pp. $pages,} $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="stringliteral">u&#39;@inbook&#39;</span>:<span class="stringliteral">u&#39;$authors: &lt;i&gt;$title&lt;/i&gt;.{{ $publisher,} $year.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="stringliteral">u&#39;@incollection&#39;</span>:<span class="stringliteral">u&#39;$authors: &lt;i&gt;$title&lt;/i&gt;{ in &lt;i&gt;$booktitle&lt;/i&gt;{ ($editor, ed.)}}.{{ $publisher,} $year.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <span class="stringliteral">u&#39;@inproceedings&#39;</span>:<span class="stringliteral">u&#39;$authors: ‚Äú$title‚Äù, &lt;i&gt;$booktitle&lt;/i&gt;,{ pp. $pages,} $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="stringliteral">u&#39;@manual&#39;</span>:<span class="stringliteral">u&#39;$authors: &lt;i&gt;$title&lt;/i&gt;.{{ $publisher,} $year.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      <span class="stringliteral">u&#39;@mastersthesis&#39;</span>:<span class="stringliteral">u&#39;$authors: &lt;i&gt;$title&lt;/i&gt;.{{ $publisher,} $year.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <span class="stringliteral">u&#39;@misc&#39;</span>:<span class="stringliteral">u&#39;$authors: &lt;i&gt;$title&lt;/i&gt;.{{ $publisher,}{ $howpublished,} $year.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <span class="stringliteral">u&#39;@phdthesis&#39;</span>:<span class="stringliteral">u&#39;$authors: &lt;i&gt;$title&lt;/i&gt;.{{ $publisher,} $year.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="stringliteral">u&#39;@proceedings&#39;</span>:<span class="stringliteral">u&#39;$authors: ‚Äú$title‚Äù, &lt;i&gt;$journal&lt;/i&gt;,{ pp. $pages,} $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="stringliteral">u&#39;@techreport&#39;</span>:<span class="stringliteral">u&#39;$authors: &lt;i&gt;$title&lt;/i&gt;, $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="stringliteral">u&#39;@unpublished&#39;</span>:<span class="stringliteral">u&#39;$authors: ‚Äú$title‚Äù, &lt;i&gt;$journal&lt;/i&gt;, $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="stringliteral">u&#39;cite&#39;</span>:<span class="stringliteral">u&#39;$index&#39;</span>, </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="stringliteral">u&#39;default&#39;</span>:<span class="stringliteral">u&#39;$authors: &lt;i&gt;$title&lt;/i&gt;.{{ $publisher,} $year.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  defaulttags = {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="stringliteral">u&#39;YY&#39;</span>:<span class="stringliteral">u&#39;??&#39;</span>, <span class="stringliteral">u&#39;authors&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;surname&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  ieeetr = {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="stringliteral">u&#39;@article&#39;</span>:<span class="stringliteral">u&#39;$authors, ‚Äú$title‚Äù, &lt;i&gt;$journal&lt;/i&gt;, vol. $volume, no. $number, pp. $pages, $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="stringliteral">u&#39;@book&#39;</span>:<span class="stringliteral">u&#39;$authors, &lt;i&gt;$title&lt;/i&gt;. $publisher, $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="stringliteral">u&#39;cite&#39;</span>:<span class="stringliteral">u&#39;$index&#39;</span>, </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <span class="stringliteral">u&#39;default&#39;</span>:<span class="stringliteral">u&#39;$authors, ‚Äú$title‚Äù. $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  plain = {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="stringliteral">u&#39;@article&#39;</span>:<span class="stringliteral">u&#39;$authors. $title.{ &lt;i&gt;$journal&lt;/i&gt;{, {$volume}{($number)}}{:$pages}{, $year}.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="stringliteral">u&#39;@book&#39;</span>:<span class="stringliteral">u&#39;$authors. &lt;i&gt;$title&lt;/i&gt;. $publisher,{ $month} $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="stringliteral">u&#39;@incollection&#39;</span>:<span class="stringliteral">u&#39;$authors. $title.{ In &lt;i&gt;$booktitle&lt;/i&gt; {($editor, ed.)}.} $publisher,{ $month} $year.{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      <span class="stringliteral">u&#39;@inproceedings&#39;</span>:<span class="stringliteral">u&#39;$authors. $title. { &lt;i&gt;$booktitle&lt;/i&gt;{, {$volume}{($number)}}{:$pages}{, $year}.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="stringliteral">u&#39;cite&#39;</span>:<span class="stringliteral">u&#39;$index&#39;</span>, </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      <span class="stringliteral">u&#39;default&#39;</span>:<span class="stringliteral">u&#39;{$authors. }$title.{{ $publisher,} $year.}{ URL &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  vancouver = {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="stringliteral">u&#39;@article&#39;</span>:<span class="stringliteral">u&#39;$authors. $title. &lt;i&gt;$journal&lt;/i&gt;, $year{;{&lt;b&gt;$volume&lt;/b&gt;}{($number)}{:$pages}}.{ URL: &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="stringliteral">u&#39;@book&#39;</span>:<span class="stringliteral">u&#39;$authors. $title. {$publisher, }$year.{ URL: &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="stringliteral">u&#39;cite&#39;</span>:<span class="stringliteral">u&#39;$index&#39;</span>, </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="stringliteral">u&#39;default&#39;</span>:<span class="stringliteral">u&#39;$authors. $title; {$publisher, }$year.{ $howpublished.}{ URL: &lt;a href=&quot;$url&quot;&gt;$url&lt;/a&gt;.}{ $note.}&#39;</span>, </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keyword">class </span>BibTeXConfig(object):</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  replaced = {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="stringliteral">u&#39;--&#39;</span>:<span class="stringliteral">u&#39;‚Äî&#39;</span>, <span class="stringliteral">u&#39;..&#39;</span>:<span class="stringliteral">u&#39;.&#39;</span>, </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword">class </span>ContainerConfig(object):</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  endings = {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="stringliteral">u&#39;Align&#39;</span>:<span class="stringliteral">u&#39;\\end_layout&#39;</span>, <span class="stringliteral">u&#39;BarredText&#39;</span>:<span class="stringliteral">u&#39;\\bar&#39;</span>, </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="stringliteral">u&#39;BoldText&#39;</span>:<span class="stringliteral">u&#39;\\series&#39;</span>, <span class="stringliteral">u&#39;Cell&#39;</span>:<span class="stringliteral">u&#39;&lt;/cell&#39;</span>, </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="stringliteral">u&#39;ChangeDeleted&#39;</span>:<span class="stringliteral">u&#39;\\change_unchanged&#39;</span>, </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="stringliteral">u&#39;ChangeInserted&#39;</span>:<span class="stringliteral">u&#39;\\change_unchanged&#39;</span>, <span class="stringliteral">u&#39;ColorText&#39;</span>:<span class="stringliteral">u&#39;\\color&#39;</span>, </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="stringliteral">u&#39;EmphaticText&#39;</span>:<span class="stringliteral">u&#39;\\emph&#39;</span>, <span class="stringliteral">u&#39;Hfill&#39;</span>:<span class="stringliteral">u&#39;\\hfill&#39;</span>, <span class="stringliteral">u&#39;Inset&#39;</span>:<span class="stringliteral">u&#39;\\end_inset&#39;</span>, </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="stringliteral">u&#39;Layout&#39;</span>:<span class="stringliteral">u&#39;\\end_layout&#39;</span>, <span class="stringliteral">u&#39;LyXFooter&#39;</span>:<span class="stringliteral">u&#39;\\end_document&#39;</span>, </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="stringliteral">u&#39;LyXHeader&#39;</span>:<span class="stringliteral">u&#39;\\end_header&#39;</span>, <span class="stringliteral">u&#39;Row&#39;</span>:<span class="stringliteral">u&#39;&lt;/row&#39;</span>, <span class="stringliteral">u&#39;ShapedText&#39;</span>:<span class="stringliteral">u&#39;\\shape&#39;</span>, </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      <span class="stringliteral">u&#39;SizeText&#39;</span>:<span class="stringliteral">u&#39;\\size&#39;</span>, <span class="stringliteral">u&#39;StrikeOut&#39;</span>:<span class="stringliteral">u&#39;\\strikeout&#39;</span>, </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="stringliteral">u&#39;TextFamily&#39;</span>:<span class="stringliteral">u&#39;\\family&#39;</span>, <span class="stringliteral">u&#39;VersalitasText&#39;</span>:<span class="stringliteral">u&#39;\\noun&#39;</span>, </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  extracttext = {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="stringliteral">u&#39;allowed&#39;</span>:[<span class="stringliteral">u&#39;StringContainer&#39;</span>,<span class="stringliteral">u&#39;Constant&#39;</span>,<span class="stringliteral">u&#39;FormulaConstant&#39;</span>,], </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="stringliteral">u&#39;cloned&#39;</span>:[<span class="stringliteral">u&#39;&#39;</span>,], </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      <span class="stringliteral">u&#39;extracted&#39;</span>:[<span class="stringliteral">u&#39;PlainLayout&#39;</span>,<span class="stringliteral">u&#39;TaggedText&#39;</span>,<span class="stringliteral">u&#39;Align&#39;</span>,<span class="stringliteral">u&#39;Caption&#39;</span>,<span class="stringliteral">u&#39;TextFamily&#39;</span>,<span class="stringliteral">u&#39;EmphaticText&#39;</span>,<span class="stringliteral">u&#39;VersalitasText&#39;</span>,<span class="stringliteral">u&#39;BarredText&#39;</span>,<span class="stringliteral">u&#39;SizeText&#39;</span>,<span class="stringliteral">u&#39;ColorText&#39;</span>,<span class="stringliteral">u&#39;LangLine&#39;</span>,<span class="stringliteral">u&#39;Formula&#39;</span>,<span class="stringliteral">u&#39;Bracket&#39;</span>,<span class="stringliteral">u&#39;RawText&#39;</span>,<span class="stringliteral">u&#39;BibTag&#39;</span>,<span class="stringliteral">u&#39;FormulaNumber&#39;</span>,<span class="stringliteral">u&#39;AlphaCommand&#39;</span>,<span class="stringliteral">u&#39;EmptyCommand&#39;</span>,<span class="stringliteral">u&#39;OneParamFunction&#39;</span>,<span class="stringliteral">u&#39;SymbolFunction&#39;</span>,<span class="stringliteral">u&#39;TextFunction&#39;</span>,<span class="stringliteral">u&#39;FontFunction&#39;</span>,<span class="stringliteral">u&#39;CombiningFunction&#39;</span>,<span class="stringliteral">u&#39;DecoratingFunction&#39;</span>,<span class="stringliteral">u&#39;FormulaSymbol&#39;</span>,<span class="stringliteral">u&#39;BracketCommand&#39;</span>,<span class="stringliteral">u&#39;TeXCode&#39;</span>,], </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  startendings = {</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      <span class="stringliteral">u&#39;\\begin_deeper&#39;</span>:<span class="stringliteral">u&#39;\\end_deeper&#39;</span>, <span class="stringliteral">u&#39;\\begin_inset&#39;</span>:<span class="stringliteral">u&#39;\\end_inset&#39;</span>, </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout&#39;</span>:<span class="stringliteral">u&#39;\\end_layout&#39;</span>, </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  starts = {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      <span class="stringliteral">u&#39;&#39;</span>:<span class="stringliteral">u&#39;StringContainer&#39;</span>, <span class="stringliteral">u&#39;#LyX&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;&lt;/lyxtabular&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="stringliteral">u&#39;&lt;cell&#39;</span>:<span class="stringliteral">u&#39;Cell&#39;</span>, <span class="stringliteral">u&#39;&lt;column&#39;</span>:<span class="stringliteral">u&#39;Column&#39;</span>, <span class="stringliteral">u&#39;&lt;row&#39;</span>:<span class="stringliteral">u&#39;Row&#39;</span>, </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="stringliteral">u&#39;\\align&#39;</span>:<span class="stringliteral">u&#39;Align&#39;</span>, <span class="stringliteral">u&#39;\\bar&#39;</span>:<span class="stringliteral">u&#39;BarredText&#39;</span>, </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="stringliteral">u&#39;\\bar default&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\bar no&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      <span class="stringliteral">u&#39;\\begin_body&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\begin_deeper&#39;</span>:<span class="stringliteral">u&#39;DeeperList&#39;</span>, </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <span class="stringliteral">u&#39;\\begin_document&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\begin_header&#39;</span>:<span class="stringliteral">u&#39;LyXHeader&#39;</span>, </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Argument&#39;</span>:<span class="stringliteral">u&#39;ShortTitle&#39;</span>, </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Box&#39;</span>:<span class="stringliteral">u&#39;BoxInset&#39;</span>, <span class="stringliteral">u&#39;\\begin_inset Branch&#39;</span>:<span class="stringliteral">u&#39;Branch&#39;</span>, </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Caption&#39;</span>:<span class="stringliteral">u&#39;Caption&#39;</span>, </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset bibitem&#39;</span>:<span class="stringliteral">u&#39;BiblioEntry&#39;</span>, </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset bibtex&#39;</span>:<span class="stringliteral">u&#39;BibTeX&#39;</span>, </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset citation&#39;</span>:<span class="stringliteral">u&#39;BiblioCitation&#39;</span>, </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset href&#39;</span>:<span class="stringliteral">u&#39;URL&#39;</span>, </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset include&#39;</span>:<span class="stringliteral">u&#39;IncludeInset&#39;</span>, </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset index_print&#39;</span>:<span class="stringliteral">u&#39;PrintIndex&#39;</span>, </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset label&#39;</span>:<span class="stringliteral">u&#39;Label&#39;</span>, </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset line&#39;</span>:<span class="stringliteral">u&#39;LineInset&#39;</span>, </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset nomencl_print&#39;</span>:<span class="stringliteral">u&#39;PrintNomenclature&#39;</span>, </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset nomenclature&#39;</span>:<span class="stringliteral">u&#39;NomenclatureEntry&#39;</span>, </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset ref&#39;</span>:<span class="stringliteral">u&#39;Reference&#39;</span>, </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset CommandInset toc&#39;</span>:<span class="stringliteral">u&#39;TableOfContents&#39;</span>, </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset ERT&#39;</span>:<span class="stringliteral">u&#39;ERT&#39;</span>, <span class="stringliteral">u&#39;\\begin_inset Flex&#39;</span>:<span class="stringliteral">u&#39;FlexInset&#39;</span>, </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Flex Chunkref&#39;</span>:<span class="stringliteral">u&#39;NewfangledChunkRef&#39;</span>, </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Flex Marginnote&#39;</span>:<span class="stringliteral">u&#39;SideNote&#39;</span>, </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Flex Sidenote&#39;</span>:<span class="stringliteral">u&#39;SideNote&#39;</span>, </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Flex URL&#39;</span>:<span class="stringliteral">u&#39;FlexURL&#39;</span>, <span class="stringliteral">u&#39;\\begin_inset Float&#39;</span>:<span class="stringliteral">u&#39;Float&#39;</span>, </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset FloatList&#39;</span>:<span class="stringliteral">u&#39;ListOf&#39;</span>, <span class="stringliteral">u&#39;\\begin_inset Foot&#39;</span>:<span class="stringliteral">u&#39;Footnote&#39;</span>, </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Formula&#39;</span>:<span class="stringliteral">u&#39;Formula&#39;</span>, </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset FormulaMacro&#39;</span>:<span class="stringliteral">u&#39;FormulaMacro&#39;</span>, </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Graphics&#39;</span>:<span class="stringliteral">u&#39;Image&#39;</span>, </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Index&#39;</span>:<span class="stringliteral">u&#39;IndexReference&#39;</span>, </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Info&#39;</span>:<span class="stringliteral">u&#39;InfoInset&#39;</span>, </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand bibitem&#39;</span>:<span class="stringliteral">u&#39;BiblioEntry&#39;</span>, </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand bibtex&#39;</span>:<span class="stringliteral">u&#39;BibTeX&#39;</span>, </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand cite&#39;</span>:<span class="stringliteral">u&#39;BiblioCitation&#39;</span>, </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand citealt&#39;</span>:<span class="stringliteral">u&#39;BiblioCitation&#39;</span>, </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand citep&#39;</span>:<span class="stringliteral">u&#39;BiblioCitation&#39;</span>, </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand citet&#39;</span>:<span class="stringliteral">u&#39;BiblioCitation&#39;</span>, </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand htmlurl&#39;</span>:<span class="stringliteral">u&#39;URL&#39;</span>, </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand index&#39;</span>:<span class="stringliteral">u&#39;IndexReference&#39;</span>, </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand label&#39;</span>:<span class="stringliteral">u&#39;Label&#39;</span>, </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand nomenclature&#39;</span>:<span class="stringliteral">u&#39;NomenclatureEntry&#39;</span>, </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand prettyref&#39;</span>:<span class="stringliteral">u&#39;Reference&#39;</span>, </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand printindex&#39;</span>:<span class="stringliteral">u&#39;PrintIndex&#39;</span>, </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand printnomenclature&#39;</span>:<span class="stringliteral">u&#39;PrintNomenclature&#39;</span>, </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand ref&#39;</span>:<span class="stringliteral">u&#39;Reference&#39;</span>, </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand tableofcontents&#39;</span>:<span class="stringliteral">u&#39;TableOfContents&#39;</span>, </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand url&#39;</span>:<span class="stringliteral">u&#39;URL&#39;</span>, </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset LatexCommand vref&#39;</span>:<span class="stringliteral">u&#39;Reference&#39;</span>, </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Marginal&#39;</span>:<span class="stringliteral">u&#39;SideNote&#39;</span>, </div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Newline&#39;</span>:<span class="stringliteral">u&#39;NewlineInset&#39;</span>, </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Newpage&#39;</span>:<span class="stringliteral">u&#39;NewPageInset&#39;</span>, <span class="stringliteral">u&#39;\\begin_inset Note&#39;</span>:<span class="stringliteral">u&#39;Note&#39;</span>, </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset OptArg&#39;</span>:<span class="stringliteral">u&#39;ShortTitle&#39;</span>, </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Phantom&#39;</span>:<span class="stringliteral">u&#39;PhantomText&#39;</span>, </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Quotes&#39;</span>:<span class="stringliteral">u&#39;QuoteContainer&#39;</span>, </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset Tabular&#39;</span>:<span class="stringliteral">u&#39;Table&#39;</span>, <span class="stringliteral">u&#39;\\begin_inset Text&#39;</span>:<span class="stringliteral">u&#39;InsetText&#39;</span>, </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset VSpace&#39;</span>:<span class="stringliteral">u&#39;VerticalSpace&#39;</span>, <span class="stringliteral">u&#39;\\begin_inset Wrap&#39;</span>:<span class="stringliteral">u&#39;Wrap&#39;</span>, </div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset listings&#39;</span>:<span class="stringliteral">u&#39;Listing&#39;</span>, </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <span class="stringliteral">u&#39;\\begin_inset script&#39;</span>:<span class="stringliteral">u&#39;ScriptInset&#39;</span>, <span class="stringliteral">u&#39;\\begin_inset space&#39;</span>:<span class="stringliteral">u&#39;Space&#39;</span>, </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout&#39;</span>:<span class="stringliteral">u&#39;Layout&#39;</span>, <span class="stringliteral">u&#39;\\begin_layout Abstract&#39;</span>:<span class="stringliteral">u&#39;Abstract&#39;</span>, </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout Author&#39;</span>:<span class="stringliteral">u&#39;Author&#39;</span>, </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout Bibliography&#39;</span>:<span class="stringliteral">u&#39;Bibliography&#39;</span>, </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout Chunk&#39;</span>:<span class="stringliteral">u&#39;NewfangledChunk&#39;</span>, </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout Description&#39;</span>:<span class="stringliteral">u&#39;Description&#39;</span>, </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout Enumerate&#39;</span>:<span class="stringliteral">u&#39;ListItem&#39;</span>, </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout Itemize&#39;</span>:<span class="stringliteral">u&#39;ListItem&#39;</span>, <span class="stringliteral">u&#39;\\begin_layout List&#39;</span>:<span class="stringliteral">u&#39;List&#39;</span>, </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout LyX-Code&#39;</span>:<span class="stringliteral">u&#39;LyXCode&#39;</span>, </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout Plain&#39;</span>:<span class="stringliteral">u&#39;PlainLayout&#39;</span>, </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout Standard&#39;</span>:<span class="stringliteral">u&#39;StandardLayout&#39;</span>, </div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="stringliteral">u&#39;\\begin_layout Title&#39;</span>:<span class="stringliteral">u&#39;Title&#39;</span>, <span class="stringliteral">u&#39;\\begin_preamble&#39;</span>:<span class="stringliteral">u&#39;LyXPreamble&#39;</span>, </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <span class="stringliteral">u&#39;\\change_deleted&#39;</span>:<span class="stringliteral">u&#39;ChangeDeleted&#39;</span>, </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="stringliteral">u&#39;\\change_inserted&#39;</span>:<span class="stringliteral">u&#39;ChangeInserted&#39;</span>, </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      <span class="stringliteral">u&#39;\\change_unchanged&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\color&#39;</span>:<span class="stringliteral">u&#39;ColorText&#39;</span>, </div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      <span class="stringliteral">u&#39;\\color inherit&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\color none&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      <span class="stringliteral">u&#39;\\emph default&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\emph off&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      <span class="stringliteral">u&#39;\\emph on&#39;</span>:<span class="stringliteral">u&#39;EmphaticText&#39;</span>, <span class="stringliteral">u&#39;\\emph toggle&#39;</span>:<span class="stringliteral">u&#39;EmphaticText&#39;</span>, </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      <span class="stringliteral">u&#39;\\end_body&#39;</span>:<span class="stringliteral">u&#39;LyXFooter&#39;</span>, <span class="stringliteral">u&#39;\\family&#39;</span>:<span class="stringliteral">u&#39;TextFamily&#39;</span>, </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      <span class="stringliteral">u&#39;\\family default&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\family roman&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      <span class="stringliteral">u&#39;\\hfill&#39;</span>:<span class="stringliteral">u&#39;Hfill&#39;</span>, <span class="stringliteral">u&#39;\\labelwidthstring&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      <span class="stringliteral">u&#39;\\lang&#39;</span>:<span class="stringliteral">u&#39;LangLine&#39;</span>, <span class="stringliteral">u&#39;\\length&#39;</span>:<span class="stringliteral">u&#39;InsetLength&#39;</span>, </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      <span class="stringliteral">u&#39;\\lyxformat&#39;</span>:<span class="stringliteral">u&#39;LyXFormat&#39;</span>, <span class="stringliteral">u&#39;\\lyxline&#39;</span>:<span class="stringliteral">u&#39;LyXLine&#39;</span>, </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;      <span class="stringliteral">u&#39;\\newline&#39;</span>:<span class="stringliteral">u&#39;Newline&#39;</span>, <span class="stringliteral">u&#39;\\newpage&#39;</span>:<span class="stringliteral">u&#39;NewPage&#39;</span>, </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;      <span class="stringliteral">u&#39;\\noindent&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\noun default&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      <span class="stringliteral">u&#39;\\noun off&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\noun on&#39;</span>:<span class="stringliteral">u&#39;VersalitasText&#39;</span>, </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <span class="stringliteral">u&#39;\\paragraph_spacing&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\series bold&#39;</span>:<span class="stringliteral">u&#39;BoldText&#39;</span>, </div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      <span class="stringliteral">u&#39;\\series default&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\series medium&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;      <span class="stringliteral">u&#39;\\shape&#39;</span>:<span class="stringliteral">u&#39;ShapedText&#39;</span>, <span class="stringliteral">u&#39;\\shape default&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <span class="stringliteral">u&#39;\\shape up&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\size&#39;</span>:<span class="stringliteral">u&#39;SizeText&#39;</span>, </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      <span class="stringliteral">u&#39;\\size normal&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\start_of_appendix&#39;</span>:<span class="stringliteral">u&#39;StartAppendix&#39;</span>, </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;      <span class="stringliteral">u&#39;\\strikeout default&#39;</span>:<span class="stringliteral">u&#39;BlackBox&#39;</span>, <span class="stringliteral">u&#39;\\strikeout on&#39;</span>:<span class="stringliteral">u&#39;StrikeOut&#39;</span>, </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      }</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  string = {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      <span class="stringliteral">u&#39;startcommand&#39;</span>:<span class="stringliteral">u&#39;\\&#39;</span>, </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  table = {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      <span class="stringliteral">u&#39;headers&#39;</span>:[<span class="stringliteral">u&#39;&lt;lyxtabular&#39;</span>,<span class="stringliteral">u&#39;&lt;features&#39;</span>,], </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keyword">class </span>EscapeConfig(object):</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  chars = {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      <span class="stringliteral">u&#39;\n&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39; -- &#39;</span>:<span class="stringliteral">u&#39; ‚Äî &#39;</span>, <span class="stringliteral">u&#39; --- &#39;</span>:<span class="stringliteral">u&#39; ‚Äî &#39;</span>, <span class="stringliteral">u&#39;\&#39;&#39;</span>:<span class="stringliteral">u&#39;‚Äô&#39;</span>, <span class="stringliteral">u&#39;`&#39;</span>:<span class="stringliteral">u&#39;‚Äò&#39;</span>, </div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      }</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  commands = {</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      <span class="stringliteral">u&#39;\\InsetSpace \\space{}&#39;</span>:<span class="stringliteral">u&#39;¬†&#39;</span>, <span class="stringliteral">u&#39;\\InsetSpace \\thinspace{}&#39;</span>:<span class="stringliteral">u&#39;‚Äâ&#39;</span>, </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;      <span class="stringliteral">u&#39;\\InsetSpace ~&#39;</span>:<span class="stringliteral">u&#39;¬†&#39;</span>, <span class="stringliteral">u&#39;\\SpecialChar \\-&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      <span class="stringliteral">u&#39;\\SpecialChar \\@.&#39;</span>:<span class="stringliteral">u&#39;.&#39;</span>, <span class="stringliteral">u&#39;\\SpecialChar \\ldots{}&#39;</span>:<span class="stringliteral">u&#39;‚Ä¶&#39;</span>, </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;      <span class="stringliteral">u&#39;\\SpecialChar \\menuseparator&#39;</span>:<span class="stringliteral">u&#39;¬†‚ñ∑¬†&#39;</span>, </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      <span class="stringliteral">u&#39;\\SpecialChar \\nobreakdash-&#39;</span>:<span class="stringliteral">u&#39;-&#39;</span>, <span class="stringliteral">u&#39;\\SpecialChar \\slash{}&#39;</span>:<span class="stringliteral">u&#39;/&#39;</span>, </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;      <span class="stringliteral">u&#39;\\SpecialChar \\textcompwordmark{}&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;\\backslash&#39;</span>:<span class="stringliteral">u&#39;\\&#39;</span>, </div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  entities = {</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;      <span class="stringliteral">u&#39;&amp;&#39;</span>:<span class="stringliteral">u&#39;&amp;amp;&#39;</span>, <span class="stringliteral">u&#39;&lt;&#39;</span>:<span class="stringliteral">u&#39;&amp;lt;&#39;</span>, <span class="stringliteral">u&#39;&gt;&#39;</span>:<span class="stringliteral">u&#39;&amp;gt;&#39;</span>, </div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;      }</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  html = {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      <span class="stringliteral">u&#39;/&gt;&#39;</span>:<span class="stringliteral">u&#39;&gt;&#39;</span>, </div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  iso885915 = {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;      <span class="stringliteral">u&#39;¬†&#39;</span>:<span class="stringliteral">u&#39;&amp;nbsp;&#39;</span>, <span class="stringliteral">u&#39;‚ÄÉ&#39;</span>:<span class="stringliteral">u&#39;&amp;emsp;&#39;</span>, <span class="stringliteral">u&#39;‚Åü&#39;</span>:<span class="stringliteral">u&#39;&amp;#8197;&#39;</span>, </div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      }</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  nonunicode = {</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      <span class="stringliteral">u&#39;‚Åü&#39;</span>:<span class="stringliteral">u&#39;‚ÄÖ&#39;</span>, </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      }</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keyword">class </span>FormulaConfig(object):</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; </div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  alphacommands = {</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;      <span class="stringliteral">u&#39;\\AA&#39;</span>:<span class="stringliteral">u&#39;√Ö&#39;</span>, <span class="stringliteral">u&#39;\\AE&#39;</span>:<span class="stringliteral">u&#39;√Ü&#39;</span>, </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;      <span class="stringliteral">u&#39;\\AmS&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;versalitas&quot;&gt;AmS&lt;/span&gt;&#39;</span>, <span class="stringliteral">u&#39;\\Angstroem&#39;</span>:<span class="stringliteral">u&#39;‚Ñ´&#39;</span>, </div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;      <span class="stringliteral">u&#39;\\DH&#39;</span>:<span class="stringliteral">u&#39;√ê&#39;</span>, <span class="stringliteral">u&#39;\\Koppa&#39;</span>:<span class="stringliteral">u&#39;œû&#39;</span>, <span class="stringliteral">u&#39;\\L&#39;</span>:<span class="stringliteral">u&#39;≈Å&#39;</span>, <span class="stringliteral">u&#39;\\Micro&#39;</span>:<span class="stringliteral">u&#39;¬µ&#39;</span>, <span class="stringliteral">u&#39;\\O&#39;</span>:<span class="stringliteral">u&#39;√ò&#39;</span>, </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      <span class="stringliteral">u&#39;\\OE&#39;</span>:<span class="stringliteral">u&#39;≈í&#39;</span>, <span class="stringliteral">u&#39;\\Sampi&#39;</span>:<span class="stringliteral">u&#39;œ†&#39;</span>, <span class="stringliteral">u&#39;\\Stigma&#39;</span>:<span class="stringliteral">u&#39;œö&#39;</span>, <span class="stringliteral">u&#39;\\TH&#39;</span>:<span class="stringliteral">u&#39;√û&#39;</span>, </div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      <span class="stringliteral">u&#39;\\aa&#39;</span>:<span class="stringliteral">u&#39;√•&#39;</span>, <span class="stringliteral">u&#39;\\ae&#39;</span>:<span class="stringliteral">u&#39;√¶&#39;</span>, <span class="stringliteral">u&#39;\\alpha&#39;</span>:<span class="stringliteral">u&#39;Œ±&#39;</span>, <span class="stringliteral">u&#39;\\beta&#39;</span>:<span class="stringliteral">u&#39;Œ≤&#39;</span>, </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      <span class="stringliteral">u&#39;\\delta&#39;</span>:<span class="stringliteral">u&#39;Œ¥&#39;</span>, <span class="stringliteral">u&#39;\\dh&#39;</span>:<span class="stringliteral">u&#39;√∞&#39;</span>, <span class="stringliteral">u&#39;\\digamma&#39;</span>:<span class="stringliteral">u&#39;œù&#39;</span>, <span class="stringliteral">u&#39;\\epsilon&#39;</span>:<span class="stringliteral">u&#39;œµ&#39;</span>, </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      <span class="stringliteral">u&#39;\\eta&#39;</span>:<span class="stringliteral">u&#39;Œ∑&#39;</span>, <span class="stringliteral">u&#39;\\eth&#39;</span>:<span class="stringliteral">u&#39;√∞&#39;</span>, <span class="stringliteral">u&#39;\\gamma&#39;</span>:<span class="stringliteral">u&#39;Œ≥&#39;</span>, <span class="stringliteral">u&#39;\\i&#39;</span>:<span class="stringliteral">u&#39;ƒ±&#39;</span>, </div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      <span class="stringliteral">u&#39;\\imath&#39;</span>:<span class="stringliteral">u&#39;ƒ±&#39;</span>, <span class="stringliteral">u&#39;\\iota&#39;</span>:<span class="stringliteral">u&#39;Œπ&#39;</span>, <span class="stringliteral">u&#39;\\j&#39;</span>:<span class="stringliteral">u&#39;»∑&#39;</span>, <span class="stringliteral">u&#39;\\jmath&#39;</span>:<span class="stringliteral">u&#39;»∑&#39;</span>, </div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;      <span class="stringliteral">u&#39;\\kappa&#39;</span>:<span class="stringliteral">u&#39;Œ∫&#39;</span>, <span class="stringliteral">u&#39;\\koppa&#39;</span>:<span class="stringliteral">u&#39;œü&#39;</span>, <span class="stringliteral">u&#39;\\l&#39;</span>:<span class="stringliteral">u&#39;≈Ç&#39;</span>, <span class="stringliteral">u&#39;\\lambda&#39;</span>:<span class="stringliteral">u&#39;Œª&#39;</span>, </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;      <span class="stringliteral">u&#39;\\mu&#39;</span>:<span class="stringliteral">u&#39;Œº&#39;</span>, <span class="stringliteral">u&#39;\\nu&#39;</span>:<span class="stringliteral">u&#39;ŒΩ&#39;</span>, <span class="stringliteral">u&#39;\\o&#39;</span>:<span class="stringliteral">u&#39;√∏&#39;</span>, <span class="stringliteral">u&#39;\\oe&#39;</span>:<span class="stringliteral">u&#39;≈ì&#39;</span>, <span class="stringliteral">u&#39;\\omega&#39;</span>:<span class="stringliteral">u&#39;œâ&#39;</span>, </div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;      <span class="stringliteral">u&#39;\\phi&#39;</span>:<span class="stringliteral">u&#39;œÜ&#39;</span>, <span class="stringliteral">u&#39;\\pi&#39;</span>:<span class="stringliteral">u&#39;œÄ&#39;</span>, <span class="stringliteral">u&#39;\\psi&#39;</span>:<span class="stringliteral">u&#39;œà&#39;</span>, <span class="stringliteral">u&#39;\\rho&#39;</span>:<span class="stringliteral">u&#39;œÅ&#39;</span>, </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      <span class="stringliteral">u&#39;\\sampi&#39;</span>:<span class="stringliteral">u&#39;œ°&#39;</span>, <span class="stringliteral">u&#39;\\sigma&#39;</span>:<span class="stringliteral">u&#39;œÉ&#39;</span>, <span class="stringliteral">u&#39;\\ss&#39;</span>:<span class="stringliteral">u&#39;√ü&#39;</span>, <span class="stringliteral">u&#39;\\stigma&#39;</span>:<span class="stringliteral">u&#39;œõ&#39;</span>, </div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;      <span class="stringliteral">u&#39;\\tau&#39;</span>:<span class="stringliteral">u&#39;œÑ&#39;</span>, <span class="stringliteral">u&#39;\\tcohm&#39;</span>:<span class="stringliteral">u&#39;‚Ñ¶&#39;</span>, <span class="stringliteral">u&#39;\\textcrh&#39;</span>:<span class="stringliteral">u&#39;ƒß&#39;</span>, <span class="stringliteral">u&#39;\\th&#39;</span>:<span class="stringliteral">u&#39;√æ&#39;</span>, </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      <span class="stringliteral">u&#39;\\theta&#39;</span>:<span class="stringliteral">u&#39;Œ∏&#39;</span>, <span class="stringliteral">u&#39;\\upsilon&#39;</span>:<span class="stringliteral">u&#39;œÖ&#39;</span>, <span class="stringliteral">u&#39;\\varDelta&#39;</span>:<span class="stringliteral">u&#39;‚àÜ&#39;</span>, </div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      <span class="stringliteral">u&#39;\\varGamma&#39;</span>:<span class="stringliteral">u&#39;Œì&#39;</span>, <span class="stringliteral">u&#39;\\varLambda&#39;</span>:<span class="stringliteral">u&#39;Œõ&#39;</span>, <span class="stringliteral">u&#39;\\varOmega&#39;</span>:<span class="stringliteral">u&#39;Œ©&#39;</span>, </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      <span class="stringliteral">u&#39;\\varPhi&#39;</span>:<span class="stringliteral">u&#39;Œ¶&#39;</span>, <span class="stringliteral">u&#39;\\varPi&#39;</span>:<span class="stringliteral">u&#39;Œ†&#39;</span>, <span class="stringliteral">u&#39;\\varPsi&#39;</span>:<span class="stringliteral">u&#39;Œ®&#39;</span>, <span class="stringliteral">u&#39;\\varSigma&#39;</span>:<span class="stringliteral">u&#39;Œ£&#39;</span>, </div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      <span class="stringliteral">u&#39;\\varTheta&#39;</span>:<span class="stringliteral">u&#39;Œò&#39;</span>, <span class="stringliteral">u&#39;\\varUpsilon&#39;</span>:<span class="stringliteral">u&#39;Œ•&#39;</span>, <span class="stringliteral">u&#39;\\varXi&#39;</span>:<span class="stringliteral">u&#39;Œû&#39;</span>, </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      <span class="stringliteral">u&#39;\\varbeta&#39;</span>:<span class="stringliteral">u&#39;œê&#39;</span>, <span class="stringliteral">u&#39;\\varepsilon&#39;</span>:<span class="stringliteral">u&#39;Œµ&#39;</span>, <span class="stringliteral">u&#39;\\varkappa&#39;</span>:<span class="stringliteral">u&#39;œ∞&#39;</span>, </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;      <span class="stringliteral">u&#39;\\varphi&#39;</span>:<span class="stringliteral">u&#39;œÜ&#39;</span>, <span class="stringliteral">u&#39;\\varpi&#39;</span>:<span class="stringliteral">u&#39;œñ&#39;</span>, <span class="stringliteral">u&#39;\\varrho&#39;</span>:<span class="stringliteral">u&#39;œ±&#39;</span>, <span class="stringliteral">u&#39;\\varsigma&#39;</span>:<span class="stringliteral">u&#39;œÇ&#39;</span>, </div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;      <span class="stringliteral">u&#39;\\vartheta&#39;</span>:<span class="stringliteral">u&#39;œë&#39;</span>, <span class="stringliteral">u&#39;\\xi&#39;</span>:<span class="stringliteral">u&#39;Œæ&#39;</span>, <span class="stringliteral">u&#39;\\zeta&#39;</span>:<span class="stringliteral">u&#39;Œ∂&#39;</span>, </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;      }</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160; </div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  array = {</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      <span class="stringliteral">u&#39;begin&#39;</span>:<span class="stringliteral">u&#39;\\begin&#39;</span>, <span class="stringliteral">u&#39;cellseparator&#39;</span>:<span class="stringliteral">u&#39;&amp;&#39;</span>, <span class="stringliteral">u&#39;end&#39;</span>:<span class="stringliteral">u&#39;\\end&#39;</span>, </div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;      <span class="stringliteral">u&#39;rowseparator&#39;</span>:<span class="stringliteral">u&#39;\\\\&#39;</span>, </div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;      }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160; </div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  bigbrackets = {</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;      <span class="stringliteral">u&#39;(&#39;</span>:[<span class="stringliteral">u&#39;‚éõ&#39;</span>,<span class="stringliteral">u&#39;‚éú&#39;</span>,<span class="stringliteral">u&#39;‚éù&#39;</span>,], <span class="stringliteral">u&#39;)&#39;</span>:[<span class="stringliteral">u&#39;‚éû&#39;</span>,<span class="stringliteral">u&#39;‚éü&#39;</span>,<span class="stringliteral">u&#39;‚é†&#39;</span>,], <span class="stringliteral">u&#39;[&#39;</span>:[<span class="stringliteral">u&#39;‚é°&#39;</span>,<span class="stringliteral">u&#39;‚é¢&#39;</span>,<span class="stringliteral">u&#39;‚é£&#39;</span>,], </div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;      <span class="stringliteral">u&#39;]&#39;</span>:[<span class="stringliteral">u&#39;‚é§&#39;</span>,<span class="stringliteral">u&#39;‚é•&#39;</span>,<span class="stringliteral">u&#39;‚é¶&#39;</span>,], <span class="stringliteral">u&#39;{&#39;</span>:[<span class="stringliteral">u&#39;‚éß&#39;</span>,<span class="stringliteral">u&#39;‚é™&#39;</span>,<span class="stringliteral">u&#39;‚é®&#39;</span>,<span class="stringliteral">u&#39;‚é©&#39;</span>,], <span class="stringliteral">u&#39;|&#39;</span>:[<span class="stringliteral">u&#39;|&#39;</span>,], </div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;      <span class="stringliteral">u&#39;}&#39;</span>:[<span class="stringliteral">u&#39;‚é´&#39;</span>,<span class="stringliteral">u&#39;‚é™&#39;</span>,<span class="stringliteral">u&#39;‚é¨&#39;</span>,<span class="stringliteral">u&#39;‚é≠&#39;</span>,], <span class="stringliteral">u&#39;‚à•&#39;</span>:[<span class="stringliteral">u&#39;‚à•&#39;</span>,], </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;      }</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;  bigsymbols = {</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;      <span class="stringliteral">u&#39;‚àë&#39;</span>:[<span class="stringliteral">u&#39;‚é≤&#39;</span>,<span class="stringliteral">u&#39;‚é≥&#39;</span>,], <span class="stringliteral">u&#39;‚à´&#39;</span>:[<span class="stringliteral">u&#39;‚å†&#39;</span>,<span class="stringliteral">u&#39;‚å°&#39;</span>,], </div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      }</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160; </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;  bracketcommands = {</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;      <span class="stringliteral">u&#39;\\left&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;symbol&quot;&#39;</span>, </div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;      <span class="stringliteral">u&#39;\\left.&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;leftdot&quot;&gt;&lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;      <span class="stringliteral">u&#39;\\middle&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;symbol&quot;&#39;</span>, <span class="stringliteral">u&#39;\\right&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;symbol&quot;&#39;</span>, </div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;      <span class="stringliteral">u&#39;\\right.&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;rightdot&quot;&gt;&lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;      }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160; </div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  combiningfunctions = {</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;      <span class="stringliteral">u&#39;\\&quot;&#39;</span>:<span class="stringliteral">u&#39;Ãà&#39;</span>, <span class="stringliteral">u&#39;\\\&#39;&#39;</span>:<span class="stringliteral">u&#39;ÃÅ&#39;</span>, <span class="stringliteral">u&#39;\\^&#39;</span>:<span class="stringliteral">u&#39;ÃÇ&#39;</span>, <span class="stringliteral">u&#39;\\`&#39;</span>:<span class="stringliteral">u&#39;ÃÄ&#39;</span>, <span class="stringliteral">u&#39;\\acute&#39;</span>:<span class="stringliteral">u&#39;ÃÅ&#39;</span>, </div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;      <span class="stringliteral">u&#39;\\bar&#39;</span>:<span class="stringliteral">u&#39;ÃÑ&#39;</span>, <span class="stringliteral">u&#39;\\breve&#39;</span>:<span class="stringliteral">u&#39;ÃÜ&#39;</span>, <span class="stringliteral">u&#39;\\c&#39;</span>:<span class="stringliteral">u&#39;Ãß&#39;</span>, <span class="stringliteral">u&#39;\\check&#39;</span>:<span class="stringliteral">u&#39;Ãå&#39;</span>, </div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;      <span class="stringliteral">u&#39;\\dddot&#39;</span>:<span class="stringliteral">u&#39;‚Éõ&#39;</span>, <span class="stringliteral">u&#39;\\ddot&#39;</span>:<span class="stringliteral">u&#39;Ãà&#39;</span>, <span class="stringliteral">u&#39;\\dot&#39;</span>:<span class="stringliteral">u&#39;Ãá&#39;</span>, <span class="stringliteral">u&#39;\\grave&#39;</span>:<span class="stringliteral">u&#39;ÃÄ&#39;</span>, </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;      <span class="stringliteral">u&#39;\\hat&#39;</span>:<span class="stringliteral">u&#39;ÃÇ&#39;</span>, <span class="stringliteral">u&#39;\\mathring&#39;</span>:<span class="stringliteral">u&#39;Ãä&#39;</span>, <span class="stringliteral">u&#39;\\overleftarrow&#39;</span>:<span class="stringliteral">u&#39;‚Éñ&#39;</span>, </div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;      <span class="stringliteral">u&#39;\\overrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚Éó&#39;</span>, <span class="stringliteral">u&#39;\\r&#39;</span>:<span class="stringliteral">u&#39;Ãä&#39;</span>, <span class="stringliteral">u&#39;\\s&#39;</span>:<span class="stringliteral">u&#39;Ã©&#39;</span>, </div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;      <span class="stringliteral">u&#39;\\textcircled&#39;</span>:<span class="stringliteral">u&#39;‚Éù&#39;</span>, <span class="stringliteral">u&#39;\\textsubring&#39;</span>:<span class="stringliteral">u&#39;Ã•&#39;</span>, <span class="stringliteral">u&#39;\\tilde&#39;</span>:<span class="stringliteral">u&#39;ÃÉ&#39;</span>, </div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;      <span class="stringliteral">u&#39;\\v&#39;</span>:<span class="stringliteral">u&#39;Ãå&#39;</span>, <span class="stringliteral">u&#39;\\vec&#39;</span>:<span class="stringliteral">u&#39;‚Éó&#39;</span>, <span class="stringliteral">u&#39;\\~&#39;</span>:<span class="stringliteral">u&#39;ÃÉ&#39;</span>, </div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;      }</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160; </div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  commands = {</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;      <span class="stringliteral">u&#39;\\ &#39;</span>:<span class="stringliteral">u&#39;¬†&#39;</span>, <span class="stringliteral">u&#39;\\!&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;\\#&#39;</span>:<span class="stringliteral">u&#39;#&#39;</span>, <span class="stringliteral">u&#39;\\$&#39;</span>:<span class="stringliteral">u&#39;$&#39;</span>, <span class="stringliteral">u&#39;\\%&#39;</span>:<span class="stringliteral">u&#39;%&#39;</span>, </div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;      <span class="stringliteral">u&#39;\\&amp;&#39;</span>:<span class="stringliteral">u&#39;&amp;&#39;</span>, <span class="stringliteral">u&#39;\\,&#39;</span>:<span class="stringliteral">u&#39; &#39;</span>, <span class="stringliteral">u&#39;\\:&#39;</span>:<span class="stringliteral">u&#39;‚Åü&#39;</span>, <span class="stringliteral">u&#39;\\;&#39;</span>:<span class="stringliteral">u&#39;‚ÄÑ&#39;</span>, <span class="stringliteral">u&#39;\\AC&#39;</span>:<span class="stringliteral">u&#39;‚àø&#39;</span>, </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;      <span class="stringliteral">u&#39;\\APLcomment&#39;</span>:<span class="stringliteral">u&#39;‚çù&#39;</span>, <span class="stringliteral">u&#39;\\APLdownarrowbox&#39;</span>:<span class="stringliteral">u&#39;‚çó&#39;</span>, <span class="stringliteral">u&#39;\\APLinput&#39;</span>:<span class="stringliteral">u&#39;‚çû&#39;</span>, </div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;      <span class="stringliteral">u&#39;\\APLinv&#39;</span>:<span class="stringliteral">u&#39;‚åπ&#39;</span>, <span class="stringliteral">u&#39;\\APLleftarrowbox&#39;</span>:<span class="stringliteral">u&#39;‚çá&#39;</span>, <span class="stringliteral">u&#39;\\APLlog&#39;</span>:<span class="stringliteral">u&#39;‚çü&#39;</span>, </div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;      <span class="stringliteral">u&#39;\\APLrightarrowbox&#39;</span>:<span class="stringliteral">u&#39;‚çà&#39;</span>, <span class="stringliteral">u&#39;\\APLuparrowbox&#39;</span>:<span class="stringliteral">u&#39;‚çê&#39;</span>, <span class="stringliteral">u&#39;\\Box&#39;</span>:<span class="stringliteral">u&#39;‚ñ°&#39;</span>, </div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;      <span class="stringliteral">u&#39;\\Bumpeq&#39;</span>:<span class="stringliteral">u&#39;‚âé&#39;</span>, <span class="stringliteral">u&#39;\\CIRCLE&#39;</span>:<span class="stringliteral">u&#39;‚óè&#39;</span>, <span class="stringliteral">u&#39;\\Cap&#39;</span>:<span class="stringliteral">u&#39;‚ãí&#39;</span>, </div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;      <span class="stringliteral">u&#39;\\CapitalDifferentialD&#39;</span>:<span class="stringliteral">u&#39;‚ÖÖ&#39;</span>, <span class="stringliteral">u&#39;\\CheckedBox&#39;</span>:<span class="stringliteral">u&#39;‚òë&#39;</span>, <span class="stringliteral">u&#39;\\Circle&#39;</span>:<span class="stringliteral">u&#39;‚óã&#39;</span>, </div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;      <span class="stringliteral">u&#39;\\Coloneqq&#39;</span>:<span class="stringliteral">u&#39;‚©¥&#39;</span>, <span class="stringliteral">u&#39;\\ComplexI&#39;</span>:<span class="stringliteral">u&#39;‚Öà&#39;</span>, <span class="stringliteral">u&#39;\\ComplexJ&#39;</span>:<span class="stringliteral">u&#39;‚Öâ&#39;</span>, </div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;      <span class="stringliteral">u&#39;\\Corresponds&#39;</span>:<span class="stringliteral">u&#39;‚âô&#39;</span>, <span class="stringliteral">u&#39;\\Cup&#39;</span>:<span class="stringliteral">u&#39;‚ãì&#39;</span>, <span class="stringliteral">u&#39;\\Delta&#39;</span>:<span class="stringliteral">u&#39;Œî&#39;</span>, <span class="stringliteral">u&#39;\\Diamond&#39;</span>:<span class="stringliteral">u&#39;‚óá&#39;</span>, </div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;      <span class="stringliteral">u&#39;\\Diamondblack&#39;</span>:<span class="stringliteral">u&#39;‚óÜ&#39;</span>, <span class="stringliteral">u&#39;\\Diamonddot&#39;</span>:<span class="stringliteral">u&#39;‚üê&#39;</span>, <span class="stringliteral">u&#39;\\DifferentialD&#39;</span>:<span class="stringliteral">u&#39;‚ÖÜ&#39;</span>, </div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;      <span class="stringliteral">u&#39;\\Downarrow&#39;</span>:<span class="stringliteral">u&#39;‚áì&#39;</span>, <span class="stringliteral">u&#39;\\EUR&#39;</span>:<span class="stringliteral">u&#39;‚Ç¨&#39;</span>, <span class="stringliteral">u&#39;\\Euler&#39;</span>:<span class="stringliteral">u&#39;‚Ñá&#39;</span>, </div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;      <span class="stringliteral">u&#39;\\ExponetialE&#39;</span>:<span class="stringliteral">u&#39;‚Öá&#39;</span>, <span class="stringliteral">u&#39;\\Finv&#39;</span>:<span class="stringliteral">u&#39;‚Ñ≤&#39;</span>, <span class="stringliteral">u&#39;\\Game&#39;</span>:<span class="stringliteral">u&#39;‚ÖÅ&#39;</span>, <span class="stringliteral">u&#39;\\Gamma&#39;</span>:<span class="stringliteral">u&#39;Œì&#39;</span>, </div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;      <span class="stringliteral">u&#39;\\Im&#39;</span>:<span class="stringliteral">u&#39;‚Ñë&#39;</span>, <span class="stringliteral">u&#39;\\Join&#39;</span>:<span class="stringliteral">u&#39;‚®ù&#39;</span>, <span class="stringliteral">u&#39;\\LEFTCIRCLE&#39;</span>:<span class="stringliteral">u&#39;‚óñ&#39;</span>, <span class="stringliteral">u&#39;\\LEFTcircle&#39;</span>:<span class="stringliteral">u&#39;‚óê&#39;</span>, </div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;      <span class="stringliteral">u&#39;\\LHD&#39;</span>:<span class="stringliteral">u&#39;‚óÄ&#39;</span>, <span class="stringliteral">u&#39;\\Lambda&#39;</span>:<span class="stringliteral">u&#39;Œõ&#39;</span>, <span class="stringliteral">u&#39;\\Lbag&#39;</span>:<span class="stringliteral">u&#39;‚üÖ&#39;</span>, <span class="stringliteral">u&#39;\\Leftarrow&#39;</span>:<span class="stringliteral">u&#39;‚áê&#39;</span>, </div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;      <span class="stringliteral">u&#39;\\Lleftarrow&#39;</span>:<span class="stringliteral">u&#39;‚áö&#39;</span>, <span class="stringliteral">u&#39;\\Longleftarrow&#39;</span>:<span class="stringliteral">u&#39;‚ü∏&#39;</span>, </div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;      <span class="stringliteral">u&#39;\\Longleftrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚ü∫&#39;</span>, <span class="stringliteral">u&#39;\\Longrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚üπ&#39;</span>, <span class="stringliteral">u&#39;\\Lparen&#39;</span>:<span class="stringliteral">u&#39;‚¶Ö&#39;</span>, </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;      <span class="stringliteral">u&#39;\\Lsh&#39;</span>:<span class="stringliteral">u&#39;‚Ü∞&#39;</span>, <span class="stringliteral">u&#39;\\Mapsfrom&#39;</span>:<span class="stringliteral">u&#39;‚áê|&#39;</span>, <span class="stringliteral">u&#39;\\Mapsto&#39;</span>:<span class="stringliteral">u&#39;|‚áí&#39;</span>, <span class="stringliteral">u&#39;\\Omega&#39;</span>:<span class="stringliteral">u&#39;Œ©&#39;</span>, </div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;      <span class="stringliteral">u&#39;\\P&#39;</span>:<span class="stringliteral">u&#39;¬∂&#39;</span>, <span class="stringliteral">u&#39;\\Phi&#39;</span>:<span class="stringliteral">u&#39;Œ¶&#39;</span>, <span class="stringliteral">u&#39;\\Pi&#39;</span>:<span class="stringliteral">u&#39;Œ†&#39;</span>, <span class="stringliteral">u&#39;\\Pr&#39;</span>:<span class="stringliteral">u&#39;Pr&#39;</span>, <span class="stringliteral">u&#39;\\Psi&#39;</span>:<span class="stringliteral">u&#39;Œ®&#39;</span>, </div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;      <span class="stringliteral">u&#39;\\Qoppa&#39;</span>:<span class="stringliteral">u&#39;œò&#39;</span>, <span class="stringliteral">u&#39;\\RHD&#39;</span>:<span class="stringliteral">u&#39;‚ñ∂&#39;</span>, <span class="stringliteral">u&#39;\\RIGHTCIRCLE&#39;</span>:<span class="stringliteral">u&#39;‚óó&#39;</span>, </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;      <span class="stringliteral">u&#39;\\RIGHTcircle&#39;</span>:<span class="stringliteral">u&#39;‚óë&#39;</span>, <span class="stringliteral">u&#39;\\Rbag&#39;</span>:<span class="stringliteral">u&#39;‚üÜ&#39;</span>, <span class="stringliteral">u&#39;\\Re&#39;</span>:<span class="stringliteral">u&#39;‚Ñú&#39;</span>, <span class="stringliteral">u&#39;\\Rparen&#39;</span>:<span class="stringliteral">u&#39;‚¶Ü&#39;</span>, </div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;      <span class="stringliteral">u&#39;\\Rrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚áõ&#39;</span>, <span class="stringliteral">u&#39;\\Rsh&#39;</span>:<span class="stringliteral">u&#39;‚Ü±&#39;</span>, <span class="stringliteral">u&#39;\\S&#39;</span>:<span class="stringliteral">u&#39;¬ß&#39;</span>, <span class="stringliteral">u&#39;\\Sigma&#39;</span>:<span class="stringliteral">u&#39;Œ£&#39;</span>, </div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;      <span class="stringliteral">u&#39;\\Square&#39;</span>:<span class="stringliteral">u&#39;‚òê&#39;</span>, <span class="stringliteral">u&#39;\\Subset&#39;</span>:<span class="stringliteral">u&#39;‚ãê&#39;</span>, <span class="stringliteral">u&#39;\\Sun&#39;</span>:<span class="stringliteral">u&#39;‚òâ&#39;</span>, <span class="stringliteral">u&#39;\\Supset&#39;</span>:<span class="stringliteral">u&#39;‚ãë&#39;</span>, </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;      <span class="stringliteral">u&#39;\\Theta&#39;</span>:<span class="stringliteral">u&#39;Œò&#39;</span>, <span class="stringliteral">u&#39;\\Uparrow&#39;</span>:<span class="stringliteral">u&#39;‚áë&#39;</span>, <span class="stringliteral">u&#39;\\Updownarrow&#39;</span>:<span class="stringliteral">u&#39;‚áï&#39;</span>, </div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;      <span class="stringliteral">u&#39;\\Upsilon&#39;</span>:<span class="stringliteral">u&#39;Œ•&#39;</span>, <span class="stringliteral">u&#39;\\Vdash&#39;</span>:<span class="stringliteral">u&#39;‚ä©&#39;</span>, <span class="stringliteral">u&#39;\\Vert&#39;</span>:<span class="stringliteral">u&#39;‚à•&#39;</span>, <span class="stringliteral">u&#39;\\Vvdash&#39;</span>:<span class="stringliteral">u&#39;‚ä™&#39;</span>, </div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;      <span class="stringliteral">u&#39;\\XBox&#39;</span>:<span class="stringliteral">u&#39;‚òí&#39;</span>, <span class="stringliteral">u&#39;\\Xi&#39;</span>:<span class="stringliteral">u&#39;Œû&#39;</span>, <span class="stringliteral">u&#39;\\Yup&#39;</span>:<span class="stringliteral">u&#39;‚ÖÑ&#39;</span>, <span class="stringliteral">u&#39;\\\\&#39;</span>:<span class="stringliteral">u&#39;&lt;br/&gt;&#39;</span>, </div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;      <span class="stringliteral">u&#39;\\_&#39;</span>:<span class="stringliteral">u&#39;_&#39;</span>, <span class="stringliteral">u&#39;\\aleph&#39;</span>:<span class="stringliteral">u&#39;‚Ñµ&#39;</span>, <span class="stringliteral">u&#39;\\amalg&#39;</span>:<span class="stringliteral">u&#39;‚àê&#39;</span>, <span class="stringliteral">u&#39;\\anchor&#39;</span>:<span class="stringliteral">u&#39;‚öì&#39;</span>, </div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;      <span class="stringliteral">u&#39;\\angle&#39;</span>:<span class="stringliteral">u&#39;‚à†&#39;</span>, <span class="stringliteral">u&#39;\\aquarius&#39;</span>:<span class="stringliteral">u&#39;‚ôí&#39;</span>, <span class="stringliteral">u&#39;\\arccos&#39;</span>:<span class="stringliteral">u&#39;arccos&#39;</span>, </div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;      <span class="stringliteral">u&#39;\\arcsin&#39;</span>:<span class="stringliteral">u&#39;arcsin&#39;</span>, <span class="stringliteral">u&#39;\\arctan&#39;</span>:<span class="stringliteral">u&#39;arctan&#39;</span>, <span class="stringliteral">u&#39;\\arg&#39;</span>:<span class="stringliteral">u&#39;arg&#39;</span>, </div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;      <span class="stringliteral">u&#39;\\aries&#39;</span>:<span class="stringliteral">u&#39;‚ôà&#39;</span>, <span class="stringliteral">u&#39;\\arrowbullet&#39;</span>:<span class="stringliteral">u&#39;‚û¢&#39;</span>, <span class="stringliteral">u&#39;\\ast&#39;</span>:<span class="stringliteral">u&#39;‚àó&#39;</span>, <span class="stringliteral">u&#39;\\asymp&#39;</span>:<span class="stringliteral">u&#39;‚âç&#39;</span>, </div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;      <span class="stringliteral">u&#39;\\backepsilon&#39;</span>:<span class="stringliteral">u&#39;‚àç&#39;</span>, <span class="stringliteral">u&#39;\\backprime&#39;</span>:<span class="stringliteral">u&#39;‚Äµ&#39;</span>, <span class="stringliteral">u&#39;\\backsimeq&#39;</span>:<span class="stringliteral">u&#39;‚ãç&#39;</span>, </div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;      <span class="stringliteral">u&#39;\\backslash&#39;</span>:<span class="stringliteral">u&#39;\\&#39;</span>, <span class="stringliteral">u&#39;\\ballotx&#39;</span>:<span class="stringliteral">u&#39;‚úó&#39;</span>, <span class="stringliteral">u&#39;\\barwedge&#39;</span>:<span class="stringliteral">u&#39;‚äº&#39;</span>, </div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;      <span class="stringliteral">u&#39;\\because&#39;</span>:<span class="stringliteral">u&#39;‚àµ&#39;</span>, <span class="stringliteral">u&#39;\\beth&#39;</span>:<span class="stringliteral">u&#39;‚Ñ∂&#39;</span>, <span class="stringliteral">u&#39;\\between&#39;</span>:<span class="stringliteral">u&#39;‚â¨&#39;</span>, <span class="stringliteral">u&#39;\\bigcap&#39;</span>:<span class="stringliteral">u&#39;‚à©&#39;</span>, </div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;      <span class="stringliteral">u&#39;\\bigcirc&#39;</span>:<span class="stringliteral">u&#39;‚óã&#39;</span>, <span class="stringliteral">u&#39;\\bigcup&#39;</span>:<span class="stringliteral">u&#39;‚à™&#39;</span>, <span class="stringliteral">u&#39;\\bigodot&#39;</span>:<span class="stringliteral">u&#39;‚äô&#39;</span>, </div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;      <span class="stringliteral">u&#39;\\bigoplus&#39;</span>:<span class="stringliteral">u&#39;‚äï&#39;</span>, <span class="stringliteral">u&#39;\\bigotimes&#39;</span>:<span class="stringliteral">u&#39;‚äó&#39;</span>, <span class="stringliteral">u&#39;\\bigsqcup&#39;</span>:<span class="stringliteral">u&#39;‚äî&#39;</span>, </div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;      <span class="stringliteral">u&#39;\\bigstar&#39;</span>:<span class="stringliteral">u&#39;‚òÖ&#39;</span>, <span class="stringliteral">u&#39;\\bigtriangledown&#39;</span>:<span class="stringliteral">u&#39;‚ñΩ&#39;</span>, <span class="stringliteral">u&#39;\\bigtriangleup&#39;</span>:<span class="stringliteral">u&#39;‚ñ≥&#39;</span>, </div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;      <span class="stringliteral">u&#39;\\biguplus&#39;</span>:<span class="stringliteral">u&#39;‚äé&#39;</span>, <span class="stringliteral">u&#39;\\bigvee&#39;</span>:<span class="stringliteral">u&#39;‚à®&#39;</span>, <span class="stringliteral">u&#39;\\bigwedge&#39;</span>:<span class="stringliteral">u&#39;‚àß&#39;</span>, </div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;      <span class="stringliteral">u&#39;\\biohazard&#39;</span>:<span class="stringliteral">u&#39;‚ò£&#39;</span>, <span class="stringliteral">u&#39;\\blacklozenge&#39;</span>:<span class="stringliteral">u&#39;‚ß´&#39;</span>, <span class="stringliteral">u&#39;\\blacksmiley&#39;</span>:<span class="stringliteral">u&#39;‚òª&#39;</span>, </div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;      <span class="stringliteral">u&#39;\\blacksquare&#39;</span>:<span class="stringliteral">u&#39;‚ñ†&#39;</span>, <span class="stringliteral">u&#39;\\blacktriangle&#39;</span>:<span class="stringliteral">u&#39;‚ñ≤&#39;</span>, </div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;      <span class="stringliteral">u&#39;\\blacktriangledown&#39;</span>:<span class="stringliteral">u&#39;‚ñº&#39;</span>, <span class="stringliteral">u&#39;\\blacktriangleleft&#39;</span>:<span class="stringliteral">u&#39;‚óÇ&#39;</span>, </div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;      <span class="stringliteral">u&#39;\\blacktriangleright&#39;</span>:<span class="stringliteral">u&#39;‚ñ∂&#39;</span>, <span class="stringliteral">u&#39;\\blacktriangleup&#39;</span>:<span class="stringliteral">u&#39;‚ñ¥&#39;</span>, <span class="stringliteral">u&#39;\\bot&#39;</span>:<span class="stringliteral">u&#39;‚ä•&#39;</span>, </div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;      <span class="stringliteral">u&#39;\\bowtie&#39;</span>:<span class="stringliteral">u&#39;‚ãà&#39;</span>, <span class="stringliteral">u&#39;\\box&#39;</span>:<span class="stringliteral">u&#39;‚ñ´&#39;</span>, <span class="stringliteral">u&#39;\\boxast&#39;</span>:<span class="stringliteral">u&#39;‚ßÜ&#39;</span>, <span class="stringliteral">u&#39;\\boxbar&#39;</span>:<span class="stringliteral">u&#39;‚ó´&#39;</span>, </div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;      <span class="stringliteral">u&#39;\\boxbox&#39;</span>:<span class="stringliteral">u&#39;‚ßà&#39;</span>, <span class="stringliteral">u&#39;\\boxbslash&#39;</span>:<span class="stringliteral">u&#39;‚ßÖ&#39;</span>, <span class="stringliteral">u&#39;\\boxcircle&#39;</span>:<span class="stringliteral">u&#39;‚ßá&#39;</span>, </div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;      <span class="stringliteral">u&#39;\\boxdot&#39;</span>:<span class="stringliteral">u&#39;‚ä°&#39;</span>, <span class="stringliteral">u&#39;\\boxminus&#39;</span>:<span class="stringliteral">u&#39;‚äü&#39;</span>, <span class="stringliteral">u&#39;\\boxplus&#39;</span>:<span class="stringliteral">u&#39;‚äû&#39;</span>, </div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;      <span class="stringliteral">u&#39;\\boxslash&#39;</span>:<span class="stringliteral">u&#39;‚ßÑ&#39;</span>, <span class="stringliteral">u&#39;\\boxtimes&#39;</span>:<span class="stringliteral">u&#39;‚ä†&#39;</span>, <span class="stringliteral">u&#39;\\bullet&#39;</span>:<span class="stringliteral">u&#39;‚Ä¢&#39;</span>, </div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;      <span class="stringliteral">u&#39;\\bumpeq&#39;</span>:<span class="stringliteral">u&#39;‚âè&#39;</span>, <span class="stringliteral">u&#39;\\cancer&#39;</span>:<span class="stringliteral">u&#39;‚ôã&#39;</span>, <span class="stringliteral">u&#39;\\cap&#39;</span>:<span class="stringliteral">u&#39;‚à©&#39;</span>, <span class="stringliteral">u&#39;\\capricornus&#39;</span>:<span class="stringliteral">u&#39;‚ôë&#39;</span>, </div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;      <span class="stringliteral">u&#39;\\cat&#39;</span>:<span class="stringliteral">u&#39;‚ÅÄ&#39;</span>, <span class="stringliteral">u&#39;\\cdot&#39;</span>:<span class="stringliteral">u&#39;‚ãÖ&#39;</span>, <span class="stringliteral">u&#39;\\cdots&#39;</span>:<span class="stringliteral">u&#39;‚ãØ&#39;</span>, <span class="stringliteral">u&#39;\\cent&#39;</span>:<span class="stringliteral">u&#39;¬¢&#39;</span>, </div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;      <span class="stringliteral">u&#39;\\centerdot&#39;</span>:<span class="stringliteral">u&#39;‚àô&#39;</span>, <span class="stringliteral">u&#39;\\checkmark&#39;</span>:<span class="stringliteral">u&#39;‚úì&#39;</span>, <span class="stringliteral">u&#39;\\chi&#39;</span>:<span class="stringliteral">u&#39;œá&#39;</span>, <span class="stringliteral">u&#39;\\circ&#39;</span>:<span class="stringliteral">u&#39;‚óã&#39;</span>, </div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;      <span class="stringliteral">u&#39;\\circeq&#39;</span>:<span class="stringliteral">u&#39;‚âó&#39;</span>, <span class="stringliteral">u&#39;\\circlearrowleft&#39;</span>:<span class="stringliteral">u&#39;‚Ü∫&#39;</span>, <span class="stringliteral">u&#39;\\circlearrowright&#39;</span>:<span class="stringliteral">u&#39;‚Üª&#39;</span>, </div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;      <span class="stringliteral">u&#39;\\circledR&#39;</span>:<span class="stringliteral">u&#39;¬Æ&#39;</span>, <span class="stringliteral">u&#39;\\circledast&#39;</span>:<span class="stringliteral">u&#39;‚äõ&#39;</span>, <span class="stringliteral">u&#39;\\circledbslash&#39;</span>:<span class="stringliteral">u&#39;‚¶∏&#39;</span>, </div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;      <span class="stringliteral">u&#39;\\circledcirc&#39;</span>:<span class="stringliteral">u&#39;‚äö&#39;</span>, <span class="stringliteral">u&#39;\\circleddash&#39;</span>:<span class="stringliteral">u&#39;‚äù&#39;</span>, <span class="stringliteral">u&#39;\\circledgtr&#39;</span>:<span class="stringliteral">u&#39;‚ßÅ&#39;</span>, </div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;      <span class="stringliteral">u&#39;\\circledless&#39;</span>:<span class="stringliteral">u&#39;‚ßÄ&#39;</span>, <span class="stringliteral">u&#39;\\clubsuit&#39;</span>:<span class="stringliteral">u&#39;‚ô£&#39;</span>, <span class="stringliteral">u&#39;\\coloneqq&#39;</span>:<span class="stringliteral">u&#39;‚âî&#39;</span>, </div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      <span class="stringliteral">u&#39;\\complement&#39;</span>:<span class="stringliteral">u&#39;‚àÅ&#39;</span>, <span class="stringliteral">u&#39;\\cong&#39;</span>:<span class="stringliteral">u&#39;‚âÖ&#39;</span>, <span class="stringliteral">u&#39;\\coprod&#39;</span>:<span class="stringliteral">u&#39;‚àê&#39;</span>, </div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;      <span class="stringliteral">u&#39;\\copyright&#39;</span>:<span class="stringliteral">u&#39;¬©&#39;</span>, <span class="stringliteral">u&#39;\\cos&#39;</span>:<span class="stringliteral">u&#39;cos&#39;</span>, <span class="stringliteral">u&#39;\\cosh&#39;</span>:<span class="stringliteral">u&#39;cosh&#39;</span>, <span class="stringliteral">u&#39;\\cot&#39;</span>:<span class="stringliteral">u&#39;cot&#39;</span>, </div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;      <span class="stringliteral">u&#39;\\coth&#39;</span>:<span class="stringliteral">u&#39;coth&#39;</span>, <span class="stringliteral">u&#39;\\csc&#39;</span>:<span class="stringliteral">u&#39;csc&#39;</span>, <span class="stringliteral">u&#39;\\cup&#39;</span>:<span class="stringliteral">u&#39;‚à™&#39;</span>, <span class="stringliteral">u&#39;\\curlyvee&#39;</span>:<span class="stringliteral">u&#39;‚ãé&#39;</span>, </div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;      <span class="stringliteral">u&#39;\\curlywedge&#39;</span>:<span class="stringliteral">u&#39;‚ãè&#39;</span>, <span class="stringliteral">u&#39;\\curvearrowleft&#39;</span>:<span class="stringliteral">u&#39;‚Ü∂&#39;</span>, </div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      <span class="stringliteral">u&#39;\\curvearrowright&#39;</span>:<span class="stringliteral">u&#39;‚Ü∑&#39;</span>, <span class="stringliteral">u&#39;\\dag&#39;</span>:<span class="stringliteral">u&#39;‚Ä†&#39;</span>, <span class="stringliteral">u&#39;\\dagger&#39;</span>:<span class="stringliteral">u&#39;‚Ä†&#39;</span>, </div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      <span class="stringliteral">u&#39;\\daleth&#39;</span>:<span class="stringliteral">u&#39;‚Ñ∏&#39;</span>, <span class="stringliteral">u&#39;\\dashleftarrow&#39;</span>:<span class="stringliteral">u&#39;‚á†&#39;</span>, <span class="stringliteral">u&#39;\\dashv&#39;</span>:<span class="stringliteral">u&#39;‚ä£&#39;</span>, </div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      <span class="stringliteral">u&#39;\\ddag&#39;</span>:<span class="stringliteral">u&#39;‚Ä°&#39;</span>, <span class="stringliteral">u&#39;\\ddagger&#39;</span>:<span class="stringliteral">u&#39;‚Ä°&#39;</span>, <span class="stringliteral">u&#39;\\ddots&#39;</span>:<span class="stringliteral">u&#39;‚ã±&#39;</span>, <span class="stringliteral">u&#39;\\deg&#39;</span>:<span class="stringliteral">u&#39;deg&#39;</span>, </div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      <span class="stringliteral">u&#39;\\det&#39;</span>:<span class="stringliteral">u&#39;det&#39;</span>, <span class="stringliteral">u&#39;\\diagdown&#39;</span>:<span class="stringliteral">u&#39;‚ï≤&#39;</span>, <span class="stringliteral">u&#39;\\diagup&#39;</span>:<span class="stringliteral">u&#39;‚ï±&#39;</span>, </div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;      <span class="stringliteral">u&#39;\\diameter&#39;</span>:<span class="stringliteral">u&#39;‚åÄ&#39;</span>, <span class="stringliteral">u&#39;\\diamond&#39;</span>:<span class="stringliteral">u&#39;‚óá&#39;</span>, <span class="stringliteral">u&#39;\\diamondsuit&#39;</span>:<span class="stringliteral">u&#39;‚ô¶&#39;</span>, </div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;      <span class="stringliteral">u&#39;\\dim&#39;</span>:<span class="stringliteral">u&#39;dim&#39;</span>, <span class="stringliteral">u&#39;\\div&#39;</span>:<span class="stringliteral">u&#39;√∑&#39;</span>, <span class="stringliteral">u&#39;\\divideontimes&#39;</span>:<span class="stringliteral">u&#39;‚ãá&#39;</span>, </div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;      <span class="stringliteral">u&#39;\\dotdiv&#39;</span>:<span class="stringliteral">u&#39;‚à∏&#39;</span>, <span class="stringliteral">u&#39;\\doteq&#39;</span>:<span class="stringliteral">u&#39;‚âê&#39;</span>, <span class="stringliteral">u&#39;\\doteqdot&#39;</span>:<span class="stringliteral">u&#39;‚âë&#39;</span>, <span class="stringliteral">u&#39;\\dotplus&#39;</span>:<span class="stringliteral">u&#39;‚àî&#39;</span>, </div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;      <span class="stringliteral">u&#39;\\dots&#39;</span>:<span class="stringliteral">u&#39;‚Ä¶&#39;</span>, <span class="stringliteral">u&#39;\\doublebarwedge&#39;</span>:<span class="stringliteral">u&#39;‚åÜ&#39;</span>, <span class="stringliteral">u&#39;\\downarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üì&#39;</span>, </div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;      <span class="stringliteral">u&#39;\\downdownarrows&#39;</span>:<span class="stringliteral">u&#39;‚áä&#39;</span>, <span class="stringliteral">u&#39;\\downharpoonleft&#39;</span>:<span class="stringliteral">u&#39;‚áÉ&#39;</span>, </div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;      <span class="stringliteral">u&#39;\\downharpoonright&#39;</span>:<span class="stringliteral">u&#39;‚áÇ&#39;</span>, <span class="stringliteral">u&#39;\\dsub&#39;</span>:<span class="stringliteral">u&#39;‚©§&#39;</span>, <span class="stringliteral">u&#39;\\earth&#39;</span>:<span class="stringliteral">u&#39;‚ôÅ&#39;</span>, </div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      <span class="stringliteral">u&#39;\\eighthnote&#39;</span>:<span class="stringliteral">u&#39;‚ô™&#39;</span>, <span class="stringliteral">u&#39;\\ell&#39;</span>:<span class="stringliteral">u&#39;‚Ñì&#39;</span>, <span class="stringliteral">u&#39;\\emptyset&#39;</span>:<span class="stringliteral">u&#39;‚àÖ&#39;</span>, </div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      <span class="stringliteral">u&#39;\\eqcirc&#39;</span>:<span class="stringliteral">u&#39;‚âñ&#39;</span>, <span class="stringliteral">u&#39;\\eqcolon&#39;</span>:<span class="stringliteral">u&#39;‚âï&#39;</span>, <span class="stringliteral">u&#39;\\eqsim&#39;</span>:<span class="stringliteral">u&#39;‚âÇ&#39;</span>, <span class="stringliteral">u&#39;\\euro&#39;</span>:<span class="stringliteral">u&#39;‚Ç¨&#39;</span>, </div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      <span class="stringliteral">u&#39;\\exists&#39;</span>:<span class="stringliteral">u&#39;‚àÉ&#39;</span>, <span class="stringliteral">u&#39;\\exp&#39;</span>:<span class="stringliteral">u&#39;exp&#39;</span>, <span class="stringliteral">u&#39;\\fallingdotseq&#39;</span>:<span class="stringliteral">u&#39;‚âí&#39;</span>, </div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      <span class="stringliteral">u&#39;\\fcmp&#39;</span>:<span class="stringliteral">u&#39;‚®æ&#39;</span>, <span class="stringliteral">u&#39;\\female&#39;</span>:<span class="stringliteral">u&#39;‚ôÄ&#39;</span>, <span class="stringliteral">u&#39;\\flat&#39;</span>:<span class="stringliteral">u&#39;‚ô≠&#39;</span>, <span class="stringliteral">u&#39;\\forall&#39;</span>:<span class="stringliteral">u&#39;‚àÄ&#39;</span>, </div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      <span class="stringliteral">u&#39;\\fourth&#39;</span>:<span class="stringliteral">u&#39;‚Åó&#39;</span>, <span class="stringliteral">u&#39;\\frown&#39;</span>:<span class="stringliteral">u&#39;‚å¢&#39;</span>, <span class="stringliteral">u&#39;\\frownie&#39;</span>:<span class="stringliteral">u&#39;‚òπ&#39;</span>, <span class="stringliteral">u&#39;\\gcd&#39;</span>:<span class="stringliteral">u&#39;gcd&#39;</span>, </div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      <span class="stringliteral">u&#39;\\gemini&#39;</span>:<span class="stringliteral">u&#39;‚ôä&#39;</span>, <span class="stringliteral">u&#39;\\geq)&#39;</span>:<span class="stringliteral">u&#39;‚â•&#39;</span>, <span class="stringliteral">u&#39;\\geqq&#39;</span>:<span class="stringliteral">u&#39;‚âß&#39;</span>, <span class="stringliteral">u&#39;\\geqslant&#39;</span>:<span class="stringliteral">u&#39;‚â•&#39;</span>, </div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      <span class="stringliteral">u&#39;\\gets&#39;</span>:<span class="stringliteral">u&#39;‚Üê&#39;</span>, <span class="stringliteral">u&#39;\\gg&#39;</span>:<span class="stringliteral">u&#39;‚â´&#39;</span>, <span class="stringliteral">u&#39;\\ggg&#39;</span>:<span class="stringliteral">u&#39;‚ãô&#39;</span>, <span class="stringliteral">u&#39;\\gimel&#39;</span>:<span class="stringliteral">u&#39;‚Ñ∑&#39;</span>, </div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      <span class="stringliteral">u&#39;\\gneqq&#39;</span>:<span class="stringliteral">u&#39;‚â©&#39;</span>, <span class="stringliteral">u&#39;\\gnsim&#39;</span>:<span class="stringliteral">u&#39;‚ãß&#39;</span>, <span class="stringliteral">u&#39;\\gtrdot&#39;</span>:<span class="stringliteral">u&#39;‚ãó&#39;</span>, <span class="stringliteral">u&#39;\\gtreqless&#39;</span>:<span class="stringliteral">u&#39;‚ãö&#39;</span>, </div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;      <span class="stringliteral">u&#39;\\gtreqqless&#39;</span>:<span class="stringliteral">u&#39;‚™å&#39;</span>, <span class="stringliteral">u&#39;\\gtrless&#39;</span>:<span class="stringliteral">u&#39;‚â∑&#39;</span>, <span class="stringliteral">u&#39;\\gtrsim&#39;</span>:<span class="stringliteral">u&#39;‚â≥&#39;</span>, </div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      <span class="stringliteral">u&#39;\\guillemotleft&#39;</span>:<span class="stringliteral">u&#39;¬´&#39;</span>, <span class="stringliteral">u&#39;\\guillemotright&#39;</span>:<span class="stringliteral">u&#39;¬ª&#39;</span>, <span class="stringliteral">u&#39;\\hbar&#39;</span>:<span class="stringliteral">u&#39;‚Ñè&#39;</span>, </div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      <span class="stringliteral">u&#39;\\heartsuit&#39;</span>:<span class="stringliteral">u&#39;‚ô•&#39;</span>, <span class="stringliteral">u&#39;\\hfill&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;hfill&quot;&gt; &lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      <span class="stringliteral">u&#39;\\hom&#39;</span>:<span class="stringliteral">u&#39;hom&#39;</span>, <span class="stringliteral">u&#39;\\hookleftarrow&#39;</span>:<span class="stringliteral">u&#39;‚Ü©&#39;</span>, <span class="stringliteral">u&#39;\\hookrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚Ü™&#39;</span>, </div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;      <span class="stringliteral">u&#39;\\hslash&#39;</span>:<span class="stringliteral">u&#39;‚Ñè&#39;</span>, <span class="stringliteral">u&#39;\\idotsint&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;bigsymbol&quot;&gt;‚à´‚ãØ‚à´&lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;      <span class="stringliteral">u&#39;\\iiint&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;bigsymbol&quot;&gt;‚à≠&lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;      <span class="stringliteral">u&#39;\\iint&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;bigsymbol&quot;&gt;‚à¨&lt;/span&gt;&#39;</span>, <span class="stringliteral">u&#39;\\imath&#39;</span>:<span class="stringliteral">u&#39;ƒ±&#39;</span>, </div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;      <span class="stringliteral">u&#39;\\inf&#39;</span>:<span class="stringliteral">u&#39;inf&#39;</span>, <span class="stringliteral">u&#39;\\infty&#39;</span>:<span class="stringliteral">u&#39;‚àû&#39;</span>, <span class="stringliteral">u&#39;\\intercal&#39;</span>:<span class="stringliteral">u&#39;‚ä∫&#39;</span>, </div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;      <span class="stringliteral">u&#39;\\interleave&#39;</span>:<span class="stringliteral">u&#39;‚´¥&#39;</span>, <span class="stringliteral">u&#39;\\invamp&#39;</span>:<span class="stringliteral">u&#39;‚Öã&#39;</span>, <span class="stringliteral">u&#39;\\invneg&#39;</span>:<span class="stringliteral">u&#39;‚åê&#39;</span>, </div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;      <span class="stringliteral">u&#39;\\jmath&#39;</span>:<span class="stringliteral">u&#39;»∑&#39;</span>, <span class="stringliteral">u&#39;\\jupiter&#39;</span>:<span class="stringliteral">u&#39;‚ôÉ&#39;</span>, <span class="stringliteral">u&#39;\\ker&#39;</span>:<span class="stringliteral">u&#39;ker&#39;</span>, <span class="stringliteral">u&#39;\\land&#39;</span>:<span class="stringliteral">u&#39;‚àß&#39;</span>, </div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      <span class="stringliteral">u&#39;\\landupint&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;bigsymbol&quot;&gt;‚à±&lt;/span&gt;&#39;</span>, <span class="stringliteral">u&#39;\\lang&#39;</span>:<span class="stringliteral">u&#39;‚ü™&#39;</span>, </div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;      <span class="stringliteral">u&#39;\\langle&#39;</span>:<span class="stringliteral">u&#39;‚ü®&#39;</span>, <span class="stringliteral">u&#39;\\lblot&#39;</span>:<span class="stringliteral">u&#39;‚¶â&#39;</span>, <span class="stringliteral">u&#39;\\lbrace&#39;</span>:<span class="stringliteral">u&#39;{&#39;</span>, <span class="stringliteral">u&#39;\\lbrace)&#39;</span>:<span class="stringliteral">u&#39;{&#39;</span>, </div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;      <span class="stringliteral">u&#39;\\lbrack&#39;</span>:<span class="stringliteral">u&#39;[&#39;</span>, <span class="stringliteral">u&#39;\\lceil&#39;</span>:<span class="stringliteral">u&#39;‚åà&#39;</span>, <span class="stringliteral">u&#39;\\ldots&#39;</span>:<span class="stringliteral">u&#39;‚Ä¶&#39;</span>, <span class="stringliteral">u&#39;\\leadsto&#39;</span>:<span class="stringliteral">u&#39;‚áù&#39;</span>, </div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;      <span class="stringliteral">u&#39;\\leftarrow)&#39;</span>:<span class="stringliteral">u&#39;‚Üê&#39;</span>, <span class="stringliteral">u&#39;\\leftarrowtail&#39;</span>:<span class="stringliteral">u&#39;‚Ü¢&#39;</span>, <span class="stringliteral">u&#39;\\leftarrowtobar&#39;</span>:<span class="stringliteral">u&#39;‚á§&#39;</span>, </div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;      <span class="stringliteral">u&#39;\\leftharpoondown&#39;</span>:<span class="stringliteral">u&#39;‚ÜΩ&#39;</span>, <span class="stringliteral">u&#39;\\leftharpoonup&#39;</span>:<span class="stringliteral">u&#39;‚Üº&#39;</span>, </div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;      <span class="stringliteral">u&#39;\\leftleftarrows&#39;</span>:<span class="stringliteral">u&#39;‚áá&#39;</span>, <span class="stringliteral">u&#39;\\leftleftharpoons&#39;</span>:<span class="stringliteral">u&#39;‚•¢&#39;</span>, <span class="stringliteral">u&#39;\\leftmoon&#39;</span>:<span class="stringliteral">u&#39;‚òæ&#39;</span>, </div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;      <span class="stringliteral">u&#39;\\leftrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üî&#39;</span>, <span class="stringliteral">u&#39;\\leftrightarrows&#39;</span>:<span class="stringliteral">u&#39;‚áÜ&#39;</span>, </div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;      <span class="stringliteral">u&#39;\\leftrightharpoons&#39;</span>:<span class="stringliteral">u&#39;‚áã&#39;</span>, <span class="stringliteral">u&#39;\\leftthreetimes&#39;</span>:<span class="stringliteral">u&#39;‚ãã&#39;</span>, <span class="stringliteral">u&#39;\\leo&#39;</span>:<span class="stringliteral">u&#39;‚ôå&#39;</span>, </div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;      <span class="stringliteral">u&#39;\\leq)&#39;</span>:<span class="stringliteral">u&#39;‚â§&#39;</span>, <span class="stringliteral">u&#39;\\leqq&#39;</span>:<span class="stringliteral">u&#39;‚â¶&#39;</span>, <span class="stringliteral">u&#39;\\leqslant&#39;</span>:<span class="stringliteral">u&#39;‚â§&#39;</span>, <span class="stringliteral">u&#39;\\lessdot&#39;</span>:<span class="stringliteral">u&#39;‚ãñ&#39;</span>, </div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;      <span class="stringliteral">u&#39;\\lesseqgtr&#39;</span>:<span class="stringliteral">u&#39;‚ãõ&#39;</span>, <span class="stringliteral">u&#39;\\lesseqqgtr&#39;</span>:<span class="stringliteral">u&#39;‚™ã&#39;</span>, <span class="stringliteral">u&#39;\\lessgtr&#39;</span>:<span class="stringliteral">u&#39;‚â∂&#39;</span>, </div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;      <span class="stringliteral">u&#39;\\lesssim&#39;</span>:<span class="stringliteral">u&#39;‚â≤&#39;</span>, <span class="stringliteral">u&#39;\\lfloor&#39;</span>:<span class="stringliteral">u&#39;‚åä&#39;</span>, <span class="stringliteral">u&#39;\\lg&#39;</span>:<span class="stringliteral">u&#39;lg&#39;</span>, <span class="stringliteral">u&#39;\\lgroup&#39;</span>:<span class="stringliteral">u&#39;‚üÆ&#39;</span>, </div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;      <span class="stringliteral">u&#39;\\lhd&#39;</span>:<span class="stringliteral">u&#39;‚ä≤&#39;</span>, <span class="stringliteral">u&#39;\\libra&#39;</span>:<span class="stringliteral">u&#39;‚ôé&#39;</span>, <span class="stringliteral">u&#39;\\lightning&#39;</span>:<span class="stringliteral">u&#39;‚ÜØ&#39;</span>, <span class="stringliteral">u&#39;\\limg&#39;</span>:<span class="stringliteral">u&#39;‚¶á&#39;</span>, </div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;      <span class="stringliteral">u&#39;\\liminf&#39;</span>:<span class="stringliteral">u&#39;liminf&#39;</span>, <span class="stringliteral">u&#39;\\limsup&#39;</span>:<span class="stringliteral">u&#39;limsup&#39;</span>, <span class="stringliteral">u&#39;\\ll&#39;</span>:<span class="stringliteral">u&#39;‚â™&#39;</span>, </div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;      <span class="stringliteral">u&#39;\\llbracket&#39;</span>:<span class="stringliteral">u&#39;‚ü¶&#39;</span>, <span class="stringliteral">u&#39;\\llcorner&#39;</span>:<span class="stringliteral">u&#39;‚åû&#39;</span>, <span class="stringliteral">u&#39;\\lll&#39;</span>:<span class="stringliteral">u&#39;‚ãò&#39;</span>, <span class="stringliteral">u&#39;\\ln&#39;</span>:<span class="stringliteral">u&#39;ln&#39;</span>, </div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;      <span class="stringliteral">u&#39;\\lneqq&#39;</span>:<span class="stringliteral">u&#39;‚â®&#39;</span>, <span class="stringliteral">u&#39;\\lnot&#39;</span>:<span class="stringliteral">u&#39;¬¨&#39;</span>, <span class="stringliteral">u&#39;\\lnsim&#39;</span>:<span class="stringliteral">u&#39;‚ã¶&#39;</span>, <span class="stringliteral">u&#39;\\log&#39;</span>:<span class="stringliteral">u&#39;log&#39;</span>, </div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;      <span class="stringliteral">u&#39;\\longleftarrow&#39;</span>:<span class="stringliteral">u&#39;‚üµ&#39;</span>, <span class="stringliteral">u&#39;\\longleftrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚ü∑&#39;</span>, </div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;      <span class="stringliteral">u&#39;\\longmapsto&#39;</span>:<span class="stringliteral">u&#39;‚üº&#39;</span>, <span class="stringliteral">u&#39;\\longrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚ü∂&#39;</span>, <span class="stringliteral">u&#39;\\looparrowleft&#39;</span>:<span class="stringliteral">u&#39;‚Ü´&#39;</span>, </div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;      <span class="stringliteral">u&#39;\\looparrowright&#39;</span>:<span class="stringliteral">u&#39;‚Ü¨&#39;</span>, <span class="stringliteral">u&#39;\\lor&#39;</span>:<span class="stringliteral">u&#39;‚à®&#39;</span>, <span class="stringliteral">u&#39;\\lozenge&#39;</span>:<span class="stringliteral">u&#39;‚óä&#39;</span>, </div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;      <span class="stringliteral">u&#39;\\lrcorner&#39;</span>:<span class="stringliteral">u&#39;‚åü&#39;</span>, <span class="stringliteral">u&#39;\\ltimes&#39;</span>:<span class="stringliteral">u&#39;‚ãâ&#39;</span>, <span class="stringliteral">u&#39;\\lyxlock&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;\\male&#39;</span>:<span class="stringliteral">u&#39;‚ôÇ&#39;</span>, </div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;      <span class="stringliteral">u&#39;\\maltese&#39;</span>:<span class="stringliteral">u&#39;‚ú†&#39;</span>, <span class="stringliteral">u&#39;\\mapsfrom&#39;</span>:<span class="stringliteral">u&#39;‚Ü§&#39;</span>, <span class="stringliteral">u&#39;\\mapsto&#39;</span>:<span class="stringliteral">u&#39;‚Ü¶&#39;</span>, </div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;      <span class="stringliteral">u&#39;\\mathcircumflex&#39;</span>:<span class="stringliteral">u&#39;^&#39;</span>, <span class="stringliteral">u&#39;\\max&#39;</span>:<span class="stringliteral">u&#39;max&#39;</span>, <span class="stringliteral">u&#39;\\measuredangle&#39;</span>:<span class="stringliteral">u&#39;‚à°&#39;</span>, </div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;      <span class="stringliteral">u&#39;\\medbullet&#39;</span>:<span class="stringliteral">u&#39;‚ö´&#39;</span>, <span class="stringliteral">u&#39;\\medcirc&#39;</span>:<span class="stringliteral">u&#39;‚ö™&#39;</span>, <span class="stringliteral">u&#39;\\mercury&#39;</span>:<span class="stringliteral">u&#39;‚òø&#39;</span>, <span class="stringliteral">u&#39;\\mho&#39;</span>:<span class="stringliteral">u&#39;‚Ñß&#39;</span>, </div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;      <span class="stringliteral">u&#39;\\mid&#39;</span>:<span class="stringliteral">u&#39;‚à£&#39;</span>, <span class="stringliteral">u&#39;\\min&#39;</span>:<span class="stringliteral">u&#39;min&#39;</span>, <span class="stringliteral">u&#39;\\models&#39;</span>:<span class="stringliteral">u&#39;‚ä®&#39;</span>, <span class="stringliteral">u&#39;\\mp&#39;</span>:<span class="stringliteral">u&#39;‚àì&#39;</span>, </div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;      <span class="stringliteral">u&#39;\\multimap&#39;</span>:<span class="stringliteral">u&#39;‚ä∏&#39;</span>, <span class="stringliteral">u&#39;\\nLeftarrow&#39;</span>:<span class="stringliteral">u&#39;‚áç&#39;</span>, <span class="stringliteral">u&#39;\\nLeftrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚áé&#39;</span>, </div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;      <span class="stringliteral">u&#39;\\nRightarrow&#39;</span>:<span class="stringliteral">u&#39;‚áè&#39;</span>, <span class="stringliteral">u&#39;\\nVDash&#39;</span>:<span class="stringliteral">u&#39;‚äØ&#39;</span>, <span class="stringliteral">u&#39;\\nabla&#39;</span>:<span class="stringliteral">u&#39;‚àá&#39;</span>, </div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;      <span class="stringliteral">u&#39;\\napprox&#39;</span>:<span class="stringliteral">u&#39;‚ââ&#39;</span>, <span class="stringliteral">u&#39;\\natural&#39;</span>:<span class="stringliteral">u&#39;‚ôÆ&#39;</span>, <span class="stringliteral">u&#39;\\ncong&#39;</span>:<span class="stringliteral">u&#39;‚âá&#39;</span>, <span class="stringliteral">u&#39;\\nearrow&#39;</span>:<span class="stringliteral">u&#39;‚Üó&#39;</span>, </div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;      <span class="stringliteral">u&#39;\\neg&#39;</span>:<span class="stringliteral">u&#39;¬¨&#39;</span>, <span class="stringliteral">u&#39;\\neg)&#39;</span>:<span class="stringliteral">u&#39;¬¨&#39;</span>, <span class="stringliteral">u&#39;\\neptune&#39;</span>:<span class="stringliteral">u&#39;‚ôÜ&#39;</span>, <span class="stringliteral">u&#39;\\nequiv&#39;</span>:<span class="stringliteral">u&#39;‚â¢&#39;</span>, </div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;      <span class="stringliteral">u&#39;\\newline&#39;</span>:<span class="stringliteral">u&#39;&lt;br/&gt;&#39;</span>, <span class="stringliteral">u&#39;\\nexists&#39;</span>:<span class="stringliteral">u&#39;‚àÑ&#39;</span>, <span class="stringliteral">u&#39;\\ngeqslant&#39;</span>:<span class="stringliteral">u&#39;‚â±&#39;</span>, </div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;      <span class="stringliteral">u&#39;\\ngtr&#39;</span>:<span class="stringliteral">u&#39;‚âØ&#39;</span>, <span class="stringliteral">u&#39;\\ngtrless&#39;</span>:<span class="stringliteral">u&#39;‚âπ&#39;</span>, <span class="stringliteral">u&#39;\\ni&#39;</span>:<span class="stringliteral">u&#39;‚àã&#39;</span>, <span class="stringliteral">u&#39;\\ni)&#39;</span>:<span class="stringliteral">u&#39;‚àã&#39;</span>, </div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;      <span class="stringliteral">u&#39;\\nleftarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üö&#39;</span>, <span class="stringliteral">u&#39;\\nleftrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚ÜÆ&#39;</span>, <span class="stringliteral">u&#39;\\nleqslant&#39;</span>:<span class="stringliteral">u&#39;‚â∞&#39;</span>, </div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;      <span class="stringliteral">u&#39;\\nless&#39;</span>:<span class="stringliteral">u&#39;‚âÆ&#39;</span>, <span class="stringliteral">u&#39;\\nlessgtr&#39;</span>:<span class="stringliteral">u&#39;‚â∏&#39;</span>, <span class="stringliteral">u&#39;\\nmid&#39;</span>:<span class="stringliteral">u&#39;‚à§&#39;</span>, <span class="stringliteral">u&#39;\\nolimits&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, </div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;      <span class="stringliteral">u&#39;\\nonumber&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;\\not&#39;</span>:<span class="stringliteral">u&#39;¬¨&#39;</span>, <span class="stringliteral">u&#39;\\not&lt;&#39;</span>:<span class="stringliteral">u&#39;‚âÆ&#39;</span>, <span class="stringliteral">u&#39;\\not=&#39;</span>:<span class="stringliteral">u&#39;‚â†&#39;</span>, </div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;      <span class="stringliteral">u&#39;\\not&gt;&#39;</span>:<span class="stringliteral">u&#39;‚âØ&#39;</span>, <span class="stringliteral">u&#39;\\notbackslash&#39;</span>:<span class="stringliteral">u&#39;‚çÄ&#39;</span>, <span class="stringliteral">u&#39;\\notin&#39;</span>:<span class="stringliteral">u&#39;‚àâ&#39;</span>, <span class="stringliteral">u&#39;\\notni&#39;</span>:<span class="stringliteral">u&#39;‚àå&#39;</span>, </div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;      <span class="stringliteral">u&#39;\\notslash&#39;</span>:<span class="stringliteral">u&#39;‚åø&#39;</span>, <span class="stringliteral">u&#39;\\nparallel&#39;</span>:<span class="stringliteral">u&#39;‚à¶&#39;</span>, <span class="stringliteral">u&#39;\\nprec&#39;</span>:<span class="stringliteral">u&#39;‚äÄ&#39;</span>, </div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;      <span class="stringliteral">u&#39;\\nrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üõ&#39;</span>, <span class="stringliteral">u&#39;\\nsim&#39;</span>:<span class="stringliteral">u&#39;‚âÅ&#39;</span>, <span class="stringliteral">u&#39;\\nsimeq&#39;</span>:<span class="stringliteral">u&#39;‚âÑ&#39;</span>, </div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;      <span class="stringliteral">u&#39;\\nsqsubset&#39;</span>:<span class="stringliteral">u&#39;‚äèÃ∏&#39;</span>, <span class="stringliteral">u&#39;\\nsubseteq&#39;</span>:<span class="stringliteral">u&#39;‚äà&#39;</span>, <span class="stringliteral">u&#39;\\nsucc&#39;</span>:<span class="stringliteral">u&#39;‚äÅ&#39;</span>, </div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;      <span class="stringliteral">u&#39;\\nsucccurlyeq&#39;</span>:<span class="stringliteral">u&#39;‚ã°&#39;</span>, <span class="stringliteral">u&#39;\\nsupset&#39;</span>:<span class="stringliteral">u&#39;‚äÖ&#39;</span>, <span class="stringliteral">u&#39;\\nsupseteq&#39;</span>:<span class="stringliteral">u&#39;‚äâ&#39;</span>, </div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;      <span class="stringliteral">u&#39;\\ntriangleleft&#39;</span>:<span class="stringliteral">u&#39;‚ã™&#39;</span>, <span class="stringliteral">u&#39;\\ntrianglelefteq&#39;</span>:<span class="stringliteral">u&#39;‚ã¨&#39;</span>, </div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;      <span class="stringliteral">u&#39;\\ntriangleright&#39;</span>:<span class="stringliteral">u&#39;‚ã´&#39;</span>, <span class="stringliteral">u&#39;\\ntrianglerighteq&#39;</span>:<span class="stringliteral">u&#39;‚ã≠&#39;</span>, <span class="stringliteral">u&#39;\\nvDash&#39;</span>:<span class="stringliteral">u&#39;‚ä≠&#39;</span>, </div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;      <span class="stringliteral">u&#39;\\nvdash&#39;</span>:<span class="stringliteral">u&#39;‚ä¨&#39;</span>, <span class="stringliteral">u&#39;\\nwarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üñ&#39;</span>, <span class="stringliteral">u&#39;\\odot&#39;</span>:<span class="stringliteral">u&#39;‚äô&#39;</span>, </div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;      <span class="stringliteral">u&#39;\\officialeuro&#39;</span>:<span class="stringliteral">u&#39;‚Ç¨&#39;</span>, <span class="stringliteral">u&#39;\\oiiint&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;bigsymbol&quot;&gt;‚à∞&lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;      <span class="stringliteral">u&#39;\\oiint&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;bigsymbol&quot;&gt;‚àØ&lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;      <span class="stringliteral">u&#39;\\oint&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;bigsymbol&quot;&gt;‚àÆ&lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;      <span class="stringliteral">u&#39;\\ointclockwise&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;bigsymbol&quot;&gt;‚à≤&lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;      <span class="stringliteral">u&#39;\\ointctrclockwise&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;bigsymbol&quot;&gt;‚à≥&lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;      <span class="stringliteral">u&#39;\\ominus&#39;</span>:<span class="stringliteral">u&#39;‚äñ&#39;</span>, <span class="stringliteral">u&#39;\\oplus&#39;</span>:<span class="stringliteral">u&#39;‚äï&#39;</span>, <span class="stringliteral">u&#39;\\oslash&#39;</span>:<span class="stringliteral">u&#39;‚äò&#39;</span>, <span class="stringliteral">u&#39;\\otimes&#39;</span>:<span class="stringliteral">u&#39;‚äó&#39;</span>, </div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;      <span class="stringliteral">u&#39;\\owns&#39;</span>:<span class="stringliteral">u&#39;‚àã&#39;</span>, <span class="stringliteral">u&#39;\\parallel&#39;</span>:<span class="stringliteral">u&#39;‚à•&#39;</span>, <span class="stringliteral">u&#39;\\partial&#39;</span>:<span class="stringliteral">u&#39;‚àÇ&#39;</span>, <span class="stringliteral">u&#39;\\pencil&#39;</span>:<span class="stringliteral">u&#39;‚úé&#39;</span>, </div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;      <span class="stringliteral">u&#39;\\perp&#39;</span>:<span class="stringliteral">u&#39;‚ä•&#39;</span>, <span class="stringliteral">u&#39;\\pisces&#39;</span>:<span class="stringliteral">u&#39;‚ôì&#39;</span>, <span class="stringliteral">u&#39;\\pitchfork&#39;</span>:<span class="stringliteral">u&#39;‚ãî&#39;</span>, <span class="stringliteral">u&#39;\\pluto&#39;</span>:<span class="stringliteral">u&#39;‚ôá&#39;</span>, </div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;      <span class="stringliteral">u&#39;\\pm&#39;</span>:<span class="stringliteral">u&#39;¬±&#39;</span>, <span class="stringliteral">u&#39;\\pointer&#39;</span>:<span class="stringliteral">u&#39;‚û™&#39;</span>, <span class="stringliteral">u&#39;\\pointright&#39;</span>:<span class="stringliteral">u&#39;‚òû&#39;</span>, <span class="stringliteral">u&#39;\\pounds&#39;</span>:<span class="stringliteral">u&#39;¬£&#39;</span>, </div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;      <span class="stringliteral">u&#39;\\prec&#39;</span>:<span class="stringliteral">u&#39;‚â∫&#39;</span>, <span class="stringliteral">u&#39;\\preccurlyeq&#39;</span>:<span class="stringliteral">u&#39;‚âº&#39;</span>, <span class="stringliteral">u&#39;\\preceq&#39;</span>:<span class="stringliteral">u&#39;‚âº&#39;</span>, </div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;      <span class="stringliteral">u&#39;\\precsim&#39;</span>:<span class="stringliteral">u&#39;‚âæ&#39;</span>, <span class="stringliteral">u&#39;\\prime&#39;</span>:<span class="stringliteral">u&#39;‚Ä≤&#39;</span>, <span class="stringliteral">u&#39;\\prompto&#39;</span>:<span class="stringliteral">u&#39;‚àù&#39;</span>, <span class="stringliteral">u&#39;\\qoppa&#39;</span>:<span class="stringliteral">u&#39;œô&#39;</span>, </div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;      <span class="stringliteral">u&#39;\\qquad&#39;</span>:<span class="stringliteral">u&#39;  &#39;</span>, <span class="stringliteral">u&#39;\\quad&#39;</span>:<span class="stringliteral">u&#39; &#39;</span>, <span class="stringliteral">u&#39;\\quarternote&#39;</span>:<span class="stringliteral">u&#39;‚ô©&#39;</span>, </div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;      <span class="stringliteral">u&#39;\\radiation&#39;</span>:<span class="stringliteral">u&#39;‚ò¢&#39;</span>, <span class="stringliteral">u&#39;\\rang&#39;</span>:<span class="stringliteral">u&#39;‚ü´&#39;</span>, <span class="stringliteral">u&#39;\\rangle&#39;</span>:<span class="stringliteral">u&#39;‚ü©&#39;</span>, <span class="stringliteral">u&#39;\\rblot&#39;</span>:<span class="stringliteral">u&#39;‚¶ä&#39;</span>, </div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;      <span class="stringliteral">u&#39;\\rbrace&#39;</span>:<span class="stringliteral">u&#39;}&#39;</span>, <span class="stringliteral">u&#39;\\rbrace)&#39;</span>:<span class="stringliteral">u&#39;}&#39;</span>, <span class="stringliteral">u&#39;\\rbrack&#39;</span>:<span class="stringliteral">u&#39;]&#39;</span>, <span class="stringliteral">u&#39;\\rceil&#39;</span>:<span class="stringliteral">u&#39;‚åâ&#39;</span>, </div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;      <span class="stringliteral">u&#39;\\recycle&#39;</span>:<span class="stringliteral">u&#39;‚ôª&#39;</span>, <span class="stringliteral">u&#39;\\rfloor&#39;</span>:<span class="stringliteral">u&#39;‚åã&#39;</span>, <span class="stringliteral">u&#39;\\rgroup&#39;</span>:<span class="stringliteral">u&#39;‚üØ&#39;</span>, <span class="stringliteral">u&#39;\\rhd&#39;</span>:<span class="stringliteral">u&#39;‚ä≥&#39;</span>, </div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;      <span class="stringliteral">u&#39;\\rightangle&#39;</span>:<span class="stringliteral">u&#39;‚àü&#39;</span>, <span class="stringliteral">u&#39;\\rightarrow)&#39;</span>:<span class="stringliteral">u&#39;‚Üí&#39;</span>, <span class="stringliteral">u&#39;\\rightarrowtail&#39;</span>:<span class="stringliteral">u&#39;‚Ü£&#39;</span>, </div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;      <span class="stringliteral">u&#39;\\rightarrowtobar&#39;</span>:<span class="stringliteral">u&#39;‚á•&#39;</span>, <span class="stringliteral">u&#39;\\rightharpoondown&#39;</span>:<span class="stringliteral">u&#39;‚áÅ&#39;</span>, </div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;      <span class="stringliteral">u&#39;\\rightharpoonup&#39;</span>:<span class="stringliteral">u&#39;‚áÄ&#39;</span>, <span class="stringliteral">u&#39;\\rightharpooondown&#39;</span>:<span class="stringliteral">u&#39;‚áÅ&#39;</span>, </div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;      <span class="stringliteral">u&#39;\\rightharpooonup&#39;</span>:<span class="stringliteral">u&#39;‚áÄ&#39;</span>, <span class="stringliteral">u&#39;\\rightleftarrows&#39;</span>:<span class="stringliteral">u&#39;‚áÑ&#39;</span>, </div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;      <span class="stringliteral">u&#39;\\rightleftharpoons&#39;</span>:<span class="stringliteral">u&#39;‚áå&#39;</span>, <span class="stringliteral">u&#39;\\rightmoon&#39;</span>:<span class="stringliteral">u&#39;‚òΩ&#39;</span>, </div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      <span class="stringliteral">u&#39;\\rightrightarrows&#39;</span>:<span class="stringliteral">u&#39;‚áâ&#39;</span>, <span class="stringliteral">u&#39;\\rightrightharpoons&#39;</span>:<span class="stringliteral">u&#39;‚•§&#39;</span>, </div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;      <span class="stringliteral">u&#39;\\rightthreetimes&#39;</span>:<span class="stringliteral">u&#39;‚ãå&#39;</span>, <span class="stringliteral">u&#39;\\rimg&#39;</span>:<span class="stringliteral">u&#39;‚¶à&#39;</span>, <span class="stringliteral">u&#39;\\risingdotseq&#39;</span>:<span class="stringliteral">u&#39;‚âì&#39;</span>, </div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;      <span class="stringliteral">u&#39;\\rrbracket&#39;</span>:<span class="stringliteral">u&#39;‚üß&#39;</span>, <span class="stringliteral">u&#39;\\rsub&#39;</span>:<span class="stringliteral">u&#39;‚©•&#39;</span>, <span class="stringliteral">u&#39;\\rtimes&#39;</span>:<span class="stringliteral">u&#39;‚ãä&#39;</span>, </div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;      <span class="stringliteral">u&#39;\\sagittarius&#39;</span>:<span class="stringliteral">u&#39;‚ôê&#39;</span>, <span class="stringliteral">u&#39;\\saturn&#39;</span>:<span class="stringliteral">u&#39;‚ôÑ&#39;</span>, <span class="stringliteral">u&#39;\\scorpio&#39;</span>:<span class="stringliteral">u&#39;‚ôè&#39;</span>, </div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;      <span class="stringliteral">u&#39;\\searrow&#39;</span>:<span class="stringliteral">u&#39;‚Üò&#39;</span>, <span class="stringliteral">u&#39;\\sec&#39;</span>:<span class="stringliteral">u&#39;sec&#39;</span>, <span class="stringliteral">u&#39;\\second&#39;</span>:<span class="stringliteral">u&#39;‚Ä≥&#39;</span>, <span class="stringliteral">u&#39;\\setminus&#39;</span>:<span class="stringliteral">u&#39;‚àñ&#39;</span>, </div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;      <span class="stringliteral">u&#39;\\sharp&#39;</span>:<span class="stringliteral">u&#39;‚ôØ&#39;</span>, <span class="stringliteral">u&#39;\\simeq&#39;</span>:<span class="stringliteral">u&#39;‚âÉ&#39;</span>, <span class="stringliteral">u&#39;\\sin&#39;</span>:<span class="stringliteral">u&#39;sin&#39;</span>, <span class="stringliteral">u&#39;\\sinh&#39;</span>:<span class="stringliteral">u&#39;sinh&#39;</span>, </div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;      <span class="stringliteral">u&#39;\\sixteenthnote&#39;</span>:<span class="stringliteral">u&#39;‚ô¨&#39;</span>, <span class="stringliteral">u&#39;\\skull&#39;</span>:<span class="stringliteral">u&#39;‚ò†&#39;</span>, <span class="stringliteral">u&#39;\\slash&#39;</span>:<span class="stringliteral">u&#39;‚àï&#39;</span>, </div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;      <span class="stringliteral">u&#39;\\smallsetminus&#39;</span>:<span class="stringliteral">u&#39;‚àñ&#39;</span>, <span class="stringliteral">u&#39;\\smalltriangledown&#39;</span>:<span class="stringliteral">u&#39;‚ñø&#39;</span>, </div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;      <span class="stringliteral">u&#39;\\smalltriangleleft&#39;</span>:<span class="stringliteral">u&#39;‚óÉ&#39;</span>, <span class="stringliteral">u&#39;\\smalltriangleright&#39;</span>:<span class="stringliteral">u&#39;‚ñπ&#39;</span>, </div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;      <span class="stringliteral">u&#39;\\smalltriangleup&#39;</span>:<span class="stringliteral">u&#39;‚ñµ&#39;</span>, <span class="stringliteral">u&#39;\\smile&#39;</span>:<span class="stringliteral">u&#39;‚å£&#39;</span>, <span class="stringliteral">u&#39;\\smiley&#39;</span>:<span class="stringliteral">u&#39;‚ò∫&#39;</span>, </div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;      <span class="stringliteral">u&#39;\\spadesuit&#39;</span>:<span class="stringliteral">u&#39;‚ô†&#39;</span>, <span class="stringliteral">u&#39;\\spddot&#39;</span>:<span class="stringliteral">u&#39;¬®&#39;</span>, <span class="stringliteral">u&#39;\\sphat&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, </div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;      <span class="stringliteral">u&#39;\\sphericalangle&#39;</span>:<span class="stringliteral">u&#39;‚à¢&#39;</span>, <span class="stringliteral">u&#39;\\spot&#39;</span>:<span class="stringliteral">u&#39;‚¶Å&#39;</span>, <span class="stringliteral">u&#39;\\sptilde&#39;</span>:<span class="stringliteral">u&#39;~&#39;</span>, </div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;      <span class="stringliteral">u&#39;\\sqcap&#39;</span>:<span class="stringliteral">u&#39;‚äì&#39;</span>, <span class="stringliteral">u&#39;\\sqcup&#39;</span>:<span class="stringliteral">u&#39;‚äî&#39;</span>, <span class="stringliteral">u&#39;\\sqsubset&#39;</span>:<span class="stringliteral">u&#39;‚äè&#39;</span>, </div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;      <span class="stringliteral">u&#39;\\sqsubseteq&#39;</span>:<span class="stringliteral">u&#39;‚äë&#39;</span>, <span class="stringliteral">u&#39;\\sqsupset&#39;</span>:<span class="stringliteral">u&#39;‚äê&#39;</span>, <span class="stringliteral">u&#39;\\sqsupseteq&#39;</span>:<span class="stringliteral">u&#39;‚äí&#39;</span>, </div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;      <span class="stringliteral">u&#39;\\square&#39;</span>:<span class="stringliteral">u&#39;‚ñ°&#39;</span>, <span class="stringliteral">u&#39;\\sslash&#39;</span>:<span class="stringliteral">u&#39;‚´Ω&#39;</span>, <span class="stringliteral">u&#39;\\star&#39;</span>:<span class="stringliteral">u&#39;‚ãÜ&#39;</span>, <span class="stringliteral">u&#39;\\steaming&#39;</span>:<span class="stringliteral">u&#39;‚òï&#39;</span>, </div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;      <span class="stringliteral">u&#39;\\subseteqq&#39;</span>:<span class="stringliteral">u&#39;‚´Ö&#39;</span>, <span class="stringliteral">u&#39;\\subsetneqq&#39;</span>:<span class="stringliteral">u&#39;‚´ã&#39;</span>, <span class="stringliteral">u&#39;\\succ&#39;</span>:<span class="stringliteral">u&#39;‚âª&#39;</span>, </div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;      <span class="stringliteral">u&#39;\\succcurlyeq&#39;</span>:<span class="stringliteral">u&#39;‚âΩ&#39;</span>, <span class="stringliteral">u&#39;\\succeq&#39;</span>:<span class="stringliteral">u&#39;‚âΩ&#39;</span>, <span class="stringliteral">u&#39;\\succnsim&#39;</span>:<span class="stringliteral">u&#39;‚ã©&#39;</span>, </div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;      <span class="stringliteral">u&#39;\\succsim&#39;</span>:<span class="stringliteral">u&#39;‚âø&#39;</span>, <span class="stringliteral">u&#39;\\sun&#39;</span>:<span class="stringliteral">u&#39;‚òº&#39;</span>, <span class="stringliteral">u&#39;\\sup&#39;</span>:<span class="stringliteral">u&#39;sup&#39;</span>, <span class="stringliteral">u&#39;\\supseteqq&#39;</span>:<span class="stringliteral">u&#39;‚´Ü&#39;</span>, </div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;      <span class="stringliteral">u&#39;\\supsetneqq&#39;</span>:<span class="stringliteral">u&#39;‚´å&#39;</span>, <span class="stringliteral">u&#39;\\surd&#39;</span>:<span class="stringliteral">u&#39;‚àö&#39;</span>, <span class="stringliteral">u&#39;\\swarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üô&#39;</span>, </div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;      <span class="stringliteral">u&#39;\\swords&#39;</span>:<span class="stringliteral">u&#39;‚öî&#39;</span>, <span class="stringliteral">u&#39;\\talloblong&#39;</span>:<span class="stringliteral">u&#39;‚´æ&#39;</span>, <span class="stringliteral">u&#39;\\tan&#39;</span>:<span class="stringliteral">u&#39;tan&#39;</span>, </div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;      <span class="stringliteral">u&#39;\\tanh&#39;</span>:<span class="stringliteral">u&#39;tanh&#39;</span>, <span class="stringliteral">u&#39;\\taurus&#39;</span>:<span class="stringliteral">u&#39;‚ôâ&#39;</span>, <span class="stringliteral">u&#39;\\textasciicircum&#39;</span>:<span class="stringliteral">u&#39;^&#39;</span>, </div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;      <span class="stringliteral">u&#39;\\textasciitilde&#39;</span>:<span class="stringliteral">u&#39;~&#39;</span>, <span class="stringliteral">u&#39;\\textbackslash&#39;</span>:<span class="stringliteral">u&#39;\\&#39;</span>, </div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;      <span class="stringliteral">u&#39;\\textcopyright&#39;</span>:<span class="stringliteral">u&#39;¬©\&#39;&#39;</span>, <span class="stringliteral">u&#39;\\textdegree&#39;</span>:<span class="stringliteral">u&#39;¬∞&#39;</span>, <span class="stringliteral">u&#39;\\textellipsis&#39;</span>:<span class="stringliteral">u&#39;‚Ä¶&#39;</span>, </div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;      <span class="stringliteral">u&#39;\\textemdash&#39;</span>:<span class="stringliteral">u&#39;‚Äî&#39;</span>, <span class="stringliteral">u&#39;\\textendash&#39;</span>:<span class="stringliteral">u&#39;‚Äî&#39;</span>, <span class="stringliteral">u&#39;\\texteuro&#39;</span>:<span class="stringliteral">u&#39;‚Ç¨&#39;</span>, </div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;      <span class="stringliteral">u&#39;\\textgreater&#39;</span>:<span class="stringliteral">u&#39;&gt;&#39;</span>, <span class="stringliteral">u&#39;\\textless&#39;</span>:<span class="stringliteral">u&#39;&lt;&#39;</span>, <span class="stringliteral">u&#39;\\textordfeminine&#39;</span>:<span class="stringliteral">u&#39;¬™&#39;</span>, </div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;      <span class="stringliteral">u&#39;\\textordmasculine&#39;</span>:<span class="stringliteral">u&#39;¬∫&#39;</span>, <span class="stringliteral">u&#39;\\textquotedblleft&#39;</span>:<span class="stringliteral">u&#39;‚Äú&#39;</span>, </div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;      <span class="stringliteral">u&#39;\\textquotedblright&#39;</span>:<span class="stringliteral">u&#39;‚Äù&#39;</span>, <span class="stringliteral">u&#39;\\textquoteright&#39;</span>:<span class="stringliteral">u&#39;‚Äô&#39;</span>, </div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;      <span class="stringliteral">u&#39;\\textregistered&#39;</span>:<span class="stringliteral">u&#39;¬Æ&#39;</span>, <span class="stringliteral">u&#39;\\textrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üí&#39;</span>, </div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;      <span class="stringliteral">u&#39;\\textsection&#39;</span>:<span class="stringliteral">u&#39;¬ß&#39;</span>, <span class="stringliteral">u&#39;\\texttrademark&#39;</span>:<span class="stringliteral">u&#39;‚Ñ¢&#39;</span>, </div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;      <span class="stringliteral">u&#39;\\texttwosuperior&#39;</span>:<span class="stringliteral">u&#39;¬≤&#39;</span>, <span class="stringliteral">u&#39;\\textvisiblespace&#39;</span>:<span class="stringliteral">u&#39; &#39;</span>, </div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;      <span class="stringliteral">u&#39;\\therefore&#39;</span>:<span class="stringliteral">u&#39;‚à¥&#39;</span>, <span class="stringliteral">u&#39;\\third&#39;</span>:<span class="stringliteral">u&#39;‚Ä¥&#39;</span>, <span class="stringliteral">u&#39;\\top&#39;</span>:<span class="stringliteral">u&#39;‚ä§&#39;</span>, <span class="stringliteral">u&#39;\\triangle&#39;</span>:<span class="stringliteral">u&#39;‚ñ≥&#39;</span>, </div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;      <span class="stringliteral">u&#39;\\triangleleft&#39;</span>:<span class="stringliteral">u&#39;‚ä≤&#39;</span>, <span class="stringliteral">u&#39;\\trianglelefteq&#39;</span>:<span class="stringliteral">u&#39;‚ä¥&#39;</span>, <span class="stringliteral">u&#39;\\triangleq&#39;</span>:<span class="stringliteral">u&#39;‚âú&#39;</span>, </div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;      <span class="stringliteral">u&#39;\\triangleright&#39;</span>:<span class="stringliteral">u&#39;‚ñ∑&#39;</span>, <span class="stringliteral">u&#39;\\trianglerighteq&#39;</span>:<span class="stringliteral">u&#39;‚äµ&#39;</span>, </div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;      <span class="stringliteral">u&#39;\\twoheadleftarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üû&#39;</span>, <span class="stringliteral">u&#39;\\twoheadrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚Ü†&#39;</span>, </div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;      <span class="stringliteral">u&#39;\\twonotes&#39;</span>:<span class="stringliteral">u&#39;‚ô´&#39;</span>, <span class="stringliteral">u&#39;\\udot&#39;</span>:<span class="stringliteral">u&#39;‚äç&#39;</span>, <span class="stringliteral">u&#39;\\ulcorner&#39;</span>:<span class="stringliteral">u&#39;‚åú&#39;</span>, <span class="stringliteral">u&#39;\\unlhd&#39;</span>:<span class="stringliteral">u&#39;‚ä¥&#39;</span>, </div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;      <span class="stringliteral">u&#39;\\unrhd&#39;</span>:<span class="stringliteral">u&#39;‚äµ&#39;</span>, <span class="stringliteral">u&#39;\\unrhl&#39;</span>:<span class="stringliteral">u&#39;‚äµ&#39;</span>, <span class="stringliteral">u&#39;\\uparrow&#39;</span>:<span class="stringliteral">u&#39;‚Üë&#39;</span>, </div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;      <span class="stringliteral">u&#39;\\updownarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üï&#39;</span>, <span class="stringliteral">u&#39;\\upharpoonleft&#39;</span>:<span class="stringliteral">u&#39;‚Üø&#39;</span>, <span class="stringliteral">u&#39;\\upharpoonright&#39;</span>:<span class="stringliteral">u&#39;‚Üæ&#39;</span>, </div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;      <span class="stringliteral">u&#39;\\uplus&#39;</span>:<span class="stringliteral">u&#39;‚äé&#39;</span>, <span class="stringliteral">u&#39;\\upuparrows&#39;</span>:<span class="stringliteral">u&#39;‚áà&#39;</span>, <span class="stringliteral">u&#39;\\uranus&#39;</span>:<span class="stringliteral">u&#39;‚ôÖ&#39;</span>, </div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;      <span class="stringliteral">u&#39;\\urcorner&#39;</span>:<span class="stringliteral">u&#39;‚åù&#39;</span>, <span class="stringliteral">u&#39;\\vDash&#39;</span>:<span class="stringliteral">u&#39;‚ä®&#39;</span>, <span class="stringliteral">u&#39;\\varclubsuit&#39;</span>:<span class="stringliteral">u&#39;‚ôß&#39;</span>, </div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;      <span class="stringliteral">u&#39;\\vardiamondsuit&#39;</span>:<span class="stringliteral">u&#39;‚ô¶&#39;</span>, <span class="stringliteral">u&#39;\\varheartsuit&#39;</span>:<span class="stringliteral">u&#39;‚ô•&#39;</span>, <span class="stringliteral">u&#39;\\varnothing&#39;</span>:<span class="stringliteral">u&#39;‚àÖ&#39;</span>, </div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;      <span class="stringliteral">u&#39;\\varspadesuit&#39;</span>:<span class="stringliteral">u&#39;‚ô§&#39;</span>, <span class="stringliteral">u&#39;\\vdash&#39;</span>:<span class="stringliteral">u&#39;‚ä¢&#39;</span>, <span class="stringliteral">u&#39;\\vdots&#39;</span>:<span class="stringliteral">u&#39;‚ãÆ&#39;</span>, <span class="stringliteral">u&#39;\\vee&#39;</span>:<span class="stringliteral">u&#39;‚à®&#39;</span>, </div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;      <span class="stringliteral">u&#39;\\vee)&#39;</span>:<span class="stringliteral">u&#39;‚à®&#39;</span>, <span class="stringliteral">u&#39;\\veebar&#39;</span>:<span class="stringliteral">u&#39;‚äª&#39;</span>, <span class="stringliteral">u&#39;\\vert&#39;</span>:<span class="stringliteral">u&#39;‚à£&#39;</span>, <span class="stringliteral">u&#39;\\virgo&#39;</span>:<span class="stringliteral">u&#39;‚ôç&#39;</span>, </div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;      <span class="stringliteral">u&#39;\\warning&#39;</span>:<span class="stringliteral">u&#39;‚ö†&#39;</span>, <span class="stringliteral">u&#39;\\wasylozenge&#39;</span>:<span class="stringliteral">u&#39;‚åë&#39;</span>, <span class="stringliteral">u&#39;\\wedge&#39;</span>:<span class="stringliteral">u&#39;‚àß&#39;</span>, </div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;      <span class="stringliteral">u&#39;\\wedge)&#39;</span>:<span class="stringliteral">u&#39;‚àß&#39;</span>, <span class="stringliteral">u&#39;\\wp&#39;</span>:<span class="stringliteral">u&#39;‚Ñò&#39;</span>, <span class="stringliteral">u&#39;\\wr&#39;</span>:<span class="stringliteral">u&#39;‚âÄ&#39;</span>, <span class="stringliteral">u&#39;\\yen&#39;</span>:<span class="stringliteral">u&#39;¬•&#39;</span>, </div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;      <span class="stringliteral">u&#39;\\yinyang&#39;</span>:<span class="stringliteral">u&#39;‚òØ&#39;</span>, <span class="stringliteral">u&#39;\\{&#39;</span>:<span class="stringliteral">u&#39;{&#39;</span>, <span class="stringliteral">u&#39;\\|&#39;</span>:<span class="stringliteral">u&#39;‚à•&#39;</span>, <span class="stringliteral">u&#39;\\}&#39;</span>:<span class="stringliteral">u&#39;}&#39;</span>, </div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;      }</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160; </div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;  decoratedcommand = {</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;      </div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;      }</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160; </div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;  decoratingfunctions = {</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;      <span class="stringliteral">u&#39;\\overleftarrow&#39;</span>:<span class="stringliteral">u&#39;‚üµ&#39;</span>, <span class="stringliteral">u&#39;\\overrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚ü∂&#39;</span>, <span class="stringliteral">u&#39;\\widehat&#39;</span>:<span class="stringliteral">u&#39;^&#39;</span>, </div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;      }</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160; </div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;  endings = {</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;      <span class="stringliteral">u&#39;bracket&#39;</span>:<span class="stringliteral">u&#39;}&#39;</span>, <span class="stringliteral">u&#39;complex&#39;</span>:<span class="stringliteral">u&#39;\\]&#39;</span>, <span class="stringliteral">u&#39;endafter&#39;</span>:<span class="stringliteral">u&#39;}&#39;</span>, </div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;      <span class="stringliteral">u&#39;endbefore&#39;</span>:<span class="stringliteral">u&#39;\\end{&#39;</span>, <span class="stringliteral">u&#39;squarebracket&#39;</span>:<span class="stringliteral">u&#39;]&#39;</span>, </div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;      }</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160; </div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;  environments = {</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;      <span class="stringliteral">u&#39;align&#39;</span>:[<span class="stringliteral">u&#39;r&#39;</span>,<span class="stringliteral">u&#39;l&#39;</span>,], <span class="stringliteral">u&#39;eqnarray&#39;</span>:[<span class="stringliteral">u&#39;r&#39;</span>,<span class="stringliteral">u&#39;c&#39;</span>,<span class="stringliteral">u&#39;l&#39;</span>,], </div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;      <span class="stringliteral">u&#39;gathered&#39;</span>:[<span class="stringliteral">u&#39;l&#39;</span>,<span class="stringliteral">u&#39;l&#39;</span>,], </div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;      }</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160; </div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;  fontfunctions = {</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;      <span class="stringliteral">u&#39;\\boldsymbol&#39;</span>:<span class="stringliteral">u&#39;b&#39;</span>, <span class="stringliteral">u&#39;\\mathbb&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;blackboard&quot;&#39;</span>, </div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;      <span class="stringliteral">u&#39;\\mathbb{A}&#39;</span>:<span class="stringliteral">u&#39;ùî∏&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{B}&#39;</span>:<span class="stringliteral">u&#39;ùîπ&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{C}&#39;</span>:<span class="stringliteral">u&#39;‚ÑÇ&#39;</span>, </div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;      <span class="stringliteral">u&#39;\\mathbb{D}&#39;</span>:<span class="stringliteral">u&#39;ùîª&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{E}&#39;</span>:<span class="stringliteral">u&#39;ùîº&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{F}&#39;</span>:<span class="stringliteral">u&#39;ùîΩ&#39;</span>, </div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;      <span class="stringliteral">u&#39;\\mathbb{G}&#39;</span>:<span class="stringliteral">u&#39;ùîæ&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{H}&#39;</span>:<span class="stringliteral">u&#39;‚Ñç&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{J}&#39;</span>:<span class="stringliteral">u&#39;ùïÅ&#39;</span>, </div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;      <span class="stringliteral">u&#39;\\mathbb{K}&#39;</span>:<span class="stringliteral">u&#39;ùïÇ&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{L}&#39;</span>:<span class="stringliteral">u&#39;ùïÉ&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{N}&#39;</span>:<span class="stringliteral">u&#39;‚Ñï&#39;</span>, </div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;      <span class="stringliteral">u&#39;\\mathbb{O}&#39;</span>:<span class="stringliteral">u&#39;ùïÜ&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{P}&#39;</span>:<span class="stringliteral">u&#39;‚Ñô&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{Q}&#39;</span>:<span class="stringliteral">u&#39;‚Ñö&#39;</span>, </div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;      <span class="stringliteral">u&#39;\\mathbb{R}&#39;</span>:<span class="stringliteral">u&#39;‚Ñù&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{S}&#39;</span>:<span class="stringliteral">u&#39;ùïä&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{T}&#39;</span>:<span class="stringliteral">u&#39;ùïã&#39;</span>, </div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;      <span class="stringliteral">u&#39;\\mathbb{W}&#39;</span>:<span class="stringliteral">u&#39;ùïé&#39;</span>, <span class="stringliteral">u&#39;\\mathbb{Z}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ§&#39;</span>, <span class="stringliteral">u&#39;\\mathbf&#39;</span>:<span class="stringliteral">u&#39;b&#39;</span>, </div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;      <span class="stringliteral">u&#39;\\mathcal&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;scriptfont&quot;&#39;</span>, <span class="stringliteral">u&#39;\\mathcal{B}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ¨&#39;</span>, </div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;      <span class="stringliteral">u&#39;\\mathcal{E}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ∞&#39;</span>, <span class="stringliteral">u&#39;\\mathcal{F}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ±&#39;</span>, <span class="stringliteral">u&#39;\\mathcal{H}&#39;</span>:<span class="stringliteral">u&#39;‚Ñã&#39;</span>, </div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;      <span class="stringliteral">u&#39;\\mathcal{I}&#39;</span>:<span class="stringliteral">u&#39;‚Ñê&#39;</span>, <span class="stringliteral">u&#39;\\mathcal{L}&#39;</span>:<span class="stringliteral">u&#39;‚Ñí&#39;</span>, <span class="stringliteral">u&#39;\\mathcal{M}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ≥&#39;</span>, </div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;      <span class="stringliteral">u&#39;\\mathcal{R}&#39;</span>:<span class="stringliteral">u&#39;‚Ñõ&#39;</span>, <span class="stringliteral">u&#39;\\mathfrak&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;fraktur&quot;&#39;</span>, </div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;      <span class="stringliteral">u&#39;\\mathfrak{C}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ≠&#39;</span>, <span class="stringliteral">u&#39;\\mathfrak{F}&#39;</span>:<span class="stringliteral">u&#39;ùîâ&#39;</span>, <span class="stringliteral">u&#39;\\mathfrak{H}&#39;</span>:<span class="stringliteral">u&#39;‚Ñå&#39;</span>, </div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;      <span class="stringliteral">u&#39;\\mathfrak{I}&#39;</span>:<span class="stringliteral">u&#39;‚Ñë&#39;</span>, <span class="stringliteral">u&#39;\\mathfrak{R}&#39;</span>:<span class="stringliteral">u&#39;‚Ñú&#39;</span>, <span class="stringliteral">u&#39;\\mathfrak{Z}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ®&#39;</span>, </div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;      <span class="stringliteral">u&#39;\\mathit&#39;</span>:<span class="stringliteral">u&#39;i&#39;</span>, <span class="stringliteral">u&#39;\\mathring{A}&#39;</span>:<span class="stringliteral">u&#39;√Ö&#39;</span>, <span class="stringliteral">u&#39;\\mathring{U}&#39;</span>:<span class="stringliteral">u&#39;≈Æ&#39;</span>, </div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;      <span class="stringliteral">u&#39;\\mathring{a}&#39;</span>:<span class="stringliteral">u&#39;√•&#39;</span>, <span class="stringliteral">u&#39;\\mathring{u}&#39;</span>:<span class="stringliteral">u&#39;≈Ø&#39;</span>, <span class="stringliteral">u&#39;\\mathring{w}&#39;</span>:<span class="stringliteral">u&#39;·∫ò&#39;</span>, </div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;      <span class="stringliteral">u&#39;\\mathring{y}&#39;</span>:<span class="stringliteral">u&#39;·∫ô&#39;</span>, <span class="stringliteral">u&#39;\\mathrm&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;mathrm&quot;&#39;</span>, </div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;      <span class="stringliteral">u&#39;\\mathscr&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;scriptfont&quot;&#39;</span>, <span class="stringliteral">u&#39;\\mathscr{B}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ¨&#39;</span>, </div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;      <span class="stringliteral">u&#39;\\mathscr{E}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ∞&#39;</span>, <span class="stringliteral">u&#39;\\mathscr{F}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ±&#39;</span>, <span class="stringliteral">u&#39;\\mathscr{H}&#39;</span>:<span class="stringliteral">u&#39;‚Ñã&#39;</span>, </div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;      <span class="stringliteral">u&#39;\\mathscr{I}&#39;</span>:<span class="stringliteral">u&#39;‚Ñê&#39;</span>, <span class="stringliteral">u&#39;\\mathscr{L}&#39;</span>:<span class="stringliteral">u&#39;‚Ñí&#39;</span>, <span class="stringliteral">u&#39;\\mathscr{M}&#39;</span>:<span class="stringliteral">u&#39;‚Ñ≥&#39;</span>, </div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;      <span class="stringliteral">u&#39;\\mathscr{R}&#39;</span>:<span class="stringliteral">u&#39;‚Ñõ&#39;</span>, <span class="stringliteral">u&#39;\\mathsf&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;mathsf&quot;&#39;</span>, </div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;      <span class="stringliteral">u&#39;\\mathtt&#39;</span>:<span class="stringliteral">u&#39;tt&#39;</span>, </div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;      }</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160; </div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;  hybridfunctions = {</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;      <span class="stringliteral">u&#39;\\addcontentsline&#39;</span>:[<span class="stringliteral">u&#39;{$p!}{$q!}{$r!}&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;      <span class="stringliteral">u&#39;\\addtocontents&#39;</span>:[<span class="stringliteral">u&#39;{$p!}{$q!}&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;      <span class="stringliteral">u&#39;\\backmatter&#39;</span>:[<span class="stringliteral">u&#39;&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;      <span class="stringliteral">u&#39;\\binom&#39;</span>:[<span class="stringliteral">u&#39;{$1}{$2}&#39;</span>,<span class="stringliteral">u&#39;f2{(}f0{f1{$1}f1{$2}}f2{)}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;binom&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;binomstack&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;bigsymbol&quot;&#39;</span>,], </div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;      <span class="stringliteral">u&#39;\\boxed&#39;</span>:[<span class="stringliteral">u&#39;{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;boxed&quot;&#39;</span>,], </div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;      <span class="stringliteral">u&#39;\\cfrac&#39;</span>:[<span class="stringliteral">u&#39;[$p!]{$1}{$2}&#39;</span>,<span class="stringliteral">u&#39;f0{f3{(}f1{$1}f3{)/(}f2{$2}f3{)}}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;fullfraction&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;numerator align-$p&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;denominator&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;ignored&quot;&#39;</span>,], </div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;      <span class="stringliteral">u&#39;\\color&#39;</span>:[<span class="stringliteral">u&#39;{$p!}{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span style=&quot;color: $p;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;      <span class="stringliteral">u&#39;\\colorbox&#39;</span>:[<span class="stringliteral">u&#39;{$p!}{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;colorbox&quot; style=&quot;background: $p;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;      <span class="stringliteral">u&#39;\\dbinom&#39;</span>:[<span class="stringliteral">u&#39;{$1}{$2}&#39;</span>,<span class="stringliteral">u&#39;(f0{f1{f2{$1}}f1{f2{‚ÄÖ}}f1{f2{$2}}})&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;binomial&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;binomrow&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;binomcell&quot;&#39;</span>,], </div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;      <span class="stringliteral">u&#39;\\dfrac&#39;</span>:[<span class="stringliteral">u&#39;{$1}{$2}&#39;</span>,<span class="stringliteral">u&#39;f0{f3{(}f1{$1}f3{)/(}f2{$2}f3{)}}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;fullfraction&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;numerator&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;denominator&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;ignored&quot;&#39;</span>,], </div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;      <span class="stringliteral">u&#39;\\displaystyle&#39;</span>:[<span class="stringliteral">u&#39;{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;displaystyle&quot;&#39;</span>,], </div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;      <span class="stringliteral">u&#39;\\fancyfoot&#39;</span>:[<span class="stringliteral">u&#39;[$p!]{$q!}&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;      <span class="stringliteral">u&#39;\\fancyhead&#39;</span>:[<span class="stringliteral">u&#39;[$p!]{$q!}&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;      <span class="stringliteral">u&#39;\\fbox&#39;</span>:[<span class="stringliteral">u&#39;{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;fbox&quot;&#39;</span>,], </div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;      <span class="stringliteral">u&#39;\\fboxrule&#39;</span>:[<span class="stringliteral">u&#39;{$p!}&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;      <span class="stringliteral">u&#39;\\fboxsep&#39;</span>:[<span class="stringliteral">u&#39;{$p!}&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;      <span class="stringliteral">u&#39;\\fcolorbox&#39;</span>:[<span class="stringliteral">u&#39;{$p!}{$q!}{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;boxed&quot; style=&quot;border-color: $p; background: $q;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;      <span class="stringliteral">u&#39;\\frac&#39;</span>:[<span class="stringliteral">u&#39;{$1}{$2}&#39;</span>,<span class="stringliteral">u&#39;f0{f3{(}f1{$1}f3{)/(}f2{$2}f3{)}}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;fraction&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;numerator&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;denominator&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;ignored&quot;&#39;</span>,], </div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;      <span class="stringliteral">u&#39;\\framebox&#39;</span>:[<span class="stringliteral">u&#39;[$p!][$q!]{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;framebox align-$q&quot; style=&quot;width: $p;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;      <span class="stringliteral">u&#39;\\frontmatter&#39;</span>:[<span class="stringliteral">u&#39;&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;      <span class="stringliteral">u&#39;\\href&#39;</span>:[<span class="stringliteral">u&#39;[$o]{$u!}{$t!}&#39;</span>,<span class="stringliteral">u&#39;f0{$t}&#39;</span>,<span class="stringliteral">u&#39;a href=&quot;$u&quot;&#39;</span>,], </div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;      <span class="stringliteral">u&#39;\\hspace&#39;</span>:[<span class="stringliteral">u&#39;{$p!}&#39;</span>,<span class="stringliteral">u&#39;f0{ }&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;hspace&quot; style=&quot;width: $p;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;      <span class="stringliteral">u&#39;\\leftroot&#39;</span>:[<span class="stringliteral">u&#39;{$p!}&#39;</span>,<span class="stringliteral">u&#39;f0{ }&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;leftroot&quot; style=&quot;width: $p;px&quot;&#39;</span>,], </div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;      <span class="stringliteral">u&#39;\\mainmatter&#39;</span>:[<span class="stringliteral">u&#39;&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;      <span class="stringliteral">u&#39;\\markboth&#39;</span>:[<span class="stringliteral">u&#39;{$p!}{$q!}&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;      <span class="stringliteral">u&#39;\\markright&#39;</span>:[<span class="stringliteral">u&#39;{$p!}&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;      <span class="stringliteral">u&#39;\\nicefrac&#39;</span>:[<span class="stringliteral">u&#39;{$1}{$2}&#39;</span>,<span class="stringliteral">u&#39;f0{f1{$1}‚ÅÑf2{$2}}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;fraction&quot;&#39;</span>,<span class="stringliteral">u&#39;sup class=&quot;numerator&quot;&#39;</span>,<span class="stringliteral">u&#39;sub class=&quot;denominator&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;ignored&quot;&#39;</span>,], </div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;      <span class="stringliteral">u&#39;\\parbox&#39;</span>:[<span class="stringliteral">u&#39;[$p!]{$w!}{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{1}&#39;</span>,<span class="stringliteral">u&#39;div class=&quot;Boxed&quot; style=&quot;width: $w;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;      <span class="stringliteral">u&#39;\\raisebox&#39;</span>:[<span class="stringliteral">u&#39;{$p!}{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1.font}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;raisebox&quot; style=&quot;vertical-align: $p;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;      <span class="stringliteral">u&#39;\\renewenvironment&#39;</span>:[<span class="stringliteral">u&#39;{$1!}{$2!}{$3!}&#39;</span>,<span class="stringliteral">u&#39;&#39;</span>,], </div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;      <span class="stringliteral">u&#39;\\rule&#39;</span>:[<span class="stringliteral">u&#39;[$v!]{$w!}{$h!}&#39;</span>,<span class="stringliteral">u&#39;f0/&#39;</span>,<span class="stringliteral">u&#39;hr class=&quot;line&quot; style=&quot;width: $w; height: $h;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;      <span class="stringliteral">u&#39;\\scriptscriptstyle&#39;</span>:[<span class="stringliteral">u&#39;{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;scriptscriptstyle&quot;&#39;</span>,], </div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;      <span class="stringliteral">u&#39;\\scriptstyle&#39;</span>:[<span class="stringliteral">u&#39;{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;scriptstyle&quot;&#39;</span>,], </div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;      <span class="stringliteral">u&#39;\\sqrt&#39;</span>:[<span class="stringliteral">u&#39;[$0]{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{f1{$0}f2{‚àö}f4{(}f3{$1}f4{)}}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;sqrt&quot;&#39;</span>,<span class="stringliteral">u&#39;sup class=&quot;root&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;radical&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;root&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;ignored&quot;&#39;</span>,], </div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;      <span class="stringliteral">u&#39;\\stackrel&#39;</span>:[<span class="stringliteral">u&#39;{$1}{$2}&#39;</span>,<span class="stringliteral">u&#39;f0{f1{$1}f2{$2}}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;stackrel&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;upstackrel&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;downstackrel&quot;&#39;</span>,], </div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;      <span class="stringliteral">u&#39;\\tbinom&#39;</span>:[<span class="stringliteral">u&#39;{$1}{$2}&#39;</span>,<span class="stringliteral">u&#39;(f0{f1{f2{$1}}f1{f2{‚ÄÖ}}f1{f2{$2}}})&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;binomial&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;binomrow&quot;&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;binomcell&quot;&#39;</span>,], </div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;      <span class="stringliteral">u&#39;\\textcolor&#39;</span>:[<span class="stringliteral">u&#39;{$p!}{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span style=&quot;color: $p;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;      <span class="stringliteral">u&#39;\\textstyle&#39;</span>:[<span class="stringliteral">u&#39;{$1}&#39;</span>,<span class="stringliteral">u&#39;f0{$1}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;textstyle&quot;&#39;</span>,], </div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;      <span class="stringliteral">u&#39;\\thispagestyle&#39;</span>:[<span class="stringliteral">u&#39;{$p!}&#39;</span>,<span class="stringliteral">u&#39;f0{}&#39;</span>,<span class="stringliteral">u&#39;ignored&#39;</span>,], </div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;      <span class="stringliteral">u&#39;\\unit&#39;</span>:[<span class="stringliteral">u&#39;[$0]{$1}&#39;</span>,<span class="stringliteral">u&#39;$0f0{$1.font}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;unit&quot;&#39;</span>,], </div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;      <span class="stringliteral">u&#39;\\unitfrac&#39;</span>:[<span class="stringliteral">u&#39;[$0]{$1}{$2}&#39;</span>,<span class="stringliteral">u&#39;$0f0{f1{$1.font}‚ÅÑf2{$2.font}}&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;fraction&quot;&#39;</span>,<span class="stringliteral">u&#39;sup class=&quot;unit&quot;&#39;</span>,<span class="stringliteral">u&#39;sub class=&quot;unit&quot;&#39;</span>,], </div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;      <span class="stringliteral">u&#39;\\uproot&#39;</span>:[<span class="stringliteral">u&#39;{$p!}&#39;</span>,<span class="stringliteral">u&#39;f0{ }&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;uproot&quot; style=&quot;width: $p;px&quot;&#39;</span>,], </div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;      <span class="stringliteral">u&#39;\\url&#39;</span>:[<span class="stringliteral">u&#39;{$u!}&#39;</span>,<span class="stringliteral">u&#39;f0{$u}&#39;</span>,<span class="stringliteral">u&#39;a href=&quot;$u&quot;&#39;</span>,], </div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;      <span class="stringliteral">u&#39;\\vspace&#39;</span>:[<span class="stringliteral">u&#39;{$p!}&#39;</span>,<span class="stringliteral">u&#39;f0{ }&#39;</span>,<span class="stringliteral">u&#39;span class=&quot;vspace&quot; style=&quot;height: $p;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;      }</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160; </div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;  hybridsizes = {</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;      <span class="stringliteral">u&#39;\\binom&#39;</span>:<span class="stringliteral">u&#39;$1+$2&#39;</span>, <span class="stringliteral">u&#39;\\cfrac&#39;</span>:<span class="stringliteral">u&#39;$1+$2&#39;</span>, <span class="stringliteral">u&#39;\\dbinom&#39;</span>:<span class="stringliteral">u&#39;$1+$2+1&#39;</span>, </div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;      <span class="stringliteral">u&#39;\\dfrac&#39;</span>:<span class="stringliteral">u&#39;$1+$2&#39;</span>, <span class="stringliteral">u&#39;\\frac&#39;</span>:<span class="stringliteral">u&#39;$1+$2&#39;</span>, <span class="stringliteral">u&#39;\\tbinom&#39;</span>:<span class="stringliteral">u&#39;$1+$2+1&#39;</span>, </div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;      }</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160; </div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;  labelfunctions = {</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;      <span class="stringliteral">u&#39;\\label&#39;</span>:<span class="stringliteral">u&#39;a name=&quot;#&quot;&#39;</span>, </div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;      }</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160; </div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;  limitcommands = {</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;      <span class="stringliteral">u&#39;\\biginterleave&#39;</span>:<span class="stringliteral">u&#39;‚´º&#39;</span>, <span class="stringliteral">u&#39;\\bigsqcap&#39;</span>:<span class="stringliteral">u&#39;‚®Ö&#39;</span>, <span class="stringliteral">u&#39;\\fint&#39;</span>:<span class="stringliteral">u&#39;‚®è&#39;</span>, </div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;      <span class="stringliteral">u&#39;\\iiiint&#39;</span>:<span class="stringliteral">u&#39;‚®å&#39;</span>, <span class="stringliteral">u&#39;\\int&#39;</span>:<span class="stringliteral">u&#39;‚à´&#39;</span>, <span class="stringliteral">u&#39;\\intop&#39;</span>:<span class="stringliteral">u&#39;‚à´&#39;</span>, <span class="stringliteral">u&#39;\\lim&#39;</span>:<span class="stringliteral">u&#39;lim&#39;</span>, </div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;      <span class="stringliteral">u&#39;\\prod&#39;</span>:<span class="stringliteral">u&#39;‚àè&#39;</span>, <span class="stringliteral">u&#39;\\smallint&#39;</span>:<span class="stringliteral">u&#39;‚à´&#39;</span>, <span class="stringliteral">u&#39;\\sqint&#39;</span>:<span class="stringliteral">u&#39;‚®ñ&#39;</span>, <span class="stringliteral">u&#39;\\sum&#39;</span>:<span class="stringliteral">u&#39;‚àë&#39;</span>, </div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;      <span class="stringliteral">u&#39;\\varointclockwise&#39;</span>:<span class="stringliteral">u&#39;‚à≤&#39;</span>, <span class="stringliteral">u&#39;\\varprod&#39;</span>:<span class="stringliteral">u&#39;‚®â&#39;</span>, <span class="stringliteral">u&#39;\\zcmp&#39;</span>:<span class="stringliteral">u&#39;‚®ü&#39;</span>, </div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;      <span class="stringliteral">u&#39;\\zhide&#39;</span>:<span class="stringliteral">u&#39;‚ßπ&#39;</span>, <span class="stringliteral">u&#39;\\zpipe&#39;</span>:<span class="stringliteral">u&#39;‚®†&#39;</span>, <span class="stringliteral">u&#39;\\zproject&#39;</span>:<span class="stringliteral">u&#39;‚®°&#39;</span>, </div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;      }</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160; </div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;  misccommands = {</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;      <span class="stringliteral">u&#39;\\limits&#39;</span>:<span class="stringliteral">u&#39;LimitPreviousCommand&#39;</span>, <span class="stringliteral">u&#39;\\newcommand&#39;</span>:<span class="stringliteral">u&#39;MacroDefinition&#39;</span>, </div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;      <span class="stringliteral">u&#39;\\renewcommand&#39;</span>:<span class="stringliteral">u&#39;MacroDefinition&#39;</span>, </div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;      <span class="stringliteral">u&#39;\\setcounter&#39;</span>:<span class="stringliteral">u&#39;SetCounterFunction&#39;</span>, <span class="stringliteral">u&#39;\\tag&#39;</span>:<span class="stringliteral">u&#39;FormulaTag&#39;</span>, </div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;      <span class="stringliteral">u&#39;\\tag*&#39;</span>:<span class="stringliteral">u&#39;FormulaTag&#39;</span>, <span class="stringliteral">u&#39;\\today&#39;</span>:<span class="stringliteral">u&#39;TodayCommand&#39;</span>, </div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;      }</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160; </div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;  modified = {</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;      <span class="stringliteral">u&#39;\n&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39; &#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;$&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;&amp;&#39;</span>:<span class="stringliteral">u&#39;    &#39;</span>, <span class="stringliteral">u&#39;\&#39;&#39;</span>:<span class="stringliteral">u&#39;‚Äô&#39;</span>, <span class="stringliteral">u&#39;+&#39;</span>:<span class="stringliteral">u&#39;‚Åü+‚Åü&#39;</span>, </div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;      <span class="stringliteral">u&#39;,&#39;</span>:<span class="stringliteral">u&#39;,‚Åü&#39;</span>, <span class="stringliteral">u&#39;-&#39;</span>:<span class="stringliteral">u&#39;‚Åü‚àí‚Åü&#39;</span>, <span class="stringliteral">u&#39;/&#39;</span>:<span class="stringliteral">u&#39;‚Åü‚ÅÑ‚Åü&#39;</span>, <span class="stringliteral">u&#39;&lt;&#39;</span>:<span class="stringliteral">u&#39;‚Åü&amp;lt;‚Åü&#39;</span>, <span class="stringliteral">u&#39;=&#39;</span>:<span class="stringliteral">u&#39;‚Åü=‚Åü&#39;</span>, </div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;      <span class="stringliteral">u&#39;&gt;&#39;</span>:<span class="stringliteral">u&#39;‚Åü&amp;gt;‚Åü&#39;</span>, <span class="stringliteral">u&#39;@&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;~&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, </div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;      }</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160; </div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;  onefunctions = {</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;      <span class="stringliteral">u&#39;\\Big&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;bigsymbol&quot;&#39;</span>, <span class="stringliteral">u&#39;\\Bigg&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;hugesymbol&quot;&#39;</span>, </div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;      <span class="stringliteral">u&#39;\\bar&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;bar&quot;&#39;</span>, <span class="stringliteral">u&#39;\\begin{array}&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;arraydef&quot;&#39;</span>, </div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;      <span class="stringliteral">u&#39;\\big&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;symbol&quot;&#39;</span>, <span class="stringliteral">u&#39;\\bigg&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;largesymbol&quot;&#39;</span>, </div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;      <span class="stringliteral">u&#39;\\bigl&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;bigsymbol&quot;&#39;</span>, <span class="stringliteral">u&#39;\\bigr&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;bigsymbol&quot;&#39;</span>, </div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;      <span class="stringliteral">u&#39;\\centering&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;align-center&quot;&#39;</span>, </div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;      <span class="stringliteral">u&#39;\\ensuremath&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;ensuremath&quot;&#39;</span>, </div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;      <span class="stringliteral">u&#39;\\hphantom&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;phantom&quot;&#39;</span>, </div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;      <span class="stringliteral">u&#39;\\noindent&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;noindent&quot;&#39;</span>, </div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;      <span class="stringliteral">u&#39;\\overbrace&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;overbrace&quot;&#39;</span>, </div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;      <span class="stringliteral">u&#39;\\overline&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;overline&quot;&#39;</span>, </div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;      <span class="stringliteral">u&#39;\\phantom&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;phantom&quot;&#39;</span>, </div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;      <span class="stringliteral">u&#39;\\underbrace&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;underbrace&quot;&#39;</span>, <span class="stringliteral">u&#39;\\underline&#39;</span>:<span class="stringliteral">u&#39;u&#39;</span>, </div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;      <span class="stringliteral">u&#39;\\vphantom&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;phantom&quot;&#39;</span>, </div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;      }</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160; </div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;  spacedcommands = {</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;      <span class="stringliteral">u&#39;\\Bot&#39;</span>:<span class="stringliteral">u&#39;‚´´&#39;</span>, <span class="stringliteral">u&#39;\\Doteq&#39;</span>:<span class="stringliteral">u&#39;‚âë&#39;</span>, <span class="stringliteral">u&#39;\\DownArrowBar&#39;</span>:<span class="stringliteral">u&#39;‚§ì&#39;</span>, </div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;      <span class="stringliteral">u&#39;\\DownLeftTeeVector&#39;</span>:<span class="stringliteral">u&#39;‚•û&#39;</span>, <span class="stringliteral">u&#39;\\DownLeftVectorBar&#39;</span>:<span class="stringliteral">u&#39;‚•ñ&#39;</span>, </div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;      <span class="stringliteral">u&#39;\\DownRightTeeVector&#39;</span>:<span class="stringliteral">u&#39;‚•ü&#39;</span>, <span class="stringliteral">u&#39;\\DownRightVectorBar&#39;</span>:<span class="stringliteral">u&#39;‚•ó&#39;</span>, </div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;      <span class="stringliteral">u&#39;\\Equal&#39;</span>:<span class="stringliteral">u&#39;‚©µ&#39;</span>, <span class="stringliteral">u&#39;\\LeftArrowBar&#39;</span>:<span class="stringliteral">u&#39;‚á§&#39;</span>, <span class="stringliteral">u&#39;\\LeftDownTeeVector&#39;</span>:<span class="stringliteral">u&#39;‚•°&#39;</span>, </div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;      <span class="stringliteral">u&#39;\\LeftDownVectorBar&#39;</span>:<span class="stringliteral">u&#39;‚•ô&#39;</span>, <span class="stringliteral">u&#39;\\LeftTeeVector&#39;</span>:<span class="stringliteral">u&#39;‚•ö&#39;</span>, </div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;      <span class="stringliteral">u&#39;\\LeftTriangleBar&#39;</span>:<span class="stringliteral">u&#39;‚ßè&#39;</span>, <span class="stringliteral">u&#39;\\LeftUpTeeVector&#39;</span>:<span class="stringliteral">u&#39;‚•†&#39;</span>, </div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;      <span class="stringliteral">u&#39;\\LeftUpVectorBar&#39;</span>:<span class="stringliteral">u&#39;‚•ò&#39;</span>, <span class="stringliteral">u&#39;\\LeftVectorBar&#39;</span>:<span class="stringliteral">u&#39;‚•í&#39;</span>, </div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;      <span class="stringliteral">u&#39;\\Leftrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚áî&#39;</span>, <span class="stringliteral">u&#39;\\Longmapsfrom&#39;</span>:<span class="stringliteral">u&#39;‚üΩ&#39;</span>, <span class="stringliteral">u&#39;\\Longmapsto&#39;</span>:<span class="stringliteral">u&#39;‚üæ&#39;</span>, </div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;      <span class="stringliteral">u&#39;\\MapsDown&#39;</span>:<span class="stringliteral">u&#39;‚Üß&#39;</span>, <span class="stringliteral">u&#39;\\MapsUp&#39;</span>:<span class="stringliteral">u&#39;‚Ü•&#39;</span>, <span class="stringliteral">u&#39;\\Nearrow&#39;</span>:<span class="stringliteral">u&#39;‚áó&#39;</span>, </div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;      <span class="stringliteral">u&#39;\\NestedGreaterGreater&#39;</span>:<span class="stringliteral">u&#39;‚™¢&#39;</span>, <span class="stringliteral">u&#39;\\NestedLessLess&#39;</span>:<span class="stringliteral">u&#39;‚™°&#39;</span>, </div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;      <span class="stringliteral">u&#39;\\NotGreaterLess&#39;</span>:<span class="stringliteral">u&#39;‚âπ&#39;</span>, <span class="stringliteral">u&#39;\\NotGreaterTilde&#39;</span>:<span class="stringliteral">u&#39;‚âµ&#39;</span>, </div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;      <span class="stringliteral">u&#39;\\NotLessTilde&#39;</span>:<span class="stringliteral">u&#39;‚â¥&#39;</span>, <span class="stringliteral">u&#39;\\Nwarrow&#39;</span>:<span class="stringliteral">u&#39;‚áñ&#39;</span>, <span class="stringliteral">u&#39;\\Proportion&#39;</span>:<span class="stringliteral">u&#39;‚à∑&#39;</span>, </div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;      <span class="stringliteral">u&#39;\\RightArrowBar&#39;</span>:<span class="stringliteral">u&#39;‚á•&#39;</span>, <span class="stringliteral">u&#39;\\RightDownTeeVector&#39;</span>:<span class="stringliteral">u&#39;‚•ù&#39;</span>, </div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;      <span class="stringliteral">u&#39;\\RightDownVectorBar&#39;</span>:<span class="stringliteral">u&#39;‚•ï&#39;</span>, <span class="stringliteral">u&#39;\\RightTeeVector&#39;</span>:<span class="stringliteral">u&#39;‚•õ&#39;</span>, </div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;      <span class="stringliteral">u&#39;\\RightTriangleBar&#39;</span>:<span class="stringliteral">u&#39;‚ßê&#39;</span>, <span class="stringliteral">u&#39;\\RightUpTeeVector&#39;</span>:<span class="stringliteral">u&#39;‚•ú&#39;</span>, </div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;      <span class="stringliteral">u&#39;\\RightUpVectorBar&#39;</span>:<span class="stringliteral">u&#39;‚•î&#39;</span>, <span class="stringliteral">u&#39;\\RightVectorBar&#39;</span>:<span class="stringliteral">u&#39;‚•ì&#39;</span>, </div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;      <span class="stringliteral">u&#39;\\Rightarrow&#39;</span>:<span class="stringliteral">u&#39;‚áí&#39;</span>, <span class="stringliteral">u&#39;\\Same&#39;</span>:<span class="stringliteral">u&#39;‚©∂&#39;</span>, <span class="stringliteral">u&#39;\\Searrow&#39;</span>:<span class="stringliteral">u&#39;‚áò&#39;</span>, </div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;      <span class="stringliteral">u&#39;\\Swarrow&#39;</span>:<span class="stringliteral">u&#39;‚áô&#39;</span>, <span class="stringliteral">u&#39;\\Top&#39;</span>:<span class="stringliteral">u&#39;‚´™&#39;</span>, <span class="stringliteral">u&#39;\\UpArrowBar&#39;</span>:<span class="stringliteral">u&#39;‚§í&#39;</span>, <span class="stringliteral">u&#39;\\VDash&#39;</span>:<span class="stringliteral">u&#39;‚ä´&#39;</span>, </div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;      <span class="stringliteral">u&#39;\\approx&#39;</span>:<span class="stringliteral">u&#39;‚âà&#39;</span>, <span class="stringliteral">u&#39;\\approxeq&#39;</span>:<span class="stringliteral">u&#39;‚âä&#39;</span>, <span class="stringliteral">u&#39;\\backsim&#39;</span>:<span class="stringliteral">u&#39;‚àΩ&#39;</span>, <span class="stringliteral">u&#39;\\barin&#39;</span>:<span class="stringliteral">u&#39;‚ã∂&#39;</span>, </div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;      <span class="stringliteral">u&#39;\\barleftharpoon&#39;</span>:<span class="stringliteral">u&#39;‚•´&#39;</span>, <span class="stringliteral">u&#39;\\barrightharpoon&#39;</span>:<span class="stringliteral">u&#39;‚•≠&#39;</span>, <span class="stringliteral">u&#39;\\bij&#39;</span>:<span class="stringliteral">u&#39;‚§ñ&#39;</span>, </div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;      <span class="stringliteral">u&#39;\\coloneq&#39;</span>:<span class="stringliteral">u&#39;‚âî&#39;</span>, <span class="stringliteral">u&#39;\\corresponds&#39;</span>:<span class="stringliteral">u&#39;‚âô&#39;</span>, <span class="stringliteral">u&#39;\\curlyeqprec&#39;</span>:<span class="stringliteral">u&#39;‚ãû&#39;</span>, </div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;      <span class="stringliteral">u&#39;\\curlyeqsucc&#39;</span>:<span class="stringliteral">u&#39;‚ãü&#39;</span>, <span class="stringliteral">u&#39;\\dashrightarrow&#39;</span>:<span class="stringliteral">u&#39;‚á¢&#39;</span>, <span class="stringliteral">u&#39;\\dlsh&#39;</span>:<span class="stringliteral">u&#39;‚Ü≤&#39;</span>, </div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;      <span class="stringliteral">u&#39;\\downdownharpoons&#39;</span>:<span class="stringliteral">u&#39;‚••&#39;</span>, <span class="stringliteral">u&#39;\\downuparrows&#39;</span>:<span class="stringliteral">u&#39;‚áµ&#39;</span>, </div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;      <span class="stringliteral">u&#39;\\downupharpoons&#39;</span>:<span class="stringliteral">u&#39;‚•Ø&#39;</span>, <span class="stringliteral">u&#39;\\drsh&#39;</span>:<span class="stringliteral">u&#39;‚Ü≥&#39;</span>, <span class="stringliteral">u&#39;\\eqslantgtr&#39;</span>:<span class="stringliteral">u&#39;‚™ñ&#39;</span>, </div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;      <span class="stringliteral">u&#39;\\eqslantless&#39;</span>:<span class="stringliteral">u&#39;‚™ï&#39;</span>, <span class="stringliteral">u&#39;\\equiv&#39;</span>:<span class="stringliteral">u&#39;‚â°&#39;</span>, <span class="stringliteral">u&#39;\\ffun&#39;</span>:<span class="stringliteral">u&#39;‚áª&#39;</span>, <span class="stringliteral">u&#39;\\finj&#39;</span>:<span class="stringliteral">u&#39;‚§ï&#39;</span>, </div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;      <span class="stringliteral">u&#39;\\ge&#39;</span>:<span class="stringliteral">u&#39;‚â•&#39;</span>, <span class="stringliteral">u&#39;\\geq&#39;</span>:<span class="stringliteral">u&#39;‚â•&#39;</span>, <span class="stringliteral">u&#39;\\ggcurly&#39;</span>:<span class="stringliteral">u&#39;‚™º&#39;</span>, <span class="stringliteral">u&#39;\\gnapprox&#39;</span>:<span class="stringliteral">u&#39;‚™ä&#39;</span>, </div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;      <span class="stringliteral">u&#39;\\gneq&#39;</span>:<span class="stringliteral">u&#39;‚™à&#39;</span>, <span class="stringliteral">u&#39;\\gtrapprox&#39;</span>:<span class="stringliteral">u&#39;‚™Ü&#39;</span>, <span class="stringliteral">u&#39;\\hash&#39;</span>:<span class="stringliteral">u&#39;‚ãï&#39;</span>, <span class="stringliteral">u&#39;\\iddots&#39;</span>:<span class="stringliteral">u&#39;‚ã∞&#39;</span>, </div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;      <span class="stringliteral">u&#39;\\implies&#39;</span>:<span class="stringliteral">u&#39;‚Åü‚áí‚Åü&#39;</span>, <span class="stringliteral">u&#39;\\in&#39;</span>:<span class="stringliteral">u&#39;‚àà&#39;</span>, <span class="stringliteral">u&#39;\\le&#39;</span>:<span class="stringliteral">u&#39;‚â§&#39;</span>, <span class="stringliteral">u&#39;\\leftarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üê&#39;</span>, </div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;      <span class="stringliteral">u&#39;\\leftarrowtriangle&#39;</span>:<span class="stringliteral">u&#39;‚áΩ&#39;</span>, <span class="stringliteral">u&#39;\\leftbarharpoon&#39;</span>:<span class="stringliteral">u&#39;‚•™&#39;</span>, </div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;      <span class="stringliteral">u&#39;\\leftrightarrowtriangle&#39;</span>:<span class="stringliteral">u&#39;‚áø&#39;</span>, <span class="stringliteral">u&#39;\\leftrightharpoon&#39;</span>:<span class="stringliteral">u&#39;‚•ä&#39;</span>, </div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;      <span class="stringliteral">u&#39;\\leftrightharpoondown&#39;</span>:<span class="stringliteral">u&#39;‚•ê&#39;</span>, <span class="stringliteral">u&#39;\\leftrightharpoonup&#39;</span>:<span class="stringliteral">u&#39;‚•é&#39;</span>, </div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;      <span class="stringliteral">u&#39;\\leftrightsquigarrow&#39;</span>:<span class="stringliteral">u&#39;‚Ü≠&#39;</span>, <span class="stringliteral">u&#39;\\leftslice&#39;</span>:<span class="stringliteral">u&#39;‚™¶&#39;</span>, </div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;      <span class="stringliteral">u&#39;\\leftsquigarrow&#39;</span>:<span class="stringliteral">u&#39;‚áú&#39;</span>, <span class="stringliteral">u&#39;\\leftupdownharpoon&#39;</span>:<span class="stringliteral">u&#39;‚•ë&#39;</span>, <span class="stringliteral">u&#39;\\leq&#39;</span>:<span class="stringliteral">u&#39;‚â§&#39;</span>, </div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;      <span class="stringliteral">u&#39;\\lessapprox&#39;</span>:<span class="stringliteral">u&#39;‚™Ö&#39;</span>, <span class="stringliteral">u&#39;\\llcurly&#39;</span>:<span class="stringliteral">u&#39;‚™ª&#39;</span>, <span class="stringliteral">u&#39;\\lnapprox&#39;</span>:<span class="stringliteral">u&#39;‚™â&#39;</span>, </div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;      <span class="stringliteral">u&#39;\\lneq&#39;</span>:<span class="stringliteral">u&#39;‚™á&#39;</span>, <span class="stringliteral">u&#39;\\longmapsfrom&#39;</span>:<span class="stringliteral">u&#39;‚üª&#39;</span>, <span class="stringliteral">u&#39;\\multimapboth&#39;</span>:<span class="stringliteral">u&#39;‚ßü&#39;</span>, </div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;      <span class="stringliteral">u&#39;\\multimapdotbothA&#39;</span>:<span class="stringliteral">u&#39;‚ä∂&#39;</span>, <span class="stringliteral">u&#39;\\multimapdotbothB&#39;</span>:<span class="stringliteral">u&#39;‚ä∑&#39;</span>, </div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;      <span class="stringliteral">u&#39;\\multimapinv&#39;</span>:<span class="stringliteral">u&#39;‚üú&#39;</span>, <span class="stringliteral">u&#39;\\nVdash&#39;</span>:<span class="stringliteral">u&#39;‚äÆ&#39;</span>, <span class="stringliteral">u&#39;\\ne&#39;</span>:<span class="stringliteral">u&#39;‚â†&#39;</span>, <span class="stringliteral">u&#39;\\neq&#39;</span>:<span class="stringliteral">u&#39;‚â†&#39;</span>, </div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;      <span class="stringliteral">u&#39;\\ngeq&#39;</span>:<span class="stringliteral">u&#39;‚â±&#39;</span>, <span class="stringliteral">u&#39;\\nleq&#39;</span>:<span class="stringliteral">u&#39;‚â∞&#39;</span>, <span class="stringliteral">u&#39;\\nni&#39;</span>:<span class="stringliteral">u&#39;‚àå&#39;</span>, <span class="stringliteral">u&#39;\\not\\in&#39;</span>:<span class="stringliteral">u&#39;‚àâ&#39;</span>, </div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;      <span class="stringliteral">u&#39;\\notasymp&#39;</span>:<span class="stringliteral">u&#39;‚â≠&#39;</span>, <span class="stringliteral">u&#39;\\npreceq&#39;</span>:<span class="stringliteral">u&#39;‚ã†&#39;</span>, <span class="stringliteral">u&#39;\\nsqsubseteq&#39;</span>:<span class="stringliteral">u&#39;‚ã¢&#39;</span>, </div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;      <span class="stringliteral">u&#39;\\nsqsupseteq&#39;</span>:<span class="stringliteral">u&#39;‚ã£&#39;</span>, <span class="stringliteral">u&#39;\\nsubset&#39;</span>:<span class="stringliteral">u&#39;‚äÑ&#39;</span>, <span class="stringliteral">u&#39;\\nsucceq&#39;</span>:<span class="stringliteral">u&#39;‚ã°&#39;</span>, </div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;      <span class="stringliteral">u&#39;\\pfun&#39;</span>:<span class="stringliteral">u&#39;‚á∏&#39;</span>, <span class="stringliteral">u&#39;\\pinj&#39;</span>:<span class="stringliteral">u&#39;‚§î&#39;</span>, <span class="stringliteral">u&#39;\\precapprox&#39;</span>:<span class="stringliteral">u&#39;‚™∑&#39;</span>, <span class="stringliteral">u&#39;\\preceqq&#39;</span>:<span class="stringliteral">u&#39;‚™≥&#39;</span>, </div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;      <span class="stringliteral">u&#39;\\precnapprox&#39;</span>:<span class="stringliteral">u&#39;‚™π&#39;</span>, <span class="stringliteral">u&#39;\\precnsim&#39;</span>:<span class="stringliteral">u&#39;‚ã®&#39;</span>, <span class="stringliteral">u&#39;\\propto&#39;</span>:<span class="stringliteral">u&#39;‚àù&#39;</span>, </div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;      <span class="stringliteral">u&#39;\\psur&#39;</span>:<span class="stringliteral">u&#39;‚§Ä&#39;</span>, <span class="stringliteral">u&#39;\\rightarrow&#39;</span>:<span class="stringliteral">u&#39;‚Üí&#39;</span>, <span class="stringliteral">u&#39;\\rightarrowtriangle&#39;</span>:<span class="stringliteral">u&#39;‚áæ&#39;</span>, </div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;      <span class="stringliteral">u&#39;\\rightbarharpoon&#39;</span>:<span class="stringliteral">u&#39;‚•¨&#39;</span>, <span class="stringliteral">u&#39;\\rightleftharpoon&#39;</span>:<span class="stringliteral">u&#39;‚•ã&#39;</span>, </div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;      <span class="stringliteral">u&#39;\\rightslice&#39;</span>:<span class="stringliteral">u&#39;‚™ß&#39;</span>, <span class="stringliteral">u&#39;\\rightsquigarrow&#39;</span>:<span class="stringliteral">u&#39;‚áù&#39;</span>, </div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;      <span class="stringliteral">u&#39;\\rightupdownharpoon&#39;</span>:<span class="stringliteral">u&#39;‚•è&#39;</span>, <span class="stringliteral">u&#39;\\sim&#39;</span>:<span class="stringliteral">u&#39;~&#39;</span>, <span class="stringliteral">u&#39;\\strictfi&#39;</span>:<span class="stringliteral">u&#39;‚•º&#39;</span>, </div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;      <span class="stringliteral">u&#39;\\strictif&#39;</span>:<span class="stringliteral">u&#39;‚•Ω&#39;</span>, <span class="stringliteral">u&#39;\\subset&#39;</span>:<span class="stringliteral">u&#39;‚äÇ&#39;</span>, <span class="stringliteral">u&#39;\\subseteq&#39;</span>:<span class="stringliteral">u&#39;‚äÜ&#39;</span>, </div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;      <span class="stringliteral">u&#39;\\subsetneq&#39;</span>:<span class="stringliteral">u&#39;‚ää&#39;</span>, <span class="stringliteral">u&#39;\\succapprox&#39;</span>:<span class="stringliteral">u&#39;‚™∏&#39;</span>, <span class="stringliteral">u&#39;\\succeqq&#39;</span>:<span class="stringliteral">u&#39;‚™¥&#39;</span>, </div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;      <span class="stringliteral">u&#39;\\succnapprox&#39;</span>:<span class="stringliteral">u&#39;‚™∫&#39;</span>, <span class="stringliteral">u&#39;\\supset&#39;</span>:<span class="stringliteral">u&#39;‚äÉ&#39;</span>, <span class="stringliteral">u&#39;\\supseteq&#39;</span>:<span class="stringliteral">u&#39;‚äá&#39;</span>, </div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;      <span class="stringliteral">u&#39;\\supsetneq&#39;</span>:<span class="stringliteral">u&#39;‚äã&#39;</span>, <span class="stringliteral">u&#39;\\times&#39;</span>:<span class="stringliteral">u&#39;√ó&#39;</span>, <span class="stringliteral">u&#39;\\to&#39;</span>:<span class="stringliteral">u&#39;‚Üí&#39;</span>, </div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;      <span class="stringliteral">u&#39;\\updownarrows&#39;</span>:<span class="stringliteral">u&#39;‚áÖ&#39;</span>, <span class="stringliteral">u&#39;\\updownharpoons&#39;</span>:<span class="stringliteral">u&#39;‚•Æ&#39;</span>, <span class="stringliteral">u&#39;\\upupharpoons&#39;</span>:<span class="stringliteral">u&#39;‚•£&#39;</span>, </div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;      <span class="stringliteral">u&#39;\\vartriangleleft&#39;</span>:<span class="stringliteral">u&#39;‚ä≤&#39;</span>, <span class="stringliteral">u&#39;\\vartriangleright&#39;</span>:<span class="stringliteral">u&#39;‚ä≥&#39;</span>, </div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;      }</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160; </div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;  starts = {</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;      <span class="stringliteral">u&#39;beginafter&#39;</span>:<span class="stringliteral">u&#39;}&#39;</span>, <span class="stringliteral">u&#39;beginbefore&#39;</span>:<span class="stringliteral">u&#39;\\begin{&#39;</span>, <span class="stringliteral">u&#39;bracket&#39;</span>:<span class="stringliteral">u&#39;{&#39;</span>, </div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;      <span class="stringliteral">u&#39;command&#39;</span>:<span class="stringliteral">u&#39;\\&#39;</span>, <span class="stringliteral">u&#39;comment&#39;</span>:<span class="stringliteral">u&#39;%&#39;</span>, <span class="stringliteral">u&#39;complex&#39;</span>:<span class="stringliteral">u&#39;\\[&#39;</span>, <span class="stringliteral">u&#39;simple&#39;</span>:<span class="stringliteral">u&#39;$&#39;</span>, </div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;      <span class="stringliteral">u&#39;squarebracket&#39;</span>:<span class="stringliteral">u&#39;[&#39;</span>, <span class="stringliteral">u&#39;unnumbered&#39;</span>:<span class="stringliteral">u&#39;*&#39;</span>, </div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;      }</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160; </div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;  symbolfunctions = {</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;      <span class="stringliteral">u&#39;^&#39;</span>:<span class="stringliteral">u&#39;sup&#39;</span>, <span class="stringliteral">u&#39;_&#39;</span>:<span class="stringliteral">u&#39;sub&#39;</span>, </div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;      }</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160; </div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;  textfunctions = {</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;      <span class="stringliteral">u&#39;\\mbox&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;mbox&quot;&#39;</span>, <span class="stringliteral">u&#39;\\text&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;text&quot;&#39;</span>, </div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;      <span class="stringliteral">u&#39;\\textbf&#39;</span>:<span class="stringliteral">u&#39;b&#39;</span>, <span class="stringliteral">u&#39;\\textipa&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;textipa&quot;&#39;</span>, <span class="stringliteral">u&#39;\\textit&#39;</span>:<span class="stringliteral">u&#39;i&#39;</span>, </div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;      <span class="stringliteral">u&#39;\\textnormal&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;textnormal&quot;&#39;</span>, </div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;      <span class="stringliteral">u&#39;\\textrm&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;textrm&quot;&#39;</span>, </div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;      <span class="stringliteral">u&#39;\\textsc&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;versalitas&quot;&#39;</span>, </div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;      <span class="stringliteral">u&#39;\\textsf&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;textsf&quot;&#39;</span>, <span class="stringliteral">u&#39;\\textsl&#39;</span>:<span class="stringliteral">u&#39;i&#39;</span>, <span class="stringliteral">u&#39;\\texttt&#39;</span>:<span class="stringliteral">u&#39;tt&#39;</span>, </div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;      <span class="stringliteral">u&#39;\\textup&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;normal&quot;&#39;</span>, </div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;      }</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160; </div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;  unmodified = {</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;      </div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;      <span class="stringliteral">u&#39;characters&#39;</span>:[<span class="stringliteral">u&#39;.&#39;</span>,<span class="stringliteral">u&#39;*&#39;</span>,<span class="stringliteral">u&#39;‚Ç¨&#39;</span>,<span class="stringliteral">u&#39;(&#39;</span>,<span class="stringliteral">u&#39;)&#39;</span>,<span class="stringliteral">u&#39;[&#39;</span>,<span class="stringliteral">u&#39;]&#39;</span>,<span class="stringliteral">u&#39;:&#39;</span>,<span class="stringliteral">u&#39;¬∑&#39;</span>,<span class="stringliteral">u&#39;!&#39;</span>,<span class="stringliteral">u&#39;;&#39;</span>,<span class="stringliteral">u&#39;|&#39;</span>,<span class="stringliteral">u&#39;¬ß&#39;</span>,<span class="stringliteral">u&#39;&quot;&#39;</span>,], </div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;      }</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160; </div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;  urls = {</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;      <span class="stringliteral">u&#39;googlecharts&#39;</span>:<span class="stringliteral">u&#39;http://chart.googleapis.com/chart?cht=tx&amp;chl=&#39;</span>, </div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;      }</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160; </div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;<span class="keyword">class </span>GeneralConfig(object):</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160; </div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;  version = {</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;      <span class="stringliteral">u&#39;date&#39;</span>:<span class="stringliteral">u&#39;2013-03-10&#39;</span>, <span class="stringliteral">u&#39;lyxformat&#39;</span>:<span class="stringliteral">u&#39;413&#39;</span>, <span class="stringliteral">u&#39;number&#39;</span>:<span class="stringliteral">u&#39;1.2.4&#39;</span>, </div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;      }</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160; </div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="keyword">class </span>HeaderConfig(object):</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160; </div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;  parameters = {</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;      <span class="stringliteral">u&#39;beginpreamble&#39;</span>:<span class="stringliteral">u&#39;\\begin_preamble&#39;</span>, <span class="stringliteral">u&#39;branch&#39;</span>:<span class="stringliteral">u&#39;\\branch&#39;</span>, </div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;      <span class="stringliteral">u&#39;documentclass&#39;</span>:<span class="stringliteral">u&#39;\\textclass&#39;</span>, <span class="stringliteral">u&#39;endbranch&#39;</span>:<span class="stringliteral">u&#39;\\end_branch&#39;</span>, </div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;      <span class="stringliteral">u&#39;endpreamble&#39;</span>:<span class="stringliteral">u&#39;\\end_preamble&#39;</span>, <span class="stringliteral">u&#39;language&#39;</span>:<span class="stringliteral">u&#39;\\language&#39;</span>, </div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;      <span class="stringliteral">u&#39;lstset&#39;</span>:<span class="stringliteral">u&#39;\\lstset&#39;</span>, <span class="stringliteral">u&#39;outputchanges&#39;</span>:<span class="stringliteral">u&#39;\\output_changes&#39;</span>, </div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;      <span class="stringliteral">u&#39;paragraphseparation&#39;</span>:<span class="stringliteral">u&#39;\\paragraph_separation&#39;</span>, </div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;      <span class="stringliteral">u&#39;pdftitle&#39;</span>:<span class="stringliteral">u&#39;\\pdf_title&#39;</span>, <span class="stringliteral">u&#39;secnumdepth&#39;</span>:<span class="stringliteral">u&#39;\\secnumdepth&#39;</span>, </div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;      <span class="stringliteral">u&#39;tocdepth&#39;</span>:<span class="stringliteral">u&#39;\\tocdepth&#39;</span>, </div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;      }</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160; </div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;  styles = {</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;      </div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;      <span class="stringliteral">u&#39;article&#39;</span>:[<span class="stringliteral">u&#39;article&#39;</span>,<span class="stringliteral">u&#39;aastex&#39;</span>,<span class="stringliteral">u&#39;aapaper&#39;</span>,<span class="stringliteral">u&#39;acmsiggraph&#39;</span>,<span class="stringliteral">u&#39;sigplanconf&#39;</span>,<span class="stringliteral">u&#39;achemso&#39;</span>,<span class="stringliteral">u&#39;amsart&#39;</span>,<span class="stringliteral">u&#39;apa&#39;</span>,<span class="stringliteral">u&#39;arab-article&#39;</span>,<span class="stringliteral">u&#39;armenian-article&#39;</span>,<span class="stringliteral">u&#39;article-beamer&#39;</span>,<span class="stringliteral">u&#39;chess&#39;</span>,<span class="stringliteral">u&#39;dtk&#39;</span>,<span class="stringliteral">u&#39;elsarticle&#39;</span>,<span class="stringliteral">u&#39;heb-article&#39;</span>,<span class="stringliteral">u&#39;IEEEtran&#39;</span>,<span class="stringliteral">u&#39;iopart&#39;</span>,<span class="stringliteral">u&#39;kluwer&#39;</span>,<span class="stringliteral">u&#39;scrarticle-beamer&#39;</span>,<span class="stringliteral">u&#39;scrartcl&#39;</span>,<span class="stringliteral">u&#39;extarticle&#39;</span>,<span class="stringliteral">u&#39;paper&#39;</span>,<span class="stringliteral">u&#39;mwart&#39;</span>,<span class="stringliteral">u&#39;revtex4&#39;</span>,<span class="stringliteral">u&#39;spie&#39;</span>,<span class="stringliteral">u&#39;svglobal3&#39;</span>,<span class="stringliteral">u&#39;ltugboat&#39;</span>,<span class="stringliteral">u&#39;agu-dtd&#39;</span>,<span class="stringliteral">u&#39;jgrga&#39;</span>,<span class="stringliteral">u&#39;agums&#39;</span>,<span class="stringliteral">u&#39;entcs&#39;</span>,<span class="stringliteral">u&#39;egs&#39;</span>,<span class="stringliteral">u&#39;ijmpc&#39;</span>,<span class="stringliteral">u&#39;ijmpd&#39;</span>,<span class="stringliteral">u&#39;singlecol-new&#39;</span>,<span class="stringliteral">u&#39;doublecol-new&#39;</span>,<span class="stringliteral">u&#39;isprs&#39;</span>,<span class="stringliteral">u&#39;tarticle&#39;</span>,<span class="stringliteral">u&#39;jsarticle&#39;</span>,<span class="stringliteral">u&#39;jarticle&#39;</span>,<span class="stringliteral">u&#39;jss&#39;</span>,<span class="stringliteral">u&#39;literate-article&#39;</span>,<span class="stringliteral">u&#39;siamltex&#39;</span>,<span class="stringliteral">u&#39;cl2emult&#39;</span>,<span class="stringliteral">u&#39;llncs&#39;</span>,<span class="stringliteral">u&#39;svglobal&#39;</span>,<span class="stringliteral">u&#39;svjog&#39;</span>,<span class="stringliteral">u&#39;svprobth&#39;</span>,], </div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;      <span class="stringliteral">u&#39;book&#39;</span>:[<span class="stringliteral">u&#39;book&#39;</span>,<span class="stringliteral">u&#39;amsbook&#39;</span>,<span class="stringliteral">u&#39;scrbook&#39;</span>,<span class="stringliteral">u&#39;extbook&#39;</span>,<span class="stringliteral">u&#39;tufte-book&#39;</span>,<span class="stringliteral">u&#39;report&#39;</span>,<span class="stringliteral">u&#39;extreport&#39;</span>,<span class="stringliteral">u&#39;scrreprt&#39;</span>,<span class="stringliteral">u&#39;memoir&#39;</span>,<span class="stringliteral">u&#39;tbook&#39;</span>,<span class="stringliteral">u&#39;jsbook&#39;</span>,<span class="stringliteral">u&#39;jbook&#39;</span>,<span class="stringliteral">u&#39;mwbk&#39;</span>,<span class="stringliteral">u&#39;svmono&#39;</span>,<span class="stringliteral">u&#39;svmult&#39;</span>,<span class="stringliteral">u&#39;treport&#39;</span>,<span class="stringliteral">u&#39;jreport&#39;</span>,<span class="stringliteral">u&#39;mwrep&#39;</span>,], </div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;      }</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160; </div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="keyword">class </span>ImageConfig(object):</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160; </div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;  converters = {</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;      </div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;      <span class="stringliteral">u&#39;imagemagick&#39;</span>:<span class="stringliteral">u&#39;convert[ -density $scale][ -define $format:use-cropbox=true] &quot;$input&quot; &quot;$output&quot;&#39;</span>, </div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;      <span class="stringliteral">u&#39;inkscape&#39;</span>:<span class="stringliteral">u&#39;inkscape &quot;$input&quot; --export-png=&quot;$output&quot;&#39;</span>, </div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;      <span class="stringliteral">u&#39;lyx&#39;</span>:<span class="stringliteral">u&#39;lyx -C &quot;$input&quot; &quot;$output&quot;&#39;</span>, </div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;      }</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160; </div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;  cropboxformats = {</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;      <span class="stringliteral">u&#39;.eps&#39;</span>:<span class="stringliteral">u&#39;ps&#39;</span>, <span class="stringliteral">u&#39;.pdf&#39;</span>:<span class="stringliteral">u&#39;pdf&#39;</span>, <span class="stringliteral">u&#39;.ps&#39;</span>:<span class="stringliteral">u&#39;ps&#39;</span>, </div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;      }</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160; </div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;  formats = {</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;      <span class="stringliteral">u&#39;default&#39;</span>:<span class="stringliteral">u&#39;.png&#39;</span>, <span class="stringliteral">u&#39;vector&#39;</span>:[<span class="stringliteral">u&#39;.svg&#39;</span>,<span class="stringliteral">u&#39;.eps&#39;</span>,], </div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;      }</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160; </div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="keyword">class </span>LayoutConfig(object):</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160; </div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;  groupable = {</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;      </div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;      <span class="stringliteral">u&#39;allowed&#39;</span>:[<span class="stringliteral">u&#39;StringContainer&#39;</span>,<span class="stringliteral">u&#39;Constant&#39;</span>,<span class="stringliteral">u&#39;TaggedText&#39;</span>,<span class="stringliteral">u&#39;Align&#39;</span>,<span class="stringliteral">u&#39;TextFamily&#39;</span>,<span class="stringliteral">u&#39;EmphaticText&#39;</span>,<span class="stringliteral">u&#39;VersalitasText&#39;</span>,<span class="stringliteral">u&#39;BarredText&#39;</span>,<span class="stringliteral">u&#39;SizeText&#39;</span>,<span class="stringliteral">u&#39;ColorText&#39;</span>,<span class="stringliteral">u&#39;LangLine&#39;</span>,<span class="stringliteral">u&#39;Formula&#39;</span>,], </div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;      }</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160; </div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;<span class="keyword">class </span>NewfangleConfig(object):</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160; </div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;  constants = {</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;      <span class="stringliteral">u&#39;chunkref&#39;</span>:<span class="stringliteral">u&#39;chunkref{&#39;</span>, <span class="stringliteral">u&#39;endcommand&#39;</span>:<span class="stringliteral">u&#39;}&#39;</span>, <span class="stringliteral">u&#39;endmark&#39;</span>:<span class="stringliteral">u&#39;&amp;gt;&#39;</span>, </div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;      <span class="stringliteral">u&#39;startcommand&#39;</span>:<span class="stringliteral">u&#39;\\&#39;</span>, <span class="stringliteral">u&#39;startmark&#39;</span>:<span class="stringliteral">u&#39;=&amp;lt;&#39;</span>, </div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;      }</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160; </div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="keyword">class </span>NumberingConfig(object):</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160; </div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;  layouts = {</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;      </div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;      <span class="stringliteral">u&#39;ordered&#39;</span>:[<span class="stringliteral">u&#39;Chapter&#39;</span>,<span class="stringliteral">u&#39;Section&#39;</span>,<span class="stringliteral">u&#39;Subsection&#39;</span>,<span class="stringliteral">u&#39;Subsubsection&#39;</span>,<span class="stringliteral">u&#39;Paragraph&#39;</span>,], </div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;      <span class="stringliteral">u&#39;roman&#39;</span>:[<span class="stringliteral">u&#39;Part&#39;</span>,<span class="stringliteral">u&#39;Book&#39;</span>,], </div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;      }</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160; </div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;  sequence = {</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;      <span class="stringliteral">u&#39;symbols&#39;</span>:[<span class="stringliteral">u&#39;*&#39;</span>,<span class="stringliteral">u&#39;**&#39;</span>,<span class="stringliteral">u&#39;‚Ä†&#39;</span>,<span class="stringliteral">u&#39;‚Ä°&#39;</span>,<span class="stringliteral">u&#39;¬ß&#39;</span>,<span class="stringliteral">u&#39;¬ß¬ß&#39;</span>,<span class="stringliteral">u&#39;¬∂&#39;</span>,<span class="stringliteral">u&#39;¬∂¬∂&#39;</span>,<span class="stringliteral">u&#39;#&#39;</span>,<span class="stringliteral">u&#39;##&#39;</span>,], </div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;      }</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160; </div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;<span class="keyword">class </span>StyleConfig(object):</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160; </div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;  hspaces = {</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;      <span class="stringliteral">u&#39;\\enskip{}&#39;</span>:<span class="stringliteral">u&#39;‚ÄÇ&#39;</span>, <span class="stringliteral">u&#39;\\hfill{}&#39;</span>:<span class="stringliteral">u&#39;&lt;span class=&quot;hfill&quot;&gt; &lt;/span&gt;&#39;</span>, </div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;      <span class="stringliteral">u&#39;\\hspace*{\\fill}&#39;</span>:<span class="stringliteral">u&#39;‚ÄÉ&#39;</span>, <span class="stringliteral">u&#39;\\hspace*{}&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;\\hspace{}&#39;</span>:<span class="stringliteral">u&#39;‚ÄÉ&#39;</span>, </div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;      <span class="stringliteral">u&#39;\\negthinspace{}&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;\\qquad{}&#39;</span>:<span class="stringliteral">u&#39;‚ÄÉ‚ÄÉ&#39;</span>, <span class="stringliteral">u&#39;\\quad{}&#39;</span>:<span class="stringliteral">u&#39;‚ÄÉ&#39;</span>, </div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;      <span class="stringliteral">u&#39;\\space{}&#39;</span>:<span class="stringliteral">u&#39;¬†&#39;</span>, <span class="stringliteral">u&#39;\\thinspace{}&#39;</span>:<span class="stringliteral">u&#39;‚Äâ&#39;</span>, <span class="stringliteral">u&#39;~&#39;</span>:<span class="stringliteral">u&#39;¬†&#39;</span>, </div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;      }</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160; </div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;  quotes = {</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;      <span class="stringliteral">u&#39;ald&#39;</span>:<span class="stringliteral">u&#39;¬ª&#39;</span>, <span class="stringliteral">u&#39;als&#39;</span>:<span class="stringliteral">u&#39;‚Ä∫&#39;</span>, <span class="stringliteral">u&#39;ard&#39;</span>:<span class="stringliteral">u&#39;¬´&#39;</span>, <span class="stringliteral">u&#39;ars&#39;</span>:<span class="stringliteral">u&#39;‚Äπ&#39;</span>, <span class="stringliteral">u&#39;eld&#39;</span>:<span class="stringliteral">u&#39;&amp;ldquo;&#39;</span>, </div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;      <span class="stringliteral">u&#39;els&#39;</span>:<span class="stringliteral">u&#39;&amp;lsquo;&#39;</span>, <span class="stringliteral">u&#39;erd&#39;</span>:<span class="stringliteral">u&#39;&amp;rdquo;&#39;</span>, <span class="stringliteral">u&#39;ers&#39;</span>:<span class="stringliteral">u&#39;&amp;rsquo;&#39;</span>, <span class="stringliteral">u&#39;fld&#39;</span>:<span class="stringliteral">u&#39;¬´&#39;</span>, </div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;      <span class="stringliteral">u&#39;fls&#39;</span>:<span class="stringliteral">u&#39;‚Äπ&#39;</span>, <span class="stringliteral">u&#39;frd&#39;</span>:<span class="stringliteral">u&#39;¬ª&#39;</span>, <span class="stringliteral">u&#39;frs&#39;</span>:<span class="stringliteral">u&#39;‚Ä∫&#39;</span>, <span class="stringliteral">u&#39;gld&#39;</span>:<span class="stringliteral">u&#39;‚Äû&#39;</span>, <span class="stringliteral">u&#39;gls&#39;</span>:<span class="stringliteral">u&#39;‚Äö&#39;</span>, </div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;      <span class="stringliteral">u&#39;grd&#39;</span>:<span class="stringliteral">u&#39;‚Äú&#39;</span>, <span class="stringliteral">u&#39;grs&#39;</span>:<span class="stringliteral">u&#39;‚Äò&#39;</span>, <span class="stringliteral">u&#39;pld&#39;</span>:<span class="stringliteral">u&#39;‚Äû&#39;</span>, <span class="stringliteral">u&#39;pls&#39;</span>:<span class="stringliteral">u&#39;‚Äö&#39;</span>, <span class="stringliteral">u&#39;prd&#39;</span>:<span class="stringliteral">u&#39;‚Äù&#39;</span>, </div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;      <span class="stringliteral">u&#39;prs&#39;</span>:<span class="stringliteral">u&#39;‚Äô&#39;</span>, <span class="stringliteral">u&#39;sld&#39;</span>:<span class="stringliteral">u&#39;‚Äù&#39;</span>, <span class="stringliteral">u&#39;srd&#39;</span>:<span class="stringliteral">u&#39;‚Äù&#39;</span>, </div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;      }</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160; </div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;  referenceformats = {</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;      <span class="stringliteral">u&#39;eqref&#39;</span>:<span class="stringliteral">u&#39;(@‚Üï)&#39;</span>, <span class="stringliteral">u&#39;formatted&#39;</span>:<span class="stringliteral">u&#39;¬∂‚Üï&#39;</span>, <span class="stringliteral">u&#39;nameref&#39;</span>:<span class="stringliteral">u&#39;$‚Üï&#39;</span>, <span class="stringliteral">u&#39;pageref&#39;</span>:<span class="stringliteral">u&#39;#‚Üï&#39;</span>, </div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;      <span class="stringliteral">u&#39;ref&#39;</span>:<span class="stringliteral">u&#39;@‚Üï&#39;</span>, <span class="stringliteral">u&#39;vpageref&#39;</span>:<span class="stringliteral">u&#39;on-page#‚Üï&#39;</span>, <span class="stringliteral">u&#39;vref&#39;</span>:<span class="stringliteral">u&#39;@on-page#‚Üï&#39;</span>, </div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;      }</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160; </div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;  size = {</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;      <span class="stringliteral">u&#39;ignoredtexts&#39;</span>:[<span class="stringliteral">u&#39;col&#39;</span>,<span class="stringliteral">u&#39;text&#39;</span>,<span class="stringliteral">u&#39;line&#39;</span>,<span class="stringliteral">u&#39;page&#39;</span>,<span class="stringliteral">u&#39;theight&#39;</span>,<span class="stringliteral">u&#39;pheight&#39;</span>,], </div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;      }</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160; </div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;  vspaces = {</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;      <span class="stringliteral">u&#39;bigskip&#39;</span>:<span class="stringliteral">u&#39;&lt;div class=&quot;bigskip&quot;&gt; &lt;/div&gt;&#39;</span>, </div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;      <span class="stringliteral">u&#39;defskip&#39;</span>:<span class="stringliteral">u&#39;&lt;div class=&quot;defskip&quot;&gt; &lt;/div&gt;&#39;</span>, </div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;      <span class="stringliteral">u&#39;medskip&#39;</span>:<span class="stringliteral">u&#39;&lt;div class=&quot;medskip&quot;&gt; &lt;/div&gt;&#39;</span>, </div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;      <span class="stringliteral">u&#39;smallskip&#39;</span>:<span class="stringliteral">u&#39;&lt;div class=&quot;smallskip&quot;&gt; &lt;/div&gt;&#39;</span>, </div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;      <span class="stringliteral">u&#39;vfill&#39;</span>:<span class="stringliteral">u&#39;&lt;div class=&quot;vfill&quot;&gt; &lt;/div&gt;&#39;</span>, </div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;      }</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160; </div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="keyword">class </span>TOCConfig(object):</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160; </div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;  extractplain = {</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;      </div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;      <span class="stringliteral">u&#39;allowed&#39;</span>:[<span class="stringliteral">u&#39;StringContainer&#39;</span>,<span class="stringliteral">u&#39;Constant&#39;</span>,<span class="stringliteral">u&#39;TaggedText&#39;</span>,<span class="stringliteral">u&#39;Align&#39;</span>,<span class="stringliteral">u&#39;TextFamily&#39;</span>,<span class="stringliteral">u&#39;EmphaticText&#39;</span>,<span class="stringliteral">u&#39;VersalitasText&#39;</span>,<span class="stringliteral">u&#39;BarredText&#39;</span>,<span class="stringliteral">u&#39;SizeText&#39;</span>,<span class="stringliteral">u&#39;ColorText&#39;</span>,<span class="stringliteral">u&#39;LangLine&#39;</span>,<span class="stringliteral">u&#39;Formula&#39;</span>,], </div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;      <span class="stringliteral">u&#39;cloned&#39;</span>:[<span class="stringliteral">u&#39;&#39;</span>,], <span class="stringliteral">u&#39;extracted&#39;</span>:[<span class="stringliteral">u&#39;&#39;</span>,], </div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;      }</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160; </div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;  extracttitle = {</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;      <span class="stringliteral">u&#39;allowed&#39;</span>:[<span class="stringliteral">u&#39;StringContainer&#39;</span>,<span class="stringliteral">u&#39;Constant&#39;</span>,<span class="stringliteral">u&#39;Space&#39;</span>,], </div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;      <span class="stringliteral">u&#39;cloned&#39;</span>:[<span class="stringliteral">u&#39;TextFamily&#39;</span>,<span class="stringliteral">u&#39;EmphaticText&#39;</span>,<span class="stringliteral">u&#39;VersalitasText&#39;</span>,<span class="stringliteral">u&#39;BarredText&#39;</span>,<span class="stringliteral">u&#39;SizeText&#39;</span>,<span class="stringliteral">u&#39;ColorText&#39;</span>,<span class="stringliteral">u&#39;LangLine&#39;</span>,<span class="stringliteral">u&#39;Formula&#39;</span>,], </div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;      <span class="stringliteral">u&#39;extracted&#39;</span>:[<span class="stringliteral">u&#39;PlainLayout&#39;</span>,<span class="stringliteral">u&#39;TaggedText&#39;</span>,<span class="stringliteral">u&#39;Align&#39;</span>,<span class="stringliteral">u&#39;Caption&#39;</span>,<span class="stringliteral">u&#39;StandardLayout&#39;</span>,<span class="stringliteral">u&#39;FlexInset&#39;</span>,], </div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;      }</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160; </div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="keyword">class </span>TagConfig(object):</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160; </div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;  barred = {</div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;      <span class="stringliteral">u&#39;under&#39;</span>:<span class="stringliteral">u&#39;u&#39;</span>, </div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;      }</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160; </div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;  family = {</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;      <span class="stringliteral">u&#39;sans&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;sans&quot;&#39;</span>, <span class="stringliteral">u&#39;typewriter&#39;</span>:<span class="stringliteral">u&#39;tt&#39;</span>, </div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;      }</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160; </div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;  flex = {</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;      <span class="stringliteral">u&#39;CharStyle:Code&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;code&quot;&#39;</span>, </div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;      <span class="stringliteral">u&#39;CharStyle:MenuItem&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;menuitem&quot;&#39;</span>, </div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;      <span class="stringliteral">u&#39;Code&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;code&quot;&#39;</span>, <span class="stringliteral">u&#39;MenuItem&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;menuitem&quot;&#39;</span>, </div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;      <span class="stringliteral">u&#39;Noun&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;noun&quot;&#39;</span>, <span class="stringliteral">u&#39;Strong&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;strong&quot;&#39;</span>, </div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;      }</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160; </div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;  group = {</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;      <span class="stringliteral">u&#39;layouts&#39;</span>:[<span class="stringliteral">u&#39;Quotation&#39;</span>,<span class="stringliteral">u&#39;Quote&#39;</span>,], </div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;      }</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160; </div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;  layouts = {</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;      <span class="stringliteral">u&#39;Center&#39;</span>:<span class="stringliteral">u&#39;div&#39;</span>, <span class="stringliteral">u&#39;Chapter&#39;</span>:<span class="stringliteral">u&#39;h?&#39;</span>, <span class="stringliteral">u&#39;Date&#39;</span>:<span class="stringliteral">u&#39;h2&#39;</span>, <span class="stringliteral">u&#39;Paragraph&#39;</span>:<span class="stringliteral">u&#39;div&#39;</span>, </div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;      <span class="stringliteral">u&#39;Part&#39;</span>:<span class="stringliteral">u&#39;h1&#39;</span>, <span class="stringliteral">u&#39;Quotation&#39;</span>:<span class="stringliteral">u&#39;blockquote&#39;</span>, <span class="stringliteral">u&#39;Quote&#39;</span>:<span class="stringliteral">u&#39;blockquote&#39;</span>, </div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;      <span class="stringliteral">u&#39;Section&#39;</span>:<span class="stringliteral">u&#39;h?&#39;</span>, <span class="stringliteral">u&#39;Subsection&#39;</span>:<span class="stringliteral">u&#39;h?&#39;</span>, <span class="stringliteral">u&#39;Subsubsection&#39;</span>:<span class="stringliteral">u&#39;h?&#39;</span>, </div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;      }</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160; </div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;  listitems = {</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;      <span class="stringliteral">u&#39;Enumerate&#39;</span>:<span class="stringliteral">u&#39;ol&#39;</span>, <span class="stringliteral">u&#39;Itemize&#39;</span>:<span class="stringliteral">u&#39;ul&#39;</span>, </div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;      }</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160; </div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;  notes = {</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;      <span class="stringliteral">u&#39;Comment&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, <span class="stringliteral">u&#39;Greyedout&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;greyedout&quot;&#39;</span>, <span class="stringliteral">u&#39;Note&#39;</span>:<span class="stringliteral">u&#39;&#39;</span>, </div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;      }</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160; </div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;  script = {</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;      <span class="stringliteral">u&#39;subscript&#39;</span>:<span class="stringliteral">u&#39;sub&#39;</span>, <span class="stringliteral">u&#39;superscript&#39;</span>:<span class="stringliteral">u&#39;sup&#39;</span>, </div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;      }</div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160; </div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;  shaped = {</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;      <span class="stringliteral">u&#39;italic&#39;</span>:<span class="stringliteral">u&#39;i&#39;</span>, <span class="stringliteral">u&#39;slanted&#39;</span>:<span class="stringliteral">u&#39;i&#39;</span>, <span class="stringliteral">u&#39;smallcaps&#39;</span>:<span class="stringliteral">u&#39;span class=&quot;versalitas&quot;&#39;</span>, </div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;      }</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160; </div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="keyword">class </span>TranslationConfig(object):</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;  <span class="stringliteral">&quot;Configuration class from elyxer.config file&quot;</span></div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160; </div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;  constants = {</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;      <span class="stringliteral">u&#39;Appendix&#39;</span>:<span class="stringliteral">u&#39;Appendix&#39;</span>, <span class="stringliteral">u&#39;Book&#39;</span>:<span class="stringliteral">u&#39;Book&#39;</span>, <span class="stringliteral">u&#39;Chapter&#39;</span>:<span class="stringliteral">u&#39;Chapter&#39;</span>, </div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;      <span class="stringliteral">u&#39;Paragraph&#39;</span>:<span class="stringliteral">u&#39;Paragraph&#39;</span>, <span class="stringliteral">u&#39;Part&#39;</span>:<span class="stringliteral">u&#39;Part&#39;</span>, <span class="stringliteral">u&#39;Section&#39;</span>:<span class="stringliteral">u&#39;Section&#39;</span>, </div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;      <span class="stringliteral">u&#39;Subsection&#39;</span>:<span class="stringliteral">u&#39;Subsection&#39;</span>, <span class="stringliteral">u&#39;Subsubsection&#39;</span>:<span class="stringliteral">u&#39;Subsubsection&#39;</span>, </div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;      <span class="stringliteral">u&#39;abstract&#39;</span>:<span class="stringliteral">u&#39;Abstract&#39;</span>, <span class="stringliteral">u&#39;bibliography&#39;</span>:<span class="stringliteral">u&#39;Bibliography&#39;</span>, </div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;      <span class="stringliteral">u&#39;figure&#39;</span>:<span class="stringliteral">u&#39;figure&#39;</span>, <span class="stringliteral">u&#39;float-algorithm&#39;</span>:<span class="stringliteral">u&#39;Algorithm &#39;</span>, </div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;      <span class="stringliteral">u&#39;float-figure&#39;</span>:<span class="stringliteral">u&#39;Figure &#39;</span>, <span class="stringliteral">u&#39;float-listing&#39;</span>:<span class="stringliteral">u&#39;Listing &#39;</span>, </div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;      <span class="stringliteral">u&#39;float-table&#39;</span>:<span class="stringliteral">u&#39;Table &#39;</span>, <span class="stringliteral">u&#39;float-tableau&#39;</span>:<span class="stringliteral">u&#39;Tableau &#39;</span>, </div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;      <span class="stringliteral">u&#39;footnotes&#39;</span>:<span class="stringliteral">u&#39;Footnotes&#39;</span>, <span class="stringliteral">u&#39;generated-by&#39;</span>:<span class="stringliteral">u&#39;Document generated by &#39;</span>, </div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;      <span class="stringliteral">u&#39;generated-on&#39;</span>:<span class="stringliteral">u&#39; on &#39;</span>, <span class="stringliteral">u&#39;index&#39;</span>:<span class="stringliteral">u&#39;Index&#39;</span>, </div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;      <span class="stringliteral">u&#39;jsmath-enable&#39;</span>:<span class="stringliteral">u&#39;Please enable JavaScript on your browser.&#39;</span>, </div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;      <span class="stringliteral">u&#39;jsmath-requires&#39;</span>:<span class="stringliteral">u&#39; requires JavaScript to correctly process the mathematics on this page. &#39;</span>, </div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;      <span class="stringliteral">u&#39;jsmath-warning&#39;</span>:<span class="stringliteral">u&#39;Warning: &#39;</span>, <span class="stringliteral">u&#39;list-algorithm&#39;</span>:<span class="stringliteral">u&#39;List of Algorithms&#39;</span>, </div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;      <span class="stringliteral">u&#39;list-figure&#39;</span>:<span class="stringliteral">u&#39;List of Figures&#39;</span>, <span class="stringliteral">u&#39;list-table&#39;</span>:<span class="stringliteral">u&#39;List of Tables&#39;</span>, </div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;      <span class="stringliteral">u&#39;list-tableau&#39;</span>:<span class="stringliteral">u&#39;List of Tableaux&#39;</span>, <span class="stringliteral">u&#39;main-page&#39;</span>:<span class="stringliteral">u&#39;Main page&#39;</span>, </div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;      <span class="stringliteral">u&#39;next&#39;</span>:<span class="stringliteral">u&#39;Next&#39;</span>, <span class="stringliteral">u&#39;nomenclature&#39;</span>:<span class="stringliteral">u&#39;Nomenclature&#39;</span>, </div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;      <span class="stringliteral">u&#39;on-page&#39;</span>:<span class="stringliteral">u&#39; on page &#39;</span>, <span class="stringliteral">u&#39;prev&#39;</span>:<span class="stringliteral">u&#39;Prev&#39;</span>, <span class="stringliteral">u&#39;references&#39;</span>:<span class="stringliteral">u&#39;References&#39;</span>, </div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;      <span class="stringliteral">u&#39;toc&#39;</span>:<span class="stringliteral">u&#39;Table of Contents&#39;</span>, <span class="stringliteral">u&#39;toc-for&#39;</span>:<span class="stringliteral">u&#39;Contents for &#39;</span>, <span class="stringliteral">u&#39;up&#39;</span>:<span class="stringliteral">u&#39;Up&#39;</span>, </div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;      }</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160; </div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;  languages = {</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;      <span class="stringliteral">u&#39;american&#39;</span>:<span class="stringliteral">u&#39;en&#39;</span>, <span class="stringliteral">u&#39;british&#39;</span>:<span class="stringliteral">u&#39;en&#39;</span>, <span class="stringliteral">u&#39;deutsch&#39;</span>:<span class="stringliteral">u&#39;de&#39;</span>, <span class="stringliteral">u&#39;dutch&#39;</span>:<span class="stringliteral">u&#39;nl&#39;</span>, </div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;      <span class="stringliteral">u&#39;english&#39;</span>:<span class="stringliteral">u&#39;en&#39;</span>, <span class="stringliteral">u&#39;french&#39;</span>:<span class="stringliteral">u&#39;fr&#39;</span>, <span class="stringliteral">u&#39;ngerman&#39;</span>:<span class="stringliteral">u&#39;de&#39;</span>, <span class="stringliteral">u&#39;russian&#39;</span>:<span class="stringliteral">u&#39;ru&#39;</span>, </div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;      <span class="stringliteral">u&#39;spanish&#39;</span>:<span class="stringliteral">u&#39;es&#39;</span>, </div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;      }</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160; </div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160; </div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160; </div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160; </div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160; </div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160; </div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;<span class="keyword">class </span>CommandLineParser(object):</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;  <span class="stringliteral">&quot;A parser for runtime options&quot;</span></div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160; </div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;  <span class="keyword">def </span>__init__(self, options):</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;    self.options = options</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160; </div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;  <span class="keyword">def </span>parseoptions(self, args):</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;    <span class="stringliteral">&quot;Parse command line options&quot;</span></div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;    <span class="keywordflow">if</span> len(args) == 0:</div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <span class="keywordflow">while</span> len(args) &gt; 0 <span class="keywordflow">and</span> args[0].startswith(<span class="stringliteral">&#39;--&#39;</span>):</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;      key, value = self.readoption(args)</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> key:</div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&#39;Option &#39;</span> + value + <span class="stringliteral">&#39; not recognized&#39;</span></div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> value:</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&#39;Option &#39;</span> + key + <span class="stringliteral">&#39; needs a value&#39;</span></div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;      setattr(self.options, key, value)</div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160; </div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;  <span class="keyword">def </span>readoption(self, args):</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    <span class="stringliteral">&quot;Read the key and value for an option&quot;</span></div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    arg = args[0][2:]</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;    del args[0]</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;    <span class="keywordflow">if</span> <span class="stringliteral">&#39;=&#39;</span> <span class="keywordflow">in</span> arg:</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;      key = self.readequalskey(arg, args)</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;      key = arg.replace(<span class="stringliteral">&#39;-&#39;</span>, <span class="stringliteral">&#39;&#39;</span>)</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> hasattr(self.options, key):</div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span>, key</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    current = getattr(self.options, key)</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    <span class="keywordflow">if</span> isinstance(current, bool):</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;      <span class="keywordflow">return</span> key, <span class="keyword">True</span></div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;    <span class="comment"># read value</span></div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;    <span class="keywordflow">if</span> len(args) == 0:</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;      <span class="keywordflow">return</span> key, <span class="keywordtype">None</span></div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;    <span class="keywordflow">if</span> args[0].startswith(<span class="stringliteral">&#39;&quot;&#39;</span>):</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;      initial = args[0]</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;      del args[0]</div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;      <span class="keywordflow">return</span> key, self.readquoted(args, initial)</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;    value = args[0].decode(<span class="stringliteral">&#39;utf-8&#39;</span>)</div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    del args[0]</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    <span class="keywordflow">if</span> isinstance(current, list):</div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;      current.append(value)</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;      <span class="keywordflow">return</span> key, current</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    <span class="keywordflow">return</span> key, value</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160; </div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;  <span class="keyword">def </span>readquoted(self, args, initial):</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    <span class="stringliteral">&quot;Read a value between quotes&quot;</span></div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;    Trace.error(<span class="stringliteral">&#39;Oops&#39;</span>)</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;    value = initial[1:]</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;    <span class="keywordflow">while</span> len(args) &gt; 0 <span class="keywordflow">and</span> <span class="keywordflow">not</span> args[0].endswith(<span class="stringliteral">&#39;&quot;&#39;</span>) <span class="keywordflow">and</span> <span class="keywordflow">not</span> args[0].startswith(<span class="stringliteral">&#39;--&#39;</span>):</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;      Trace.error(<span class="stringliteral">&#39;Appending &#39;</span> + args[0])</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;      value += <span class="stringliteral">&#39; &#39;</span> + args[0]</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;      del args[0]</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;    <span class="keywordflow">if</span> len(args) == 0 <span class="keywordflow">or</span> args[0].startswith(<span class="stringliteral">&#39;--&#39;</span>):</div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;    value += <span class="stringliteral">&#39; &#39;</span> + args[0:-1]</div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;    <span class="keywordflow">return</span> value</div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160; </div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;  <span class="keyword">def </span>readequalskey(self, arg, args):</div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;    <span class="stringliteral">&quot;Read a key using equals&quot;</span></div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    split = arg.split(<span class="stringliteral">&#39;=&#39;</span>, 1)</div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;    key = split[0]</div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;    value = split[1]</div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;    args.insert(0, value)</div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;    <span class="keywordflow">return</span> key</div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160; </div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160; </div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160; </div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;<span class="keyword">class </span>Options(object):</div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;  <span class="stringliteral">&quot;A set of runtime options&quot;</span></div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160; </div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;  instance = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160; </div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;  location = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;  nocopy = <span class="keyword">False</span></div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;  copyright = <span class="keyword">False</span></div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;  debug = <span class="keyword">False</span></div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;  quiet = <span class="keyword">False</span></div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;  version = <span class="keyword">False</span></div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;  hardversion = <span class="keyword">False</span></div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;  versiondate = <span class="keyword">False</span></div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;  html = <span class="keyword">False</span></div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;  help = <span class="keyword">False</span></div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;  showlines = <span class="keyword">True</span></div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;  unicode = <span class="keyword">False</span></div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;  iso885915 = <span class="keyword">False</span></div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;  css = []</div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;  title = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;  directory = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;  destdirectory = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;  toc = <span class="keyword">False</span></div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;  toctarget = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;  tocfor = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;  forceformat = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;  lyxformat = <span class="keyword">False</span></div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;  target = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;  splitpart = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;  memory = <span class="keyword">True</span></div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;  lowmem = <span class="keyword">False</span></div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;  nobib = <span class="keyword">False</span></div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;  converter = <span class="stringliteral">&#39;imagemagick&#39;</span></div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;  raw = <span class="keyword">False</span></div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;  jsmath = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;  mathjax = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;  nofooter = <span class="keyword">False</span></div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;  simplemath = <span class="keyword">False</span></div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;  template = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;  noconvert = <span class="keyword">False</span></div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;  notoclabels = <span class="keyword">False</span></div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;  letterfoot = <span class="keyword">True</span></div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;  numberfoot = <span class="keyword">False</span></div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;  symbolfoot = <span class="keyword">False</span></div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;  hoverfoot = <span class="keyword">True</span></div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;  marginfoot = <span class="keyword">False</span></div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;  endfoot = <span class="keyword">False</span></div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;  supfoot = <span class="keyword">True</span></div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;  alignfoot = <span class="keyword">False</span></div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;  footnotes = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;  imageformat = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;  copyimages = <span class="keyword">False</span></div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;  googlecharts = <span class="keyword">False</span></div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;  embedcss = []</div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160; </div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;  branches = dict()</div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160; </div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;  <span class="keyword">def </span>parseoptions(self, args):</div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;    <span class="stringliteral">&quot;Parse command line options&quot;</span></div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;    Options.location = args[0]</div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;    del args[0]</div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;    parser = CommandLineParser(Options)</div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;    result = parser.parseoptions(args)</div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;    <span class="keywordflow">if</span> result:</div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;      Trace.error(result)</div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;      self.usage()</div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;    self.processoptions()</div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160; </div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;  <span class="keyword">def </span>processoptions(self):</div>
<div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;    <span class="stringliteral">&quot;Process all options parsed.&quot;</span></div>
<div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    <span class="keywordflow">if</span> Options.help:</div>
<div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;      self.usage()</div>
<div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;    <span class="keywordflow">if</span> Options.version:</div>
<div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;      self.showversion()</div>
<div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;    <span class="keywordflow">if</span> Options.hardversion:</div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;      self.showhardversion()</div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    <span class="keywordflow">if</span> Options.versiondate:</div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;      self.showversiondate()</div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;    <span class="keywordflow">if</span> Options.lyxformat:</div>
<div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;      self.showlyxformat()</div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    <span class="keywordflow">if</span> Options.splitpart:</div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;      <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;        Options.splitpart = int(Options.splitpart)</div>
<div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;        <span class="keywordflow">if</span> Options.splitpart &lt;= 0:</div>
<div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;          Trace.error(<span class="stringliteral">&#39;--splitpart requires a number bigger than zero&#39;</span>)</div>
<div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;          self.usage()</div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;      <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;        Trace.error(<span class="stringliteral">&#39;--splitpart needs a numeric argument, not &#39;</span> + Options.splitpart)</div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;        self.usage()</div>
<div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;    <span class="keywordflow">if</span> Options.lowmem <span class="keywordflow">or</span> Options.toc <span class="keywordflow">or</span> Options.tocfor:</div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;      Options.memory = <span class="keyword">False</span></div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;    self.parsefootnotes()</div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;    <span class="keywordflow">if</span> Options.forceformat <span class="keywordflow">and</span> <span class="keywordflow">not</span> Options.imageformat:</div>
<div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;      Options.imageformat = Options.forceformat</div>
<div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;    <span class="keywordflow">if</span> Options.imageformat == <span class="stringliteral">&#39;copy&#39;</span>:</div>
<div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;      Options.copyimages = <span class="keyword">True</span></div>
<div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;    <span class="keywordflow">if</span> Options.css == []:</div>
<div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;      Options.css = [<span class="stringliteral">&#39;http://elyxer.nongnu.org/lyx.css&#39;</span>]</div>
<div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;    <span class="keywordflow">if</span> Options.html:</div>
<div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;      Options.simplemath = <span class="keyword">True</span></div>
<div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;    <span class="keywordflow">if</span> Options.toc <span class="keywordflow">and</span> <span class="keywordflow">not</span> Options.tocfor:</div>
<div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;      Trace.error(<span class="stringliteral">&#39;Option --toc is deprecated; use --tocfor &quot;page&quot; instead&#39;</span>)</div>
<div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;      Options.tocfor = Options.toctarget</div>
<div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;    <span class="keywordflow">if</span> Options.nocopy:</div>
<div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;      Trace.error(<span class="stringliteral">&#39;Option --nocopy is deprecated; it is no longer needed&#39;</span>)</div>
<div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;    <span class="keywordflow">if</span> Options.jsmath:</div>
<div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;      Trace.error(<span class="stringliteral">&#39;Option --jsmath is deprecated; use --mathjax instead&#39;</span>)</div>
<div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;    <span class="comment"># set in Trace if necessary</span></div>
<div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;    <span class="keywordflow">for</span> param <span class="keywordflow">in</span> dir(Trace):</div>
<div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;      <span class="keywordflow">if</span> param.endswith(<span class="stringliteral">&#39;mode&#39;</span>):</div>
<div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;        setattr(Trace, param, getattr(self, param[:-4]))</div>
<div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160; </div>
<div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;  <span class="keyword">def </span>usage(self):</div>
<div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;    <span class="stringliteral">&quot;Show correct usage&quot;</span></div>
<div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;    Trace.error(<span class="stringliteral">&#39;Usage: &#39;</span> + os.path.basename(Options.location) + <span class="stringliteral">&#39; [options] [filein] [fileout]&#39;</span>)</div>
<div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;    Trace.error(<span class="stringliteral">&#39;Convert LyX input file &quot;filein&quot; to HTML file &quot;fileout&quot;.&#39;</span>)</div>
<div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    Trace.error(<span class="stringliteral">&#39;If filein (or fileout) is not given use standard input (or output).&#39;</span>)</div>
<div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;    Trace.error(<span class="stringliteral">&#39;Main program of the eLyXer package (http://elyxer.nongnu.org/).&#39;</span>)</div>
<div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;    self.showoptions()</div>
<div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160; </div>
<div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;  <span class="keyword">def </span>parsefootnotes(self):</div>
<div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;    <span class="stringliteral">&quot;Parse footnotes options.&quot;</span></div>
<div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> Options.footnotes:</div>
<div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;    Options.marginfoot = <span class="keyword">False</span></div>
<div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;    Options.letterfoot = <span class="keyword">False</span></div>
<div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;    Options.hoverfoot = <span class="keyword">False</span></div>
<div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;    options = Options.footnotes.split(<span class="stringliteral">&#39;,&#39;</span>)</div>
<div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;    <span class="keywordflow">for</span> option <span class="keywordflow">in</span> options:</div>
<div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;      footoption = option + <span class="stringliteral">&#39;foot&#39;</span></div>
<div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;      <span class="keywordflow">if</span> hasattr(Options, footoption):</div>
<div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;        setattr(Options, footoption, <span class="keyword">True</span>)</div>
<div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;        Trace.error(<span class="stringliteral">&#39;Unknown footnotes option: &#39;</span> + option)</div>
<div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> Options.endfoot <span class="keywordflow">and</span> <span class="keywordflow">not</span> Options.marginfoot <span class="keywordflow">and</span> <span class="keywordflow">not</span> Options.hoverfoot:</div>
<div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;      Options.hoverfoot = <span class="keyword">True</span></div>
<div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> Options.numberfoot <span class="keywordflow">and</span> <span class="keywordflow">not</span> Options.symbolfoot:</div>
<div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;      Options.letterfoot = <span class="keyword">True</span></div>
<div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160; </div>
<div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;  <span class="keyword">def </span>showoptions(self):</div>
<div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    <span class="stringliteral">&quot;Show all possible options&quot;</span></div>
<div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    Trace.error(<span class="stringliteral">&#39;  Common options:&#39;</span>)</div>
<div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --help:                 show this online help&#39;</span>)</div>
<div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --quiet:                disables all runtime messages&#39;</span>)</div>
<div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;    Trace.error(<span class="stringliteral">&#39;&#39;</span>)</div>
<div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;    Trace.error(<span class="stringliteral">&#39;  Advanced options:&#39;</span>)</div>
<div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --debug:                enable debugging messages (for developers)&#39;</span>)</div>
<div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --version:              show version number and release date&#39;</span>)</div>
<div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --lyxformat:            return the highest LyX version supported&#39;</span>)</div>
<div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;    Trace.error(<span class="stringliteral">&#39;  Options for HTML output:&#39;</span>)</div>
<div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --title &quot;title&quot;:        set the generated page title&#39;</span>)</div>
<div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --css &quot;file.css&quot;:       use a custom CSS file&#39;</span>)</div>
<div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --embedcss &quot;file.css&quot;:  embed styles from a CSS file into the output&#39;</span>)</div>
<div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --html:                 output HTML 4.0 instead of the default XHTML&#39;</span>)</div>
<div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --unicode:              full Unicode output&#39;</span>)</div>
<div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --iso885915:            output a document with ISO-8859-15 encoding&#39;</span>)</div>
<div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --nofooter:             remove the footer &quot;generated by eLyXer&quot;&#39;</span>)</div>
<div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --simplemath:           do not generate fancy math constructions&#39;</span>)</div>
<div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;    Trace.error(<span class="stringliteral">&#39;  Options for image output:&#39;</span>)</div>
<div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --directory &quot;img_dir&quot;:  look for images in the specified directory&#39;</span>)</div>
<div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --destdirectory &quot;dest&quot;: put converted images into this directory&#39;</span>)</div>
<div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --imageformat &quot;.ext&quot;:   image output format, or &quot;copy&quot; to copy images&#39;</span>)</div>
<div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --noconvert:            do not convert images, use in original locations&#39;</span>)</div>
<div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --converter &quot;inkscape&quot;: use an alternative program to convert images&#39;</span>)</div>
<div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    Trace.error(<span class="stringliteral">&#39;  Options for footnote display:&#39;</span>)</div>
<div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --numberfoot:           mark footnotes with numbers instead of letters&#39;</span>)</div>
<div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --symbolfoot:           mark footnotes with symbols (*, **...)&#39;</span>)</div>
<div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --hoverfoot:            show footnotes as hovering text (default)&#39;</span>)</div>
<div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --marginfoot:           show footnotes on the page margin&#39;</span>)</div>
<div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --endfoot:              show footnotes at the end of the page&#39;</span>)</div>
<div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --supfoot:              use superscript for footnote markers (default)&#39;</span>)</div>
<div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --alignfoot:            use aligned text for footnote markers&#39;</span>)</div>
<div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --footnotes &quot;options&quot;:  specify several comma-separated footnotes options&#39;</span>)</div>
<div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;    Trace.error(<span class="stringliteral">&#39;      Available options are: &quot;number&quot;, &quot;symbol&quot;, &quot;hover&quot;, &quot;margin&quot;, &quot;end&quot;,&#39;</span>)</div>
<div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;    Trace.error(<span class="stringliteral">&#39;        &quot;sup&quot;, &quot;align&quot;&#39;</span>)</div>
<div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;    Trace.error(<span class="stringliteral">&#39;  Advanced output options:&#39;</span>)</div>
<div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --splitpart &quot;depth&quot;:    split the resulting webpage at the given depth&#39;</span>)</div>
<div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --tocfor &quot;page&quot;:        generate a TOC that points to the given page&#39;</span>)</div>
<div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --target &quot;frame&quot;:       make all links point to the given frame&#39;</span>)</div>
<div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --notoclabels:          omit the part labels in the TOC, such as Chapter&#39;</span>)</div>
<div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --lowmem:               do the conversion on the fly (conserve memory)&#39;</span>)</div>
<div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --raw:                  generate HTML without header or footer.&#39;</span>)</div>
<div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --mathjax remote:       use MathJax remotely to display equations&#39;</span>)</div>
<div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --mathjax &quot;URL&quot;:        use MathJax from the given URL to display equations&#39;</span>)</div>
<div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --googlecharts:         use Google Charts to generate formula images&#39;</span>)</div>
<div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --template &quot;file&quot;:      use a template, put everything in &lt;!--$content--&gt;&#39;</span>)</div>
<div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --copyright:            add a copyright notice at the bottom&#39;</span>)</div>
<div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;    Trace.error(<span class="stringliteral">&#39;  Deprecated options:&#39;</span>)</div>
<div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --toc:                  (deprecated) create a table of contents&#39;</span>)</div>
<div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --toctarget &quot;page&quot;:     (deprecated) generate a TOC for the given page&#39;</span>)</div>
<div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --nocopy:               (deprecated) maintained for backwards compatibility&#39;</span>)</div>
<div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;    Trace.error(<span class="stringliteral">&#39;    --jsmath &quot;URL&quot;:         use jsMath from the given URL to display equations&#39;</span>)</div>
<div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;    sys.exit()</div>
<div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160; </div>
<div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;  <span class="keyword">def </span>showversion(self):</div>
<div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;    <span class="stringliteral">&quot;Return the current eLyXer version string&quot;</span></div>
<div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;    string = <span class="stringliteral">&#39;eLyXer version &#39;</span> + GeneralConfig.version[<span class="stringliteral">&#39;number&#39;</span>]</div>
<div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;    string += <span class="stringliteral">&#39; (&#39;</span> + GeneralConfig.version[<span class="stringliteral">&#39;date&#39;</span>] + <span class="stringliteral">&#39;)&#39;</span></div>
<div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;    Trace.error(string)</div>
<div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    sys.exit()</div>
<div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160; </div>
<div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;  <span class="keyword">def </span>showhardversion(self):</div>
<div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;    <span class="stringliteral">&quot;Return just the version string&quot;</span></div>
<div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;    Trace.message(GeneralConfig.version[<span class="stringliteral">&#39;number&#39;</span>])</div>
<div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;    sys.exit()</div>
<div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160; </div>
<div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;  <span class="keyword">def </span>showversiondate(self):</div>
<div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;    <span class="stringliteral">&quot;Return just the version dte&quot;</span></div>
<div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;    Trace.message(GeneralConfig.version[<span class="stringliteral">&#39;date&#39;</span>])</div>
<div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;    sys.exit()</div>
<div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160; </div>
<div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;  <span class="keyword">def </span>showlyxformat(self):</div>
<div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;    <span class="stringliteral">&quot;Return just the lyxformat parameter&quot;</span></div>
<div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    Trace.message(GeneralConfig.version[<span class="stringliteral">&#39;lyxformat&#39;</span>])</div>
<div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;    sys.exit()</div>
<div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160; </div>
<div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;<span class="keyword">class </span>BranchOptions(object):</div>
<div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;  <span class="stringliteral">&quot;A set of options for a branch&quot;</span></div>
<div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160; </div>
<div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;  <span class="keyword">def </span>__init__(self, name):</div>
<div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;    self.name = name</div>
<div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;    self.options = {<span class="stringliteral">&#39;color&#39;</span>:<span class="stringliteral">&#39;#ffffff&#39;</span>}</div>
<div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160; </div>
<div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;  <span class="keyword">def </span>set(self, key, value):</div>
<div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;    <span class="stringliteral">&quot;Set a branch option&quot;</span></div>
<div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> key.startswith(ContainerConfig.string[<span class="stringliteral">&#39;startcommand&#39;</span>]):</div>
<div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;      Trace.error(<span class="stringliteral">&#39;Invalid branch option &#39;</span> + key)</div>
<div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;    key = key.replace(ContainerConfig.string[<span class="stringliteral">&#39;startcommand&#39;</span>], <span class="stringliteral">&#39;&#39;</span>)</div>
<div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;    self.options[key] = value</div>
<div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160; </div>
<div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;  <span class="keyword">def </span>isselected(self):</div>
<div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;    <span class="stringliteral">&quot;Return if the branch is selected&quot;</span></div>
<div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> <span class="stringliteral">&#39;selected&#39;</span> <span class="keywordflow">in</span> self.options:</div>
<div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;    <span class="keywordflow">return</span> self.options[<span class="stringliteral">&#39;selected&#39;</span>] == <span class="stringliteral">&#39;1&#39;</span></div>
<div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160; </div>
<div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;    <span class="stringliteral">&quot;String representation&quot;</span></div>
<div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;options for &#39;</span> + self.name + <span class="stringliteral">&#39;: &#39;</span> + unicode(self.options)</div>
<div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160; </div>
<div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160; </div>
<div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160; </div>
<div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160; </div>
<div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;<span class="keyword">import</span> urllib</div>
<div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160; </div>
<div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160; </div>
<div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160; </div>
<div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160; </div>
<div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160; </div>
<div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160; </div>
<div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160; </div>
<div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160; </div>
<div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;<span class="keyword">class </span>Cloner(object):</div>
<div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;  <span class="stringliteral">&quot;An object used to clone other objects.&quot;</span></div>
<div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160; </div>
<div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;  <span class="keyword">def </span>clone(cls, original):</div>
<div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;    <span class="stringliteral">&quot;Return an exact copy of an object.&quot;</span></div>
<div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;    <span class="stringliteral">&quot;The original object must have an empty constructor.&quot;</span></div>
<div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;    <span class="keywordflow">return</span> cls.create(original.__class__)</div>
<div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160; </div>
<div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;  <span class="keyword">def </span>create(cls, type):</div>
<div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;    <span class="stringliteral">&quot;Create an object of a given class.&quot;</span></div>
<div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;    clone = type.__new__(type)</div>
<div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;    clone.__init__()</div>
<div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;    <span class="keywordflow">return</span> clone</div>
<div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160; </div>
<div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;  clone = classmethod(clone)</div>
<div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;  create = classmethod(create)</div>
<div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160; </div>
<div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;<span class="keyword">class </span>ContainerExtractor(object):</div>
<div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;  <span class="stringliteral">&quot;A class to extract certain containers.&quot;</span></div>
<div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160; </div>
<div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;  <span class="keyword">def </span>__init__(self, config):</div>
<div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;    <span class="stringliteral">&quot;The config parameter is a map containing three lists: allowed, copied and extracted.&quot;</span></div>
<div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;    <span class="stringliteral">&quot;Each of the three is a list of class names for containers.&quot;</span></div>
<div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;    <span class="stringliteral">&quot;Allowed containers are included as is into the result.&quot;</span></div>
<div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;    <span class="stringliteral">&quot;Cloned containers are cloned and placed into the result.&quot;</span></div>
<div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;    <span class="stringliteral">&quot;Extracted containers are looked into.&quot;</span></div>
<div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;    <span class="stringliteral">&quot;All other containers are silently ignored.&quot;</span></div>
<div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;    self.allowed = config[<span class="stringliteral">&#39;allowed&#39;</span>]</div>
<div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;    self.cloned = config[<span class="stringliteral">&#39;cloned&#39;</span>]</div>
<div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;    self.extracted = config[<span class="stringliteral">&#39;extracted&#39;</span>]</div>
<div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160; </div>
<div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;  <span class="keyword">def </span>extract(self, container):</div>
<div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;    <span class="stringliteral">&quot;Extract a group of selected containers from elyxer.a container.&quot;</span></div>
<div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;    list = []</div>
<div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;    locate = <span class="keyword">lambda</span> c: c.__class__.__name__ <span class="keywordflow">in</span> self.allowed + self.cloned</div>
<div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;    recursive = <span class="keyword">lambda</span> c: c.__class__.__name__ <span class="keywordflow">in</span> self.extracted</div>
<div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;    process = <span class="keyword">lambda</span> c: self.process(c, list)</div>
<div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;    container.recursivesearch(locate, recursive, process)</div>
<div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;    <span class="keywordflow">return</span> list</div>
<div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160; </div>
<div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;  <span class="keyword">def </span>process(self, container, list):</div>
<div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;    <span class="stringliteral">&quot;Add allowed containers, clone cloned containers and add the clone.&quot;</span></div>
<div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;    name = container.__class__.__name__</div>
<div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;    <span class="keywordflow">if</span> name <span class="keywordflow">in</span> self.allowed:</div>
<div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;      list.append(container)</div>
<div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;    <span class="keywordflow">elif</span> name <span class="keywordflow">in</span> self.cloned:</div>
<div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;      list.append(self.safeclone(container))</div>
<div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unknown container class &#39;</span> + name)</div>
<div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160; </div>
<div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;  <span class="keyword">def </span>safeclone(self, container):</div>
<div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;    <span class="stringliteral">&quot;Return a new container with contents only in a safe list, recursively.&quot;</span></div>
<div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;    clone = Cloner.clone(container)</div>
<div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;    clone.output = container.output</div>
<div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;    clone.contents = self.extract(container)</div>
<div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;    <span class="keywordflow">return</span> clone</div>
<div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160; </div>
<div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160; </div>
<div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160; </div>
<div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160; </div>
<div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160; </div>
<div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160; </div>
<div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;<span class="keyword">class </span>Parser(object):</div>
<div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;  <span class="stringliteral">&quot;A generic parser&quot;</span></div>
<div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160; </div>
<div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;    self.begin = 0</div>
<div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;    self.parameters = dict()</div>
<div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160; </div>
<div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;  <span class="keyword">def </span>parseheader(self, reader):</div>
<div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;    <span class="stringliteral">&quot;Parse the header&quot;</span></div>
<div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;    header = reader.currentline().split()</div>
<div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;    self.begin = reader.linenumber</div>
<div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;    <span class="keywordflow">return</span> header</div>
<div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160; </div>
<div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;  <span class="keyword">def </span>parseparameter(self, reader):</div>
<div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;    <span class="stringliteral">&quot;Parse a parameter&quot;</span></div>
<div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;    <span class="keywordflow">if</span> reader.currentline().strip().startswith(<span class="stringliteral">&#39;&lt;&#39;</span>):</div>
<div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;      key, value = self.parsexml(reader)</div>
<div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;      self.parameters[key] = value</div>
<div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;    split = reader.currentline().strip().split(<span class="stringliteral">&#39; &#39;</span>, 1)</div>
<div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;    <span class="keywordflow">if</span> len(split) == 0:</div>
<div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;    key = split[0]</div>
<div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;    <span class="keywordflow">if</span> len(split) == 1:</div>
<div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;      self.parameters[key] = <span class="keyword">True</span></div>
<div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> <span class="stringliteral">&#39;&quot;&#39;</span> <span class="keywordflow">in</span> split[1]:</div>
<div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;      self.parameters[key] = split[1].strip()</div>
<div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;    doublesplit = split[1].split(<span class="stringliteral">&#39;&quot;&#39;</span>)</div>
<div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;    self.parameters[key] = doublesplit[1]</div>
<div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160; </div>
<div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;  <span class="keyword">def </span>parsexml(self, reader):</div>
<div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;    <span class="stringliteral">&quot;Parse a parameter in xml form: &lt;param attr1=value...&gt;&quot;</span></div>
<div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;    strip = reader.currentline().strip()</div>
<div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> strip.endswith(<span class="stringliteral">&#39;&gt;&#39;</span>):</div>
<div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;      Trace.error(<span class="stringliteral">&#39;XML parameter &#39;</span> + strip + <span class="stringliteral">&#39; should be &lt;...&gt;&#39;</span>)</div>
<div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;    split = strip[1:-1].split()</div>
<div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;    <span class="keywordflow">if</span> len(split) == 0:</div>
<div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;      Trace.error(<span class="stringliteral">&#39;Empty XML parameter &lt;&gt;&#39;</span>)</div>
<div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span>, <span class="keywordtype">None</span></div>
<div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;    key = split[0]</div>
<div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;    del split[0]</div>
<div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;    <span class="keywordflow">if</span> len(split) == 0:</div>
<div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;      <span class="keywordflow">return</span> key, dict()</div>
<div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;    attrs = dict()</div>
<div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;    <span class="keywordflow">for</span> attr <span class="keywordflow">in</span> split:</div>
<div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> <span class="stringliteral">&#39;=&#39;</span> <span class="keywordflow">in</span> attr:</div>
<div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;        Trace.error(<span class="stringliteral">&#39;Erroneous attribute for &#39;</span> + key + <span class="stringliteral">&#39;: &#39;</span> + attr)</div>
<div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;        attr += <span class="stringliteral">&#39;=&quot;0&quot;&#39;</span></div>
<div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;      parts = attr.split(<span class="stringliteral">&#39;=&#39;</span>)</div>
<div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;      attrkey = parts[0]</div>
<div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;      value = parts[1].split(<span class="stringliteral">&#39;&quot;&#39;</span>)[1]</div>
<div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;      attrs[attrkey] = value</div>
<div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;    <span class="keywordflow">return</span> key, attrs</div>
<div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160; </div>
<div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;  <span class="keyword">def </span>parseending(self, reader, process):</div>
<div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;    <span class="stringliteral">&quot;Parse until the current ending is found&quot;</span></div>
<div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.ending:</div>
<div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;      Trace.error(<span class="stringliteral">&#39;No ending for &#39;</span> + unicode(self))</div>
<div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> reader.currentline().startswith(self.ending):</div>
<div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;      process()</div>
<div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160; </div>
<div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;  <span class="keyword">def </span>parsecontainer(self, reader, contents):</div>
<div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;    container = self.factory.createcontainer(reader)</div>
<div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;    <span class="keywordflow">if</span> container:</div>
<div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;      container.parent = self.parent</div>
<div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;      contents.append(container)</div>
<div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160; </div>
<div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;    <span class="stringliteral">&quot;Return a description&quot;</span></div>
<div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;    <span class="keywordflow">return</span> self.__class__.__name__ + <span class="stringliteral">&#39; (&#39;</span> + unicode(self.begin) + <span class="stringliteral">&#39;)&#39;</span></div>
<div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160; </div>
<div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;<span class="keyword">class </span>LoneCommand(Parser):</div>
<div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;  <span class="stringliteral">&quot;A parser for just one command line&quot;</span></div>
<div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160; </div>
<div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;  <span class="keyword">def </span>parse(self,reader):</div>
<div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;    <span class="stringliteral">&quot;Read nothing&quot;</span></div>
<div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;    <span class="keywordflow">return</span> []</div>
<div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160; </div>
<div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;<span class="keyword">class </span>TextParser(Parser):</div>
<div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;  <span class="stringliteral">&quot;A parser for a command and a bit of text&quot;</span></div>
<div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160; </div>
<div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;  stack = []</div>
<div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160; </div>
<div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;  <span class="keyword">def </span>__init__(self, container):</div>
<div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;    Parser.__init__(self)</div>
<div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;    self.ending = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;    <span class="keywordflow">if</span> container.__class__.__name__ <span class="keywordflow">in</span> ContainerConfig.endings:</div>
<div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;      self.ending = ContainerConfig.endings[container.__class__.__name__]</div>
<div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;    self.endings = []</div>
<div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160; </div>
<div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;  <span class="keyword">def </span>parse(self, reader):</div>
<div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;    <span class="stringliteral">&quot;Parse lines as long as they are text&quot;</span></div>
<div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;    TextParser.stack.append(self.ending)</div>
<div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;    self.endings = TextParser.stack + [ContainerConfig.endings[<span class="stringliteral">&#39;Layout&#39;</span>],</div>
<div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;        ContainerConfig.endings[<span class="stringliteral">&#39;Inset&#39;</span>], self.ending]</div>
<div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;    contents = []</div>
<div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> self.isending(reader):</div>
<div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;      self.parsecontainer(reader, contents)</div>
<div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;    <span class="keywordflow">return</span> contents</div>
<div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160; </div>
<div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;  <span class="keyword">def </span>isending(self, reader):</div>
<div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;    <span class="stringliteral">&quot;Check if text is ending&quot;</span></div>
<div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;    current = reader.currentline().split()</div>
<div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;    <span class="keywordflow">if</span> len(current) == 0:</div>
<div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;    <span class="keywordflow">if</span> current[0] <span class="keywordflow">in</span> self.endings:</div>
<div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;      <span class="keywordflow">if</span> current[0] <span class="keywordflow">in</span> TextParser.stack:</div>
<div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;        TextParser.stack.remove(current[0])</div>
<div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;        TextParser.stack = []</div>
<div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160; </div>
<div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;<span class="keyword">class </span>ExcludingParser(Parser):</div>
<div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;  <span class="stringliteral">&quot;A parser that excludes the final line&quot;</span></div>
<div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160; </div>
<div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;  <span class="keyword">def </span>parse(self, reader):</div>
<div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;    <span class="stringliteral">&quot;Parse everything up to (and excluding) the final line&quot;</span></div>
<div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;    contents = []</div>
<div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;    self.parseending(reader, <span class="keyword">lambda</span>: self.parsecontainer(reader, contents))</div>
<div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;    <span class="keywordflow">return</span> contents</div>
<div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160; </div>
<div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;<span class="keyword">class </span>BoundedParser(ExcludingParser):</div>
<div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;  <span class="stringliteral">&quot;A parser bound by a final line&quot;</span></div>
<div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160; </div>
<div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;  <span class="keyword">def </span>parse(self, reader):</div>
<div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;    <span class="stringliteral">&quot;Parse everything, including the final line&quot;</span></div>
<div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;    contents = ExcludingParser.parse(self, reader)</div>
<div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;    <span class="comment"># skip last line</span></div>
<div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;    <span class="keywordflow">return</span> contents</div>
<div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160; </div>
<div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;<span class="keyword">class </span>BoundedDummy(Parser):</div>
<div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;  <span class="stringliteral">&quot;A bound parser that ignores everything&quot;</span></div>
<div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160; </div>
<div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;  <span class="keyword">def </span>parse(self, reader):</div>
<div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;    <span class="stringliteral">&quot;Parse the contents of the container&quot;</span></div>
<div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;    self.parseending(reader, <span class="keyword">lambda</span>: reader.nextline())</div>
<div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;    <span class="comment"># skip last line</span></div>
<div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;    <span class="keywordflow">return</span> []</div>
<div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160; </div>
<div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;<span class="keyword">class </span>StringParser(Parser):</div>
<div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;  <span class="stringliteral">&quot;Parses just a string&quot;</span></div>
<div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160; </div>
<div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;  <span class="keyword">def </span>parseheader(self, reader):</div>
<div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;    <span class="stringliteral">&quot;Do nothing, just take note&quot;</span></div>
<div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;    self.begin = reader.linenumber + 1</div>
<div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;    <span class="keywordflow">return</span> []</div>
<div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160; </div>
<div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;  <span class="keyword">def </span>parse(self, reader):</div>
<div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;    <span class="stringliteral">&quot;Parse a single line&quot;</span></div>
<div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;    contents = reader.currentline()</div>
<div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;    <span class="keywordflow">return</span> contents</div>
<div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160; </div>
<div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;<span class="keyword">class </span>InsetParser(BoundedParser):</div>
<div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;  <span class="stringliteral">&quot;Parses a LyX inset&quot;</span></div>
<div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160; </div>
<div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;  <span class="keyword">def </span>parse(self, reader):</div>
<div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;    <span class="stringliteral">&quot;Parse inset parameters into a dictionary&quot;</span></div>
<div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;    startcommand = ContainerConfig.string[<span class="stringliteral">&#39;startcommand&#39;</span>]</div>
<div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;    <span class="keywordflow">while</span> reader.currentline() != <span class="stringliteral">&#39;&#39;</span> <span class="keywordflow">and</span> <span class="keywordflow">not</span> reader.currentline().startswith(startcommand):</div>
<div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;      self.parseparameter(reader)</div>
<div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;    <span class="keywordflow">return</span> BoundedParser.parse(self, reader)</div>
<div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160; </div>
<div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160; </div>
<div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160; </div>
<div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160; </div>
<div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160; </div>
<div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160; </div>
<div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;<span class="keyword">class </span>ContainerOutput(object):</div>
<div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;  <span class="stringliteral">&quot;The generic HTML output for a container.&quot;</span></div>
<div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160; </div>
<div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;  <span class="keyword">def </span>gethtml(self, container):</div>
<div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;    <span class="stringliteral">&quot;Show an error.&quot;</span></div>
<div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;    Trace.error(<span class="stringliteral">&#39;gethtml() not implemented for &#39;</span> + unicode(self))</div>
<div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160; </div>
<div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;  <span class="keyword">def </span>isempty(self):</div>
<div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;    <span class="stringliteral">&quot;Decide if the output is empty: by default, not empty.&quot;</span></div>
<div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160; </div>
<div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;<span class="keyword">class </span>EmptyOutput(ContainerOutput):</div>
<div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160; </div>
<div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;  <span class="keyword">def </span>gethtml(self, container):</div>
<div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;    <span class="stringliteral">&quot;Return empty HTML code.&quot;</span></div>
<div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;    <span class="keywordflow">return</span> []</div>
<div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160; </div>
<div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;  <span class="keyword">def </span>isempty(self):</div>
<div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;    <span class="stringliteral">&quot;This output is particularly empty.&quot;</span></div>
<div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160; </div>
<div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;<span class="keyword">class </span>FixedOutput(ContainerOutput):</div>
<div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;  <span class="stringliteral">&quot;Fixed output&quot;</span></div>
<div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160; </div>
<div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;  <span class="keyword">def </span>gethtml(self, container):</div>
<div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;    <span class="stringliteral">&quot;Return constant HTML code&quot;</span></div>
<div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;    <span class="keywordflow">return</span> container.html</div>
<div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160; </div>
<div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;<span class="keyword">class </span>ContentsOutput(ContainerOutput):</div>
<div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;  <span class="stringliteral">&quot;Outputs the contents converted to HTML&quot;</span></div>
<div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160; </div>
<div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;  <span class="keyword">def </span>gethtml(self, container):</div>
<div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;    <span class="stringliteral">&quot;Return the HTML code&quot;</span></div>
<div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;    html = []</div>
<div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;    <span class="keywordflow">if</span> container.contents == <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;      <span class="keywordflow">return</span> html</div>
<div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;    <span class="keywordflow">for</span> element <span class="keywordflow">in</span> container.contents:</div>
<div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> hasattr(element, <span class="stringliteral">&#39;gethtml&#39;</span>):</div>
<div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;        Trace.error(<span class="stringliteral">&#39;No html in &#39;</span> + element.__class__.__name__ + <span class="stringliteral">&#39;: &#39;</span> + unicode(element))</div>
<div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;        <span class="keywordflow">return</span> html</div>
<div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;      html += element.gethtml()</div>
<div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;    <span class="keywordflow">return</span> html</div>
<div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160; </div>
<div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;<span class="keyword">class </span>TaggedOutput(ContentsOutput):</div>
<div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;  <span class="stringliteral">&quot;Outputs an HTML tag surrounding the contents.&quot;</span></div>
<div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160; </div>
<div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;  tag = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;  breaklines = <span class="keyword">False</span></div>
<div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;  empty = <span class="keyword">False</span></div>
<div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160; </div>
<div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;  <span class="keyword">def </span>settag(self, tag, breaklines=False, empty=False):</div>
<div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;    <span class="stringliteral">&quot;Set the value for the tag and other attributes.&quot;</span></div>
<div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;    self.tag = tag</div>
<div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;    <span class="keywordflow">if</span> breaklines:</div>
<div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;      self.breaklines = breaklines</div>
<div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;    <span class="keywordflow">if</span> empty:</div>
<div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;      self.empty = empty</div>
<div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160; </div>
<div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;  <span class="keyword">def </span>setbreaklines(self, breaklines):</div>
<div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;    <span class="stringliteral">&quot;Set the value for breaklines.&quot;</span></div>
<div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;    self.breaklines = breaklines</div>
<div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160; </div>
<div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;  <span class="keyword">def </span>gethtml(self, container):</div>
<div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;    <span class="stringliteral">&quot;Return the HTML code.&quot;</span></div>
<div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;    <span class="keywordflow">if</span> self.empty:</div>
<div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;      <span class="keywordflow">return</span> [self.selfclosing(container)]</div>
<div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;    html = [self.open(container)]</div>
<div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;    html += ContentsOutput.gethtml(self, container)</div>
<div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;    html.append(self.close(container))</div>
<div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;    <span class="keywordflow">return</span> html</div>
<div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160; </div>
<div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;  <span class="keyword">def </span>open(self, container):</div>
<div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;    <span class="stringliteral">&quot;Get opening line.&quot;</span></div>
<div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.checktag():</div>
<div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;    open = <span class="stringliteral">&#39;&lt;&#39;</span> + self.tag + <span class="stringliteral">&#39;&gt;&#39;</span></div>
<div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;    <span class="keywordflow">if</span> self.breaklines:</div>
<div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;      <span class="keywordflow">return</span> open + <span class="stringliteral">&#39;\n&#39;</span></div>
<div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;    <span class="keywordflow">return</span> open</div>
<div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160; </div>
<div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;  <span class="keyword">def </span>close(self, container):</div>
<div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;    <span class="stringliteral">&quot;Get closing line.&quot;</span></div>
<div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.checktag():</div>
<div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;    close = <span class="stringliteral">&#39;&lt;/&#39;</span> + self.tag.split()[0] + <span class="stringliteral">&#39;&gt;&#39;</span></div>
<div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;    <span class="keywordflow">if</span> self.breaklines:</div>
<div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;\n&#39;</span> + close + <span class="stringliteral">&#39;\n&#39;</span></div>
<div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;    <span class="keywordflow">return</span> close</div>
<div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160; </div>
<div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;  <span class="keyword">def </span>selfclosing(self, container):</div>
<div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;    <span class="stringliteral">&quot;Get self-closing line.&quot;</span></div>
<div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.checktag():</div>
<div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;    selfclosing = <span class="stringliteral">&#39;&lt;&#39;</span> + self.tag + <span class="stringliteral">&#39;/&gt;&#39;</span></div>
<div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;    <span class="keywordflow">if</span> self.breaklines:</div>
<div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;      <span class="keywordflow">return</span> selfclosing + <span class="stringliteral">&#39;\n&#39;</span></div>
<div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;    <span class="keywordflow">return</span> selfclosing</div>
<div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160; </div>
<div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;  <span class="keyword">def </span>checktag(self):</div>
<div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;    <span class="stringliteral">&quot;Check that the tag is valid.&quot;</span></div>
<div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.tag:</div>
<div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;      Trace.error(<span class="stringliteral">&#39;No tag in &#39;</span> + unicode(container))</div>
<div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;    <span class="keywordflow">if</span> self.tag == <span class="stringliteral">&#39;&#39;</span>:</div>
<div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160; </div>
<div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;<span class="keyword">class </span>FilteredOutput(ContentsOutput):</div>
<div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;  <span class="stringliteral">&quot;Returns the output in the contents, but filtered:&quot;</span></div>
<div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;  <span class="stringliteral">&quot;some strings are replaced by others.&quot;</span></div>
<div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160; </div>
<div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;    <span class="stringliteral">&quot;Initialize the filters.&quot;</span></div>
<div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;    self.filters = []</div>
<div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160; </div>
<div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;  <span class="keyword">def </span>addfilter(self, original, replacement):</div>
<div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;    <span class="stringliteral">&quot;Add a new filter: replace the original by the replacement.&quot;</span></div>
<div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;    self.filters.append((original, replacement))</div>
<div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160; </div>
<div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;  <span class="keyword">def </span>gethtml(self, container):</div>
<div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;    <span class="stringliteral">&quot;Return the HTML code&quot;</span></div>
<div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;    result = []</div>
<div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;    html = ContentsOutput.gethtml(self, container)</div>
<div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;    <span class="keywordflow">for</span> line <span class="keywordflow">in</span> html:</div>
<div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;      result.append(self.filter(line))</div>
<div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160; </div>
<div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;  <span class="keyword">def </span>filter(self, line):</div>
<div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;    <span class="stringliteral">&quot;Filter a single line with all available filters.&quot;</span></div>
<div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;    <span class="keywordflow">for</span> original, replacement <span class="keywordflow">in</span> self.filters:</div>
<div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;      <span class="keywordflow">if</span> original <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;        line = line.replace(original, replacement)</div>
<div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;    <span class="keywordflow">return</span> line</div>
<div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160; </div>
<div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;<span class="keyword">class </span>StringOutput(ContainerOutput):</div>
<div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;  <span class="stringliteral">&quot;Returns a bare string as output&quot;</span></div>
<div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160; </div>
<div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;  <span class="keyword">def </span>gethtml(self, container):</div>
<div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;    <span class="stringliteral">&quot;Return a bare string&quot;</span></div>
<div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;    <span class="keywordflow">return</span> [container.string]</div>
<div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160; </div>
<div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160; </div>
<div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160; </div>
<div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160; </div>
<div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160; </div>
<div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160; </div>
<div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160; </div>
<div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;<span class="keyword">import</span> sys</div>
<div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;<span class="keyword">import</span> codecs</div>
<div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160; </div>
<div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160; </div>
<div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;<span class="keyword">class </span>LineReader(object):</div>
<div class="line"><a name="l01708"></a><span class="lineno"> 1708</span>&#160;  <span class="stringliteral">&quot;Reads a file line by line&quot;</span></div>
<div class="line"><a name="l01709"></a><span class="lineno"> 1709</span>&#160; </div>
<div class="line"><a name="l01710"></a><span class="lineno"> 1710</span>&#160;  <span class="keyword">def </span>__init__(self, filename):</div>
<div class="line"><a name="l01711"></a><span class="lineno"> 1711</span>&#160;    <span class="keywordflow">if</span> isinstance(filename, file):</div>
<div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;      self.file = filename</div>
<div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;      self.file = codecs.open(filename, <span class="stringliteral">&#39;rU&#39;</span>, <span class="stringliteral">&#39;utf-8&#39;</span>)</div>
<div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;    self.linenumber = 1</div>
<div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;    self.lastline = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;    self.current = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;    self.mustread = <span class="keyword">True</span></div>
<div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;    self.depleted = <span class="keyword">False</span></div>
<div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;    <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;      self.readline()</div>
<div class="line"><a name="l01722"></a><span class="lineno"> 1722</span>&#160;    <span class="keywordflow">except</span> UnicodeDecodeError:</div>
<div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;      <span class="comment"># try compressed file</span></div>
<div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;      <span class="keyword">import</span> gzip</div>
<div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;      self.file = gzip.open(filename, <span class="stringliteral">&#39;rb&#39;</span>)</div>
<div class="line"><a name="l01726"></a><span class="lineno"> 1726</span>&#160;      self.readline()</div>
<div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160; </div>
<div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;  <span class="keyword">def </span>setstart(self, firstline):</div>
<div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;    <span class="stringliteral">&quot;Set the first line to read.&quot;</span></div>
<div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;    <span class="keywordflow">for</span> i <span class="keywordflow">in</span> range(firstline):</div>
<div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;      self.file.readline()</div>
<div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;    self.linenumber = firstline</div>
<div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160; </div>
<div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;  <span class="keyword">def </span>setend(self, lastline):</div>
<div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;    <span class="stringliteral">&quot;Set the last line to read.&quot;</span></div>
<div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;    self.lastline = lastline</div>
<div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160; </div>
<div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;  <span class="keyword">def </span>currentline(self):</div>
<div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;    <span class="stringliteral">&quot;Get the current line&quot;</span></div>
<div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;    <span class="keywordflow">if</span> self.mustread:</div>
<div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;      self.readline()</div>
<div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;    <span class="keywordflow">return</span> self.current</div>
<div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160; </div>
<div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;  <span class="keyword">def </span>nextline(self):</div>
<div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;    <span class="stringliteral">&quot;Go to next line&quot;</span></div>
<div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;    <span class="keywordflow">if</span> self.depleted:</div>
<div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;      Trace.fatal(<span class="stringliteral">&#39;Read beyond file end&#39;</span>)</div>
<div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;    self.mustread = <span class="keyword">True</span></div>
<div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160; </div>
<div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;  <span class="keyword">def </span>readline(self):</div>
<div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;    <span class="stringliteral">&quot;Read a line from elyxer.file&quot;</span></div>
<div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;    self.current = self.file.readline()</div>
<div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(self.file, codecs.StreamReaderWriter):</div>
<div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;      self.current = self.current.decode(<span class="stringliteral">&#39;utf-8&#39;</span>)</div>
<div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;    <span class="keywordflow">if</span> len(self.current) == 0:</div>
<div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;      self.depleted = <span class="keyword">True</span></div>
<div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;    self.current = self.current.rstrip(<span class="stringliteral">&#39;\n\r&#39;</span>)</div>
<div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;    self.linenumber += 1</div>
<div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;    self.mustread = <span class="keyword">False</span></div>
<div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;    Trace.prefix = <span class="stringliteral">&#39;Line &#39;</span> + unicode(self.linenumber) + <span class="stringliteral">&#39;: &#39;</span></div>
<div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;    <span class="keywordflow">if</span> self.linenumber % 1000 == 0:</div>
<div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;      Trace.message(<span class="stringliteral">&#39;Parsing&#39;</span>)</div>
<div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160; </div>
<div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160;  <span class="keyword">def </span>finished(self):</div>
<div class="line"><a name="l01765"></a><span class="lineno"> 1765</span>&#160;    <span class="stringliteral">&quot;Find out if the file is finished&quot;</span></div>
<div class="line"><a name="l01766"></a><span class="lineno"> 1766</span>&#160;    <span class="keywordflow">if</span> self.lastline <span class="keywordflow">and</span> self.linenumber == self.lastline:</div>
<div class="line"><a name="l01767"></a><span class="lineno"> 1767</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160;    <span class="keywordflow">if</span> self.mustread:</div>
<div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;      self.readline()</div>
<div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160;    <span class="keywordflow">return</span> self.depleted</div>
<div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160; </div>
<div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;  <span class="keyword">def </span>close(self):</div>
<div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;    self.file.close()</div>
<div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160; </div>
<div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;<span class="keyword">class </span>LineWriter(object):</div>
<div class="line"><a name="l01776"></a><span class="lineno"> 1776</span>&#160;  <span class="stringliteral">&quot;Writes a file as a series of lists&quot;</span></div>
<div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160; </div>
<div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;  file = <span class="keyword">False</span></div>
<div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160; </div>
<div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;  <span class="keyword">def </span>__init__(self, filename):</div>
<div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;    <span class="keywordflow">if</span> isinstance(filename, file):</div>
<div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;      self.file = filename</div>
<div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;      self.filename = <span class="keywordtype">None</span></div>
<div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;      self.filename = filename</div>
<div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160; </div>
<div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;  <span class="keyword">def </span>write(self, strings):</div>
<div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;    <span class="stringliteral">&quot;Write a list of strings&quot;</span></div>
<div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;    <span class="keywordflow">for</span> string <span class="keywordflow">in</span> strings:</div>
<div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(string, basestring):</div>
<div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;        Trace.error(<span class="stringliteral">&#39;Not a string: &#39;</span> + unicode(string) + <span class="stringliteral">&#39; in &#39;</span> + unicode(strings))</div>
<div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;        <span class="keywordflow">return</span></div>
<div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;      self.writestring(string)</div>
<div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160; </div>
<div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;  <span class="keyword">def </span>writestring(self, string):</div>
<div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;    <span class="stringliteral">&quot;Write a string&quot;</span></div>
<div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.file:</div>
<div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;      self.file = codecs.open(self.filename, <span class="stringliteral">&#39;w&#39;</span>, <span class="stringliteral">&quot;utf-8&quot;</span>)</div>
<div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;    <span class="keywordflow">if</span> self.file == sys.stdout <span class="keywordflow">and</span> sys.version_info &lt; (3,0):</div>
<div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;      string = string.encode(<span class="stringliteral">&#39;utf-8&#39;</span>)</div>
<div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;    self.file.write(string)</div>
<div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160; </div>
<div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;  <span class="keyword">def </span>writeline(self, line):</div>
<div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;    <span class="stringliteral">&quot;Write a line to file&quot;</span></div>
<div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;    self.writestring(line + <span class="stringliteral">&#39;\n&#39;</span>)</div>
<div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160; </div>
<div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;  <span class="keyword">def </span>close(self):</div>
<div class="line"><a name="l01808"></a><span class="lineno"> 1808</span>&#160;    self.file.close()</div>
<div class="line"><a name="l01809"></a><span class="lineno"> 1809</span>&#160; </div>
<div class="line"><a name="l01810"></a><span class="lineno"> 1810</span>&#160; </div>
<div class="line"><a name="l01811"></a><span class="lineno"> 1811</span>&#160; </div>
<div class="line"><a name="l01812"></a><span class="lineno"> 1812</span>&#160; </div>
<div class="line"><a name="l01813"></a><span class="lineno"> 1813</span>&#160; </div>
<div class="line"><a name="l01814"></a><span class="lineno"> 1814</span>&#160; </div>
<div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;<span class="keyword">class </span><a class="code" href="classmath2html_1_1Globable.xhtml">Globable</a>(object):</div>
<div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;  <span class="stringliteral">&quot;&quot;&quot;A bit of text which can be globbed (lumped together in bits).</span></div>
<div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;<span class="stringliteral">  Methods current(), skipcurrent(), checkfor() and isout() have to be</span></div>
<div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;<span class="stringliteral">  implemented by subclasses.&quot;&quot;&quot;</span></div>
<div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160; </div>
<div class="line"><a name="l01820"></a><span class="lineno"><a class="line" href="classmath2html_1_1Globable.xhtml"> 1820</a></span>&#160;  leavepending = <span class="keyword">False</span></div>
<div class="line"><a name="l01821"></a><span class="lineno"> 1821</span>&#160; </div>
<div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;    self.<a class="code" href="classmath2html_1_1Globable.xhtml#ad808cd48d7cc66f4744df784bcb2939c">endinglist</a> = EndingList()</div>
<div class="line"><a name="l01824"></a><span class="lineno"> 1824</span>&#160; </div>
<div class="line"><a name="l01825"></a><span class="lineno"> 1825</span>&#160;  <span class="keyword">def </span>checkbytemark(self):</div>
<div class="line"><a name="l01826"></a><span class="lineno"> 1826</span>&#160;    <span class="stringliteral">&quot;Check for a Unicode byte mark and skip it.&quot;</span></div>
<div class="line"><a name="l01827"></a><span class="lineno"> 1827</span>&#160;    <span class="keywordflow">if</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#a3b632d8950722cef7c91b6a91ed055f1">finished</a>():</div>
<div class="line"><a name="l01828"></a><span class="lineno"> 1828</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l01829"></a><span class="lineno"> 1829</span>&#160;    <span class="keywordflow">if</span> ord(self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>()) == 0xfeff:</div>
<div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;      self.<a class="code" href="classmath2html_1_1Globable.xhtml#a503223d30a41c308dc2a4631b0953466">skipcurrent</a>()</div>
<div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160; </div>
<div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;  <span class="keyword">def </span>isout(self):</div>
<div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;    <span class="stringliteral">&quot;Find out if we are out of the position yet.&quot;</span></div>
<div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unimplemented isout()&#39;</span>)</div>
<div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160; </div>
<div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;  <span class="keyword">def </span>current(self):</div>
<div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;    <span class="stringliteral">&quot;Return the current character.&quot;</span></div>
<div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unimplemented current()&#39;</span>)</div>
<div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160; </div>
<div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;  <span class="keyword">def </span>checkfor(self, string):</div>
<div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;    <span class="stringliteral">&quot;Check for the given string in the current position.&quot;</span></div>
<div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unimplemented checkfor()&#39;</span>)</div>
<div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160; </div>
<div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;  <span class="keyword">def </span>finished(self):</div>
<div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;    <span class="stringliteral">&quot;Find out if the current text has finished.&quot;</span></div>
<div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;    <span class="keywordflow">if</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#ad715cf94e7e1928560d5c23ee18f9aa6">isout</a>():</div>
<div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#a6a878f97ef0d8a62334eb871cd27a078">leavepending</a>:</div>
<div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;        self.<a class="code" href="classmath2html_1_1Globable.xhtml#ad808cd48d7cc66f4744df784bcb2939c">endinglist</a>.checkpending()</div>
<div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#ad808cd48d7cc66f4744df784bcb2939c">endinglist</a>.checkin(self)</div>
<div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160; </div>
<div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;  <span class="keyword">def </span>skipcurrent(self):</div>
<div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;    <span class="stringliteral">&quot;Return the current character and skip it.&quot;</span></div>
<div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unimplemented skipcurrent()&#39;</span>)</div>
<div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160; </div>
<div class="line"><a name="l01860"></a><span class="lineno"> 1860</span>&#160;  <span class="keyword">def </span>glob(self, currentcheck):</div>
<div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;    <span class="stringliteral">&quot;Glob a bit of text that satisfies a check on the current char.&quot;</span></div>
<div class="line"><a name="l01862"></a><span class="lineno"> 1862</span>&#160;    glob = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#a3b632d8950722cef7c91b6a91ed055f1">finished</a>() <span class="keywordflow">and</span> currentcheck():</div>
<div class="line"><a name="l01864"></a><span class="lineno"> 1864</span>&#160;      glob += self.<a class="code" href="classmath2html_1_1Globable.xhtml#a503223d30a41c308dc2a4631b0953466">skipcurrent</a>()</div>
<div class="line"><a name="l01865"></a><span class="lineno"> 1865</span>&#160;    <span class="keywordflow">return</span> glob</div>
<div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160; </div>
<div class="line"><a name="l01867"></a><span class="lineno"> 1867</span>&#160;  <span class="keyword">def </span>globalpha(self):</div>
<div class="line"><a name="l01868"></a><span class="lineno"> 1868</span>&#160;    <span class="stringliteral">&quot;Glob a bit of alpha text&quot;</span></div>
<div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#a0b78eca3d60b80b9f5f52aa10234788e">glob</a>(<span class="keyword">lambda</span>: self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>().isalpha())</div>
<div class="line"><a name="l01870"></a><span class="lineno"> 1870</span>&#160; </div>
<div class="line"><a name="l01871"></a><span class="lineno"> 1871</span>&#160;  <span class="keyword">def </span>globnumber(self):</div>
<div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;    <span class="stringliteral">&quot;Glob a row of digits.&quot;</span></div>
<div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#a0b78eca3d60b80b9f5f52aa10234788e">glob</a>(<span class="keyword">lambda</span>: self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>().isdigit())</div>
<div class="line"><a name="l01874"></a><span class="lineno"> 1874</span>&#160; </div>
<div class="line"><a name="l01875"></a><span class="lineno"> 1875</span>&#160;  <span class="keyword">def </span>isidentifier(self):</div>
<div class="line"><a name="l01876"></a><span class="lineno"> 1876</span>&#160;    <span class="stringliteral">&quot;Return if the current character is alphanumeric or _.&quot;</span></div>
<div class="line"><a name="l01877"></a><span class="lineno"> 1877</span>&#160;    <span class="keywordflow">if</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>().isalnum() <span class="keywordflow">or</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>() == <span class="stringliteral">&#39;_&#39;</span>:</div>
<div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l01879"></a><span class="lineno"> 1879</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160; </div>
<div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;  <span class="keyword">def </span>globidentifier(self):</div>
<div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;    <span class="stringliteral">&quot;Glob alphanumeric and _ symbols.&quot;</span></div>
<div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#a0b78eca3d60b80b9f5f52aa10234788e">glob</a>(self.<a class="code" href="classmath2html_1_1Globable.xhtml#abae047a6b20e9977001c5454fd541363">isidentifier</a>)</div>
<div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160; </div>
<div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;  <span class="keyword">def </span>isvalue(self):</div>
<div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;    <span class="stringliteral">&quot;Return if the current character is a value character:&quot;</span></div>
<div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;    <span class="stringliteral">&quot;not a bracket or a space.&quot;</span></div>
<div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;    <span class="keywordflow">if</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>().isspace():</div>
<div class="line"><a name="l01889"></a><span class="lineno"> 1889</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;    <span class="keywordflow">if</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>() <span class="keywordflow">in</span> <span class="stringliteral">&#39;{}()&#39;</span>:</div>
<div class="line"><a name="l01891"></a><span class="lineno"> 1891</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01892"></a><span class="lineno"> 1892</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160; </div>
<div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;  <span class="keyword">def </span>globvalue(self):</div>
<div class="line"><a name="l01895"></a><span class="lineno"> 1895</span>&#160;    <span class="stringliteral">&quot;Glob a value: any symbols but brackets.&quot;</span></div>
<div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#a0b78eca3d60b80b9f5f52aa10234788e">glob</a>(self.<a class="code" href="classmath2html_1_1Globable.xhtml#aa7260fdab67295dc66a65d5ce1ab0cd1">isvalue</a>)</div>
<div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160; </div>
<div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;  <span class="keyword">def </span>skipspace(self):</div>
<div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;    <span class="stringliteral">&quot;Skip all whitespace at current position.&quot;</span></div>
<div class="line"><a name="l01900"></a><span class="lineno"> 1900</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#a0b78eca3d60b80b9f5f52aa10234788e">glob</a>(<span class="keyword">lambda</span>: self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>().isspace())</div>
<div class="line"><a name="l01901"></a><span class="lineno"> 1901</span>&#160; </div>
<div class="line"><a name="l01902"></a><span class="lineno"> 1902</span>&#160;  <span class="keyword">def </span>globincluding(self, magicchar):</div>
<div class="line"><a name="l01903"></a><span class="lineno"> 1903</span>&#160;    <span class="stringliteral">&quot;Glob a bit of text up to (including) the magic char.&quot;</span></div>
<div class="line"><a name="l01904"></a><span class="lineno"> 1904</span>&#160;    glob = self.<a class="code" href="classmath2html_1_1Globable.xhtml#a0b78eca3d60b80b9f5f52aa10234788e">glob</a>(<span class="keyword">lambda</span>: self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>() != magicchar) + magicchar</div>
<div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;    self.skip(magicchar)</div>
<div class="line"><a name="l01906"></a><span class="lineno"> 1906</span>&#160;    <span class="keywordflow">return</span> glob</div>
<div class="line"><a name="l01907"></a><span class="lineno"> 1907</span>&#160; </div>
<div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;  <span class="keyword">def </span>globexcluding(self, excluded):</div>
<div class="line"><a name="l01909"></a><span class="lineno"> 1909</span>&#160;    <span class="stringliteral">&quot;Glob a bit of text up until (excluding) any excluded character.&quot;</span></div>
<div class="line"><a name="l01910"></a><span class="lineno"> 1910</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#a0b78eca3d60b80b9f5f52aa10234788e">glob</a>(<span class="keyword">lambda</span>: self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>() <span class="keywordflow">not</span> <span class="keywordflow">in</span> excluded)</div>
<div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160; </div>
<div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;  <span class="keyword">def </span>pushending(self, ending, optional = False):</div>
<div class="line"><a name="l01913"></a><span class="lineno"> 1913</span>&#160;    <span class="stringliteral">&quot;Push a new ending to the bottom&quot;</span></div>
<div class="line"><a name="l01914"></a><span class="lineno"> 1914</span>&#160;    self.<a class="code" href="classmath2html_1_1Globable.xhtml#ad808cd48d7cc66f4744df784bcb2939c">endinglist</a>.add(ending, optional)</div>
<div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160; </div>
<div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;  <span class="keyword">def </span>popending(self, expected = None):</div>
<div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;    <span class="stringliteral">&quot;Pop the ending found at the current position&quot;</span></div>
<div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;    <span class="keywordflow">if</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#ad715cf94e7e1928560d5c23ee18f9aa6">isout</a>() <span class="keywordflow">and</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#a6a878f97ef0d8a62334eb871cd27a078">leavepending</a>:</div>
<div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;      <span class="keywordflow">return</span> expected</div>
<div class="line"><a name="l01920"></a><span class="lineno"> 1920</span>&#160;    ending = self.<a class="code" href="classmath2html_1_1Globable.xhtml#ad808cd48d7cc66f4744df784bcb2939c">endinglist</a>.pop(self)</div>
<div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;    <span class="keywordflow">if</span> expected <span class="keywordflow">and</span> expected != ending:</div>
<div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;      Trace.error(<span class="stringliteral">&#39;Expected ending &#39;</span> + expected + <span class="stringliteral">&#39;, got &#39;</span> + ending)</div>
<div class="line"><a name="l01923"></a><span class="lineno"> 1923</span>&#160;    self.skip(ending)</div>
<div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;    <span class="keywordflow">return</span> ending</div>
<div class="line"><a name="l01925"></a><span class="lineno"> 1925</span>&#160; </div>
<div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;  <span class="keyword">def </span>nextending(self):</div>
<div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;    <span class="stringliteral">&quot;Return the next ending in the queue.&quot;</span></div>
<div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;    nextending = self.<a class="code" href="classmath2html_1_1Globable.xhtml#ad808cd48d7cc66f4744df784bcb2939c">endinglist</a>.findending(self)</div>
<div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> nextending:</div>
<div class="line"><a name="l01930"></a><span class="lineno"> 1930</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l01931"></a><span class="lineno"> 1931</span>&#160;    <span class="keywordflow">return</span> nextending.ending</div>
<div class="line"><a name="l01932"></a><span class="lineno"> 1932</span>&#160; </div>
<div class="line"><a name="l01933"></a><span class="lineno"> 1933</span>&#160;<span class="keyword">class </span>EndingList(object):</div>
<div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;  <span class="stringliteral">&quot;A list of position endings&quot;</span></div>
<div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160; </div>
<div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;    self.endings = []</div>
<div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160; </div>
<div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;  <span class="keyword">def </span>add(self, ending, optional = False):</div>
<div class="line"><a name="l01940"></a><span class="lineno"> 1940</span>&#160;    <span class="stringliteral">&quot;Add a new ending to the list&quot;</span></div>
<div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;    self.endings.append(PositionEnding(ending, optional))</div>
<div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160; </div>
<div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;  <span class="keyword">def </span>pickpending(self, pos):</div>
<div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;    <span class="stringliteral">&quot;Pick any pending endings from a parse position.&quot;</span></div>
<div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;    self.endings += pos.endinglist.endings</div>
<div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160; </div>
<div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;  <span class="keyword">def </span>checkin(self, pos):</div>
<div class="line"><a name="l01948"></a><span class="lineno"> 1948</span>&#160;    <span class="stringliteral">&quot;Search for an ending&quot;</span></div>
<div class="line"><a name="l01949"></a><span class="lineno"> 1949</span>&#160;    <span class="keywordflow">if</span> self.findending(pos):</div>
<div class="line"><a name="l01950"></a><span class="lineno"> 1950</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l01951"></a><span class="lineno"> 1951</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160; </div>
<div class="line"><a name="l01953"></a><span class="lineno"> 1953</span>&#160;  <span class="keyword">def </span>pop(self, pos):</div>
<div class="line"><a name="l01954"></a><span class="lineno"> 1954</span>&#160;    <span class="stringliteral">&quot;Remove the ending at the current position&quot;</span></div>
<div class="line"><a name="l01955"></a><span class="lineno"> 1955</span>&#160;    <span class="keywordflow">if</span> pos.isout():</div>
<div class="line"><a name="l01956"></a><span class="lineno"> 1956</span>&#160;      Trace.error(<span class="stringliteral">&#39;No ending out of bounds&#39;</span>)</div>
<div class="line"><a name="l01957"></a><span class="lineno"> 1957</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l01958"></a><span class="lineno"> 1958</span>&#160;    ending = self.findending(pos)</div>
<div class="line"><a name="l01959"></a><span class="lineno"> 1959</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> ending:</div>
<div class="line"><a name="l01960"></a><span class="lineno"> 1960</span>&#160;      Trace.error(<span class="stringliteral">&#39;No ending at &#39;</span> + pos.current())</div>
<div class="line"><a name="l01961"></a><span class="lineno"> 1961</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l01962"></a><span class="lineno"> 1962</span>&#160;    <span class="keywordflow">for</span> each <span class="keywordflow">in</span> reversed(self.endings):</div>
<div class="line"><a name="l01963"></a><span class="lineno"> 1963</span>&#160;      self.endings.remove(each)</div>
<div class="line"><a name="l01964"></a><span class="lineno"> 1964</span>&#160;      <span class="keywordflow">if</span> each == ending:</div>
<div class="line"><a name="l01965"></a><span class="lineno"> 1965</span>&#160;        <span class="keywordflow">return</span> each.ending</div>
<div class="line"><a name="l01966"></a><span class="lineno"> 1966</span>&#160;      <span class="keywordflow">elif</span> <span class="keywordflow">not</span> each.optional:</div>
<div class="line"><a name="l01967"></a><span class="lineno"> 1967</span>&#160;        Trace.error(<span class="stringliteral">&#39;Removed non-optional ending &#39;</span> + each)</div>
<div class="line"><a name="l01968"></a><span class="lineno"> 1968</span>&#160;    Trace.error(<span class="stringliteral">&#39;No endings left&#39;</span>)</div>
<div class="line"><a name="l01969"></a><span class="lineno"> 1969</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l01970"></a><span class="lineno"> 1970</span>&#160; </div>
<div class="line"><a name="l01971"></a><span class="lineno"> 1971</span>&#160;  <span class="keyword">def </span>findending(self, pos):</div>
<div class="line"><a name="l01972"></a><span class="lineno"> 1972</span>&#160;    <span class="stringliteral">&quot;Find the ending at the current position&quot;</span></div>
<div class="line"><a name="l01973"></a><span class="lineno"> 1973</span>&#160;    <span class="keywordflow">if</span> len(self.endings) == 0:</div>
<div class="line"><a name="l01974"></a><span class="lineno"> 1974</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l01975"></a><span class="lineno"> 1975</span>&#160;    <span class="keywordflow">for</span> index, ending <span class="keywordflow">in</span> enumerate(reversed(self.endings)):</div>
<div class="line"><a name="l01976"></a><span class="lineno"> 1976</span>&#160;      <span class="keywordflow">if</span> ending.checkin(pos):</div>
<div class="line"><a name="l01977"></a><span class="lineno"> 1977</span>&#160;        <span class="keywordflow">return</span> ending</div>
<div class="line"><a name="l01978"></a><span class="lineno"> 1978</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> ending.optional:</div>
<div class="line"><a name="l01979"></a><span class="lineno"> 1979</span>&#160;        <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l01980"></a><span class="lineno"> 1980</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l01981"></a><span class="lineno"> 1981</span>&#160; </div>
<div class="line"><a name="l01982"></a><span class="lineno"> 1982</span>&#160;  <span class="keyword">def </span>checkpending(self):</div>
<div class="line"><a name="l01983"></a><span class="lineno"> 1983</span>&#160;    <span class="stringliteral">&quot;Check if there are any pending endings&quot;</span></div>
<div class="line"><a name="l01984"></a><span class="lineno"> 1984</span>&#160;    <span class="keywordflow">if</span> len(self.endings) != 0:</div>
<div class="line"><a name="l01985"></a><span class="lineno"> 1985</span>&#160;      Trace.error(<span class="stringliteral">&#39;Pending &#39;</span> + unicode(self) + <span class="stringliteral">&#39; left open&#39;</span>)</div>
<div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160; </div>
<div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;    <span class="stringliteral">&quot;Printable representation&quot;</span></div>
<div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;    string = <span class="stringliteral">&#39;endings [&#39;</span></div>
<div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;    <span class="keywordflow">for</span> ending <span class="keywordflow">in</span> self.endings:</div>
<div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;      string += unicode(ending) + <span class="stringliteral">&#39;,&#39;</span></div>
<div class="line"><a name="l01992"></a><span class="lineno"> 1992</span>&#160;    <span class="keywordflow">if</span> len(self.endings) &gt; 0:</div>
<div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;      string = string[:-1]</div>
<div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;    <span class="keywordflow">return</span> string + <span class="stringliteral">&#39;]&#39;</span></div>
<div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160; </div>
<div class="line"><a name="l01996"></a><span class="lineno"> 1996</span>&#160;<span class="keyword">class </span>PositionEnding(object):</div>
<div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;  <span class="stringliteral">&quot;An ending for a parsing position&quot;</span></div>
<div class="line"><a name="l01998"></a><span class="lineno"> 1998</span>&#160; </div>
<div class="line"><a name="l01999"></a><span class="lineno"> 1999</span>&#160;  <span class="keyword">def </span>__init__(self, ending, optional):</div>
<div class="line"><a name="l02000"></a><span class="lineno"> 2000</span>&#160;    self.ending = ending</div>
<div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160;    self.optional = optional</div>
<div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160; </div>
<div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;  <span class="keyword">def </span>checkin(self, pos):</div>
<div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;    <span class="stringliteral">&quot;Check for the ending&quot;</span></div>
<div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;    <span class="keywordflow">return</span> pos.checkfor(self.ending)</div>
<div class="line"><a name="l02006"></a><span class="lineno"> 2006</span>&#160; </div>
<div class="line"><a name="l02007"></a><span class="lineno"> 2007</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l02008"></a><span class="lineno"> 2008</span>&#160;    <span class="stringliteral">&quot;Printable representation&quot;</span></div>
<div class="line"><a name="l02009"></a><span class="lineno"> 2009</span>&#160;    string = <span class="stringliteral">&#39;Ending &#39;</span> + self.ending</div>
<div class="line"><a name="l02010"></a><span class="lineno"> 2010</span>&#160;    <span class="keywordflow">if</span> self.optional:</div>
<div class="line"><a name="l02011"></a><span class="lineno"> 2011</span>&#160;      string += <span class="stringliteral">&#39; (optional)&#39;</span></div>
<div class="line"><a name="l02012"></a><span class="lineno"> 2012</span>&#160;    <span class="keywordflow">return</span> string</div>
<div class="line"><a name="l02013"></a><span class="lineno"> 2013</span>&#160; </div>
<div class="line"><a name="l02014"></a><span class="lineno"> 2014</span>&#160; </div>
<div class="line"><a name="l02015"></a><span class="lineno"> 2015</span>&#160; </div>
<div class="line"><a name="l02016"></a><span class="lineno"> 2016</span>&#160;<span class="keyword">class </span><a class="code" href="classmath2html_1_1Position.xhtml">Position</a>(<a class="code" href="classmath2html_1_1Globable.xhtml">Globable</a>):</div>
<div class="line"><a name="l02017"></a><span class="lineno"> 2017</span>&#160;  <span class="stringliteral">&quot;&quot;&quot;A position in a text to parse.</span></div>
<div class="line"><a name="l02018"></a><span class="lineno"> 2018</span>&#160;<span class="stringliteral">  Including those in Globable, functions to implement by subclasses are:</span></div>
<div class="line"><a name="l02019"></a><span class="lineno"> 2019</span>&#160;<span class="stringliteral">  skip(), identifier(), extract(), isout() and current().&quot;&quot;&quot;</span></div>
<div class="line"><a name="l02020"></a><span class="lineno"> 2020</span>&#160; </div>
<div class="line"><a name="l02021"></a><span class="lineno"> 2021</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l02022"></a><span class="lineno"><a class="line" href="classmath2html_1_1Position.xhtml"> 2022</a></span>&#160;    Globable.__init__(self)</div>
<div class="line"><a name="l02023"></a><span class="lineno"> 2023</span>&#160; </div>
<div class="line"><a name="l02024"></a><span class="lineno"> 2024</span>&#160;  <span class="keyword">def </span>skip(self, string):</div>
<div class="line"><a name="l02025"></a><span class="lineno"> 2025</span>&#160;    <span class="stringliteral">&quot;Skip a string&quot;</span></div>
<div class="line"><a name="l02026"></a><span class="lineno"> 2026</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unimplemented skip()&#39;</span>)</div>
<div class="line"><a name="l02027"></a><span class="lineno"> 2027</span>&#160; </div>
<div class="line"><a name="l02028"></a><span class="lineno"> 2028</span>&#160;  <span class="keyword">def </span>identifier(self):</div>
<div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;    <span class="stringliteral">&quot;Return an identifier for the current position.&quot;</span></div>
<div class="line"><a name="l02030"></a><span class="lineno"> 2030</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unimplemented identifier()&#39;</span>)</div>
<div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Error&#39;</span></div>
<div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160; </div>
<div class="line"><a name="l02033"></a><span class="lineno"> 2033</span>&#160;  <span class="keyword">def </span>extract(self, length):</div>
<div class="line"><a name="l02034"></a><span class="lineno"> 2034</span>&#160;    <span class="stringliteral">&quot;Extract the next string of the given length, or None if not enough text,&quot;</span></div>
<div class="line"><a name="l02035"></a><span class="lineno"> 2035</span>&#160;    <span class="stringliteral">&quot;without advancing the parse position.&quot;</span></div>
<div class="line"><a name="l02036"></a><span class="lineno"> 2036</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unimplemented extract()&#39;</span>)</div>
<div class="line"><a name="l02037"></a><span class="lineno"> 2037</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l02038"></a><span class="lineno"> 2038</span>&#160; </div>
<div class="line"><a name="l02039"></a><span class="lineno"> 2039</span>&#160;  <span class="keyword">def </span>checkfor(self, string):</div>
<div class="line"><a name="l02040"></a><span class="lineno"> 2040</span>&#160;    <span class="stringliteral">&quot;Check for a string at the given position.&quot;</span></div>
<div class="line"><a name="l02041"></a><span class="lineno"> 2041</span>&#160;    <span class="keywordflow">return</span> string == self.<a class="code" href="classmath2html_1_1Position.xhtml#ac9dddfc7375acdb7081f7a7286b8d04b">extract</a>(len(string))</div>
<div class="line"><a name="l02042"></a><span class="lineno"> 2042</span>&#160; </div>
<div class="line"><a name="l02043"></a><span class="lineno"> 2043</span>&#160;  <span class="keyword">def </span>checkforlower(self, string):</div>
<div class="line"><a name="l02044"></a><span class="lineno"> 2044</span>&#160;    <span class="stringliteral">&quot;Check for a string in lower case.&quot;</span></div>
<div class="line"><a name="l02045"></a><span class="lineno"> 2045</span>&#160;    extracted = self.<a class="code" href="classmath2html_1_1Position.xhtml#ac9dddfc7375acdb7081f7a7286b8d04b">extract</a>(len(string))</div>
<div class="line"><a name="l02046"></a><span class="lineno"> 2046</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> extracted:</div>
<div class="line"><a name="l02047"></a><span class="lineno"> 2047</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;    <span class="keywordflow">return</span> string.lower() == self.<a class="code" href="classmath2html_1_1Position.xhtml#ac9dddfc7375acdb7081f7a7286b8d04b">extract</a>(len(string)).lower()</div>
<div class="line"><a name="l02049"></a><span class="lineno"> 2049</span>&#160; </div>
<div class="line"><a name="l02050"></a><span class="lineno"> 2050</span>&#160;  <span class="keyword">def </span>skipcurrent(self):</div>
<div class="line"><a name="l02051"></a><span class="lineno"> 2051</span>&#160;    <span class="stringliteral">&quot;Return the current character and skip it.&quot;</span></div>
<div class="line"><a name="l02052"></a><span class="lineno"> 2052</span>&#160;    current = self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>()</div>
<div class="line"><a name="l02053"></a><span class="lineno"> 2053</span>&#160;    self.<a class="code" href="classmath2html_1_1Position.xhtml#aba130a15fcbbf00d54fab27aa4302f16">skip</a>(current)</div>
<div class="line"><a name="l02054"></a><span class="lineno"> 2054</span>&#160;    <span class="keywordflow">return</span> current</div>
<div class="line"><a name="l02055"></a><span class="lineno"> 2055</span>&#160; </div>
<div class="line"><a name="l02056"></a><span class="lineno"> 2056</span>&#160;  <span class="keyword">def </span>next(self):</div>
<div class="line"><a name="l02057"></a><span class="lineno"> 2057</span>&#160;    <span class="stringliteral">&quot;Advance the position and return the next character.&quot;</span></div>
<div class="line"><a name="l02058"></a><span class="lineno"> 2058</span>&#160;    self.<a class="code" href="classmath2html_1_1Globable.xhtml#a503223d30a41c308dc2a4631b0953466">skipcurrent</a>()</div>
<div class="line"><a name="l02059"></a><span class="lineno"> 2059</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">current</a>()</div>
<div class="line"><a name="l02060"></a><span class="lineno"> 2060</span>&#160; </div>
<div class="line"><a name="l02061"></a><span class="lineno"> 2061</span>&#160;  <span class="keyword">def </span>checkskip(self, string):</div>
<div class="line"><a name="l02062"></a><span class="lineno"> 2062</span>&#160;    <span class="stringliteral">&quot;Check for a string at the given position; if there, skip it&quot;</span></div>
<div class="line"><a name="l02063"></a><span class="lineno"> 2063</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.<a class="code" href="classmath2html_1_1Globable.xhtml#abefae8254f080b11ad7e7918db3adb48">checkfor</a>(string):</div>
<div class="line"><a name="l02064"></a><span class="lineno"> 2064</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l02065"></a><span class="lineno"> 2065</span>&#160;    self.<a class="code" href="classmath2html_1_1Position.xhtml#aba130a15fcbbf00d54fab27aa4302f16">skip</a>(string)</div>
<div class="line"><a name="l02066"></a><span class="lineno"> 2066</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l02067"></a><span class="lineno"> 2067</span>&#160; </div>
<div class="line"><a name="l02068"></a><span class="lineno"> 2068</span>&#160;  <span class="keyword">def </span>error(self, message):</div>
<div class="line"><a name="l02069"></a><span class="lineno"> 2069</span>&#160;    <span class="stringliteral">&quot;Show an error message and the position identifier.&quot;</span></div>
<div class="line"><a name="l02070"></a><span class="lineno"> 2070</span>&#160;    Trace.error(message + <span class="stringliteral">&#39;: &#39;</span> + self.<a class="code" href="classmath2html_1_1Position.xhtml#aff783e93ec4792177046b6554946b14e">identifier</a>())</div>
<div class="line"><a name="l02071"></a><span class="lineno"> 2071</span>&#160; </div>
<div class="line"><a name="l02072"></a><span class="lineno"> 2072</span>&#160;<span class="keyword">class </span>TextPosition(<a class="code" href="classmath2html_1_1Position.xhtml">Position</a>):</div>
<div class="line"><a name="l02073"></a><span class="lineno"> 2073</span>&#160;  <span class="stringliteral">&quot;A parse position based on a raw text.&quot;</span></div>
<div class="line"><a name="l02074"></a><span class="lineno"> 2074</span>&#160; </div>
<div class="line"><a name="l02075"></a><span class="lineno"> 2075</span>&#160;  <span class="keyword">def </span>__init__(self, text):</div>
<div class="line"><a name="l02076"></a><span class="lineno"> 2076</span>&#160;    <span class="stringliteral">&quot;Create the position from elyxer.some text.&quot;</span></div>
<div class="line"><a name="l02077"></a><span class="lineno"> 2077</span>&#160;    Position.__init__(self)</div>
<div class="line"><a name="l02078"></a><span class="lineno"> 2078</span>&#160;    self.pos = 0</div>
<div class="line"><a name="l02079"></a><span class="lineno"> 2079</span>&#160;    self.text = text</div>
<div class="line"><a name="l02080"></a><span class="lineno"> 2080</span>&#160;    self.<a class="code" href="classmath2html_1_1Globable.xhtml#a853cfe00679bbf511ec8014ed2464e78">checkbytemark</a>()</div>
<div class="line"><a name="l02081"></a><span class="lineno"> 2081</span>&#160; </div>
<div class="line"><a name="l02082"></a><span class="lineno"> 2082</span>&#160;  <span class="keyword">def </span>skip(self, string):</div>
<div class="line"><a name="l02083"></a><span class="lineno"> 2083</span>&#160;    <span class="stringliteral">&quot;Skip a string of characters.&quot;</span></div>
<div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;    self.pos += len(string)</div>
<div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160; </div>
<div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;  <span class="keyword">def </span>identifier(self):</div>
<div class="line"><a name="l02087"></a><span class="lineno"> 2087</span>&#160;    <span class="stringliteral">&quot;Return a sample of the remaining text.&quot;</span></div>
<div class="line"><a name="l02088"></a><span class="lineno"> 2088</span>&#160;    length = 30</div>
<div class="line"><a name="l02089"></a><span class="lineno"> 2089</span>&#160;    <span class="keywordflow">if</span> self.pos + length &gt; len(self.text):</div>
<div class="line"><a name="l02090"></a><span class="lineno"> 2090</span>&#160;      length = len(self.text) - self.pos</div>
<div class="line"><a name="l02091"></a><span class="lineno"> 2091</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;*&#39;</span> + self.text[self.pos:self.pos + length] + <span class="stringliteral">&#39;*&#39;</span></div>
<div class="line"><a name="l02092"></a><span class="lineno"> 2092</span>&#160; </div>
<div class="line"><a name="l02093"></a><span class="lineno"> 2093</span>&#160;  <span class="keyword">def </span>isout(self):</div>
<div class="line"><a name="l02094"></a><span class="lineno"> 2094</span>&#160;    <span class="stringliteral">&quot;Find out if we are out of the text yet.&quot;</span></div>
<div class="line"><a name="l02095"></a><span class="lineno"> 2095</span>&#160;    <span class="keywordflow">return</span> self.pos &gt;= len(self.text)</div>
<div class="line"><a name="l02096"></a><span class="lineno"> 2096</span>&#160; </div>
<div class="line"><a name="l02097"></a><span class="lineno"> 2097</span>&#160;  <span class="keyword">def </span>current(self):</div>
<div class="line"><a name="l02098"></a><span class="lineno"> 2098</span>&#160;    <span class="stringliteral">&quot;Return the current character, assuming we are not out.&quot;</span></div>
<div class="line"><a name="l02099"></a><span class="lineno"> 2099</span>&#160;    <span class="keywordflow">return</span> self.text[self.pos]</div>
<div class="line"><a name="l02100"></a><span class="lineno"> 2100</span>&#160; </div>
<div class="line"><a name="l02101"></a><span class="lineno"> 2101</span>&#160;  <span class="keyword">def </span>extract(self, length):</div>
<div class="line"><a name="l02102"></a><span class="lineno"> 2102</span>&#160;    <span class="stringliteral">&quot;Extract the next string of the given length, or None if not enough text.&quot;</span></div>
<div class="line"><a name="l02103"></a><span class="lineno"> 2103</span>&#160;    <span class="keywordflow">if</span> self.pos + length &gt; len(self.text):</div>
<div class="line"><a name="l02104"></a><span class="lineno"> 2104</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l02105"></a><span class="lineno"> 2105</span>&#160;    <span class="keywordflow">return</span> self.text[self.pos : self.pos + length]</div>
<div class="line"><a name="l02106"></a><span class="lineno"> 2106</span>&#160; </div>
<div class="line"><a name="l02107"></a><span class="lineno"> 2107</span>&#160;<span class="keyword">class </span>FilePosition(<a class="code" href="classmath2html_1_1Position.xhtml">Position</a>):</div>
<div class="line"><a name="l02108"></a><span class="lineno"> 2108</span>&#160;  <span class="stringliteral">&quot;A parse position based on an underlying file.&quot;</span></div>
<div class="line"><a name="l02109"></a><span class="lineno"> 2109</span>&#160; </div>
<div class="line"><a name="l02110"></a><span class="lineno"> 2110</span>&#160;  <span class="keyword">def </span>__init__(self, filename):</div>
<div class="line"><a name="l02111"></a><span class="lineno"> 2111</span>&#160;    <span class="stringliteral">&quot;Create the position from a file.&quot;</span></div>
<div class="line"><a name="l02112"></a><span class="lineno"> 2112</span>&#160;    Position.__init__(self)</div>
<div class="line"><a name="l02113"></a><span class="lineno"> 2113</span>&#160;    self.reader = LineReader(filename)</div>
<div class="line"><a name="l02114"></a><span class="lineno"> 2114</span>&#160;    self.pos = 0</div>
<div class="line"><a name="l02115"></a><span class="lineno"> 2115</span>&#160;    self.<a class="code" href="classmath2html_1_1Globable.xhtml#a853cfe00679bbf511ec8014ed2464e78">checkbytemark</a>()</div>
<div class="line"><a name="l02116"></a><span class="lineno"> 2116</span>&#160; </div>
<div class="line"><a name="l02117"></a><span class="lineno"> 2117</span>&#160;  <span class="keyword">def </span>skip(self, string):</div>
<div class="line"><a name="l02118"></a><span class="lineno"> 2118</span>&#160;    <span class="stringliteral">&quot;Skip a string of characters.&quot;</span></div>
<div class="line"><a name="l02119"></a><span class="lineno"> 2119</span>&#160;    length = len(string)</div>
<div class="line"><a name="l02120"></a><span class="lineno"> 2120</span>&#160;    <span class="keywordflow">while</span> self.pos + length &gt; len(self.reader.currentline()):</div>
<div class="line"><a name="l02121"></a><span class="lineno"> 2121</span>&#160;      length -= len(self.reader.currentline()) - self.pos + 1</div>
<div class="line"><a name="l02122"></a><span class="lineno"> 2122</span>&#160;      self.nextline()</div>
<div class="line"><a name="l02123"></a><span class="lineno"> 2123</span>&#160;    self.pos += length</div>
<div class="line"><a name="l02124"></a><span class="lineno"> 2124</span>&#160; </div>
<div class="line"><a name="l02125"></a><span class="lineno"> 2125</span>&#160;  <span class="keyword">def </span>currentline(self):</div>
<div class="line"><a name="l02126"></a><span class="lineno"> 2126</span>&#160;    <span class="stringliteral">&quot;Get the current line of the underlying file.&quot;</span></div>
<div class="line"><a name="l02127"></a><span class="lineno"> 2127</span>&#160;    <span class="keywordflow">return</span> self.reader.currentline()</div>
<div class="line"><a name="l02128"></a><span class="lineno"> 2128</span>&#160; </div>
<div class="line"><a name="l02129"></a><span class="lineno"> 2129</span>&#160;  <span class="keyword">def </span>nextline(self):</div>
<div class="line"><a name="l02130"></a><span class="lineno"> 2130</span>&#160;    <span class="stringliteral">&quot;Go to the next line.&quot;</span></div>
<div class="line"><a name="l02131"></a><span class="lineno"> 2131</span>&#160;    self.reader.nextline()</div>
<div class="line"><a name="l02132"></a><span class="lineno"> 2132</span>&#160;    self.pos = 0</div>
<div class="line"><a name="l02133"></a><span class="lineno"> 2133</span>&#160; </div>
<div class="line"><a name="l02134"></a><span class="lineno"> 2134</span>&#160;  <span class="keyword">def </span>linenumber(self):</div>
<div class="line"><a name="l02135"></a><span class="lineno"> 2135</span>&#160;    <span class="stringliteral">&quot;Return the line number of the file.&quot;</span></div>
<div class="line"><a name="l02136"></a><span class="lineno"> 2136</span>&#160;    <span class="keywordflow">return</span> self.reader.linenumber + 1</div>
<div class="line"><a name="l02137"></a><span class="lineno"> 2137</span>&#160; </div>
<div class="line"><a name="l02138"></a><span class="lineno"> 2138</span>&#160;  <span class="keyword">def </span>identifier(self):</div>
<div class="line"><a name="l02139"></a><span class="lineno"> 2139</span>&#160;    <span class="stringliteral">&quot;Return the current line and line number in the file.&quot;</span></div>
<div class="line"><a name="l02140"></a><span class="lineno"> 2140</span>&#160;    before = self.reader.currentline()[:self.pos - 1]</div>
<div class="line"><a name="l02141"></a><span class="lineno"> 2141</span>&#160;    after = self.reader.currentline()[self.pos:]</div>
<div class="line"><a name="l02142"></a><span class="lineno"> 2142</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;line &#39;</span> + unicode(self.getlinenumber()) + <span class="stringliteral">&#39;: &#39;</span> + before + <span class="stringliteral">&#39;*&#39;</span> + after</div>
<div class="line"><a name="l02143"></a><span class="lineno"> 2143</span>&#160; </div>
<div class="line"><a name="l02144"></a><span class="lineno"> 2144</span>&#160;  <span class="keyword">def </span>isout(self):</div>
<div class="line"><a name="l02145"></a><span class="lineno"> 2145</span>&#160;    <span class="stringliteral">&quot;Find out if we are out of the text yet.&quot;</span></div>
<div class="line"><a name="l02146"></a><span class="lineno"> 2146</span>&#160;    <span class="keywordflow">if</span> self.pos &gt; len(self.reader.currentline()):</div>
<div class="line"><a name="l02147"></a><span class="lineno"> 2147</span>&#160;      <span class="keywordflow">if</span> self.pos &gt; len(self.reader.currentline()) + 1:</div>
<div class="line"><a name="l02148"></a><span class="lineno"> 2148</span>&#160;        Trace.error(<span class="stringliteral">&#39;Out of the line &#39;</span> + self.reader.currentline() + <span class="stringliteral">&#39;: &#39;</span> + unicode(self.pos))</div>
<div class="line"><a name="l02149"></a><span class="lineno"> 2149</span>&#160;      self.nextline()</div>
<div class="line"><a name="l02150"></a><span class="lineno"> 2150</span>&#160;    <span class="keywordflow">return</span> self.reader.finished()</div>
<div class="line"><a name="l02151"></a><span class="lineno"> 2151</span>&#160; </div>
<div class="line"><a name="l02152"></a><span class="lineno"> 2152</span>&#160;  <span class="keyword">def </span>current(self):</div>
<div class="line"><a name="l02153"></a><span class="lineno"> 2153</span>&#160;    <span class="stringliteral">&quot;Return the current character, assuming we are not out.&quot;</span></div>
<div class="line"><a name="l02154"></a><span class="lineno"> 2154</span>&#160;    <span class="keywordflow">if</span> self.pos == len(self.reader.currentline()):</div>
<div class="line"><a name="l02155"></a><span class="lineno"> 2155</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;\n&#39;</span></div>
<div class="line"><a name="l02156"></a><span class="lineno"> 2156</span>&#160;    <span class="keywordflow">if</span> self.pos &gt; len(self.reader.currentline()):</div>
<div class="line"><a name="l02157"></a><span class="lineno"> 2157</span>&#160;      Trace.error(<span class="stringliteral">&#39;Out of the line &#39;</span> + self.reader.currentline() + <span class="stringliteral">&#39;: &#39;</span> + unicode(self.pos))</div>
<div class="line"><a name="l02158"></a><span class="lineno"> 2158</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;*&#39;</span></div>
<div class="line"><a name="l02159"></a><span class="lineno"> 2159</span>&#160;    <span class="keywordflow">return</span> self.reader.currentline()[self.pos]</div>
<div class="line"><a name="l02160"></a><span class="lineno"> 2160</span>&#160; </div>
<div class="line"><a name="l02161"></a><span class="lineno"> 2161</span>&#160;  <span class="keyword">def </span>extract(self, length):</div>
<div class="line"><a name="l02162"></a><span class="lineno"> 2162</span>&#160;    <span class="stringliteral">&quot;Extract the next string of the given length, or None if not enough text.&quot;</span></div>
<div class="line"><a name="l02163"></a><span class="lineno"> 2163</span>&#160;    <span class="keywordflow">if</span> self.pos + length &gt; len(self.reader.currentline()):</div>
<div class="line"><a name="l02164"></a><span class="lineno"> 2164</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l02165"></a><span class="lineno"> 2165</span>&#160;    <span class="keywordflow">return</span> self.reader.currentline()[self.pos : self.pos + length]</div>
<div class="line"><a name="l02166"></a><span class="lineno"> 2166</span>&#160; </div>
<div class="line"><a name="l02167"></a><span class="lineno"> 2167</span>&#160; </div>
<div class="line"><a name="l02168"></a><span class="lineno"> 2168</span>&#160; </div>
<div class="line"><a name="l02169"></a><span class="lineno"> 2169</span>&#160;<span class="keyword">class </span>Container(object):</div>
<div class="line"><a name="l02170"></a><span class="lineno"> 2170</span>&#160;  <span class="stringliteral">&quot;A container for text and objects in a lyx file&quot;</span></div>
<div class="line"><a name="l02171"></a><span class="lineno"> 2171</span>&#160; </div>
<div class="line"><a name="l02172"></a><span class="lineno"> 2172</span>&#160;  partkey = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02173"></a><span class="lineno"> 2173</span>&#160;  parent = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02174"></a><span class="lineno"> 2174</span>&#160;  begin = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02175"></a><span class="lineno"> 2175</span>&#160; </div>
<div class="line"><a name="l02176"></a><span class="lineno"> 2176</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l02177"></a><span class="lineno"> 2177</span>&#160;    self.contents = list()</div>
<div class="line"><a name="l02178"></a><span class="lineno"> 2178</span>&#160; </div>
<div class="line"><a name="l02179"></a><span class="lineno"> 2179</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l02180"></a><span class="lineno"> 2180</span>&#160;    <span class="stringliteral">&quot;Process contents&quot;</span></div>
<div class="line"><a name="l02181"></a><span class="lineno"> 2181</span>&#160;    <span class="keywordflow">pass</span></div>
<div class="line"><a name="l02182"></a><span class="lineno"> 2182</span>&#160; </div>
<div class="line"><a name="l02183"></a><span class="lineno"> 2183</span>&#160;  <span class="keyword">def </span>gethtml(self):</div>
<div class="line"><a name="l02184"></a><span class="lineno"> 2184</span>&#160;    <span class="stringliteral">&quot;Get the resulting HTML&quot;</span></div>
<div class="line"><a name="l02185"></a><span class="lineno"> 2185</span>&#160;    html = self.output.gethtml(self)</div>
<div class="line"><a name="l02186"></a><span class="lineno"> 2186</span>&#160;    <span class="keywordflow">if</span> isinstance(html, basestring):</div>
<div class="line"><a name="l02187"></a><span class="lineno"> 2187</span>&#160;      Trace.error(<span class="stringliteral">&#39;Raw string &#39;</span> + html)</div>
<div class="line"><a name="l02188"></a><span class="lineno"> 2188</span>&#160;      html = [html]</div>
<div class="line"><a name="l02189"></a><span class="lineno"> 2189</span>&#160;    <span class="keywordflow">return</span> self.escapeall(html)</div>
<div class="line"><a name="l02190"></a><span class="lineno"> 2190</span>&#160; </div>
<div class="line"><a name="l02191"></a><span class="lineno"> 2191</span>&#160;  <span class="keyword">def </span>escapeall(self, lines):</div>
<div class="line"><a name="l02192"></a><span class="lineno"> 2192</span>&#160;    <span class="stringliteral">&quot;Escape all lines in an array according to the output options.&quot;</span></div>
<div class="line"><a name="l02193"></a><span class="lineno"> 2193</span>&#160;    result = []</div>
<div class="line"><a name="l02194"></a><span class="lineno"> 2194</span>&#160;    <span class="keywordflow">for</span> line <span class="keywordflow">in</span> lines:</div>
<div class="line"><a name="l02195"></a><span class="lineno"> 2195</span>&#160;      <span class="keywordflow">if</span> Options.html:</div>
<div class="line"><a name="l02196"></a><span class="lineno"> 2196</span>&#160;        line = self.escape(line, EscapeConfig.html)</div>
<div class="line"><a name="l02197"></a><span class="lineno"> 2197</span>&#160;      <span class="keywordflow">if</span> Options.iso885915:</div>
<div class="line"><a name="l02198"></a><span class="lineno"> 2198</span>&#160;        line = self.escape(line, EscapeConfig.iso885915)</div>
<div class="line"><a name="l02199"></a><span class="lineno"> 2199</span>&#160;        line = self.escapeentities(line)</div>
<div class="line"><a name="l02200"></a><span class="lineno"> 2200</span>&#160;      <span class="keywordflow">elif</span> <span class="keywordflow">not</span> Options.unicode:</div>
<div class="line"><a name="l02201"></a><span class="lineno"> 2201</span>&#160;        line = self.escape(line, EscapeConfig.nonunicode)</div>
<div class="line"><a name="l02202"></a><span class="lineno"> 2202</span>&#160;      result.append(line)</div>
<div class="line"><a name="l02203"></a><span class="lineno"> 2203</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l02204"></a><span class="lineno"> 2204</span>&#160; </div>
<div class="line"><a name="l02205"></a><span class="lineno"> 2205</span>&#160;  <span class="keyword">def </span>escape(self, line, replacements = EscapeConfig.entities):</div>
<div class="line"><a name="l02206"></a><span class="lineno"> 2206</span>&#160;    <span class="stringliteral">&quot;Escape a line with replacements from elyxer.a map&quot;</span></div>
<div class="line"><a name="l02207"></a><span class="lineno"> 2207</span>&#160;    pieces = replacements.keys()</div>
<div class="line"><a name="l02208"></a><span class="lineno"> 2208</span>&#160;    <span class="comment"># do them in order</span></div>
<div class="line"><a name="l02209"></a><span class="lineno"> 2209</span>&#160;    pieces.sort()</div>
<div class="line"><a name="l02210"></a><span class="lineno"> 2210</span>&#160;    <span class="keywordflow">for</span> piece <span class="keywordflow">in</span> pieces:</div>
<div class="line"><a name="l02211"></a><span class="lineno"> 2211</span>&#160;      <span class="keywordflow">if</span> piece <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l02212"></a><span class="lineno"> 2212</span>&#160;        line = line.replace(piece, replacements[piece])</div>
<div class="line"><a name="l02213"></a><span class="lineno"> 2213</span>&#160;    <span class="keywordflow">return</span> line</div>
<div class="line"><a name="l02214"></a><span class="lineno"> 2214</span>&#160; </div>
<div class="line"><a name="l02215"></a><span class="lineno"> 2215</span>&#160;  <span class="keyword">def </span>escapeentities(self, line):</div>
<div class="line"><a name="l02216"></a><span class="lineno"> 2216</span>&#160;    <span class="stringliteral">&quot;Escape all Unicode characters to HTML entities.&quot;</span></div>
<div class="line"><a name="l02217"></a><span class="lineno"> 2217</span>&#160;    result = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02218"></a><span class="lineno"> 2218</span>&#160;    pos = TextPosition(line)</div>
<div class="line"><a name="l02219"></a><span class="lineno"> 2219</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> pos.finished():</div>
<div class="line"><a name="l02220"></a><span class="lineno"> 2220</span>&#160;      <span class="keywordflow">if</span> ord(pos.current()) &gt; 128:</div>
<div class="line"><a name="l02221"></a><span class="lineno"> 2221</span>&#160;        codepoint = hex(ord(pos.current()))</div>
<div class="line"><a name="l02222"></a><span class="lineno"> 2222</span>&#160;        <span class="keywordflow">if</span> codepoint == <span class="stringliteral">&#39;0xd835&#39;</span>:</div>
<div class="line"><a name="l02223"></a><span class="lineno"> 2223</span>&#160;          codepoint = hex(ord(pos.next()) + 0xf800)</div>
<div class="line"><a name="l02224"></a><span class="lineno"> 2224</span>&#160;        result += <span class="stringliteral">&#39;&amp;#&#39;</span> + codepoint[1:] + <span class="stringliteral">&#39;;&#39;</span></div>
<div class="line"><a name="l02225"></a><span class="lineno"> 2225</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l02226"></a><span class="lineno"> 2226</span>&#160;        result += pos.current()</div>
<div class="line"><a name="l02227"></a><span class="lineno"> 2227</span>&#160;      pos.skipcurrent()</div>
<div class="line"><a name="l02228"></a><span class="lineno"> 2228</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l02229"></a><span class="lineno"> 2229</span>&#160; </div>
<div class="line"><a name="l02230"></a><span class="lineno"> 2230</span>&#160;  <span class="keyword">def </span>searchall(self, type):</div>
<div class="line"><a name="l02231"></a><span class="lineno"> 2231</span>&#160;    <span class="stringliteral">&quot;Search for all embedded containers of a given type&quot;</span></div>
<div class="line"><a name="l02232"></a><span class="lineno"> 2232</span>&#160;    list = []</div>
<div class="line"><a name="l02233"></a><span class="lineno"> 2233</span>&#160;    self.searchprocess(type, <span class="keyword">lambda</span> container: list.append(container))</div>
<div class="line"><a name="l02234"></a><span class="lineno"> 2234</span>&#160;    <span class="keywordflow">return</span> list</div>
<div class="line"><a name="l02235"></a><span class="lineno"> 2235</span>&#160; </div>
<div class="line"><a name="l02236"></a><span class="lineno"> 2236</span>&#160;  <span class="keyword">def </span>searchremove(self, type):</div>
<div class="line"><a name="l02237"></a><span class="lineno"> 2237</span>&#160;    <span class="stringliteral">&quot;Search for all containers of a type and remove them&quot;</span></div>
<div class="line"><a name="l02238"></a><span class="lineno"> 2238</span>&#160;    list = self.searchall(type)</div>
<div class="line"><a name="l02239"></a><span class="lineno"> 2239</span>&#160;    <span class="keywordflow">for</span> container <span class="keywordflow">in</span> list:</div>
<div class="line"><a name="l02240"></a><span class="lineno"> 2240</span>&#160;      container.parent.contents.remove(container)</div>
<div class="line"><a name="l02241"></a><span class="lineno"> 2241</span>&#160;    <span class="keywordflow">return</span> list</div>
<div class="line"><a name="l02242"></a><span class="lineno"> 2242</span>&#160; </div>
<div class="line"><a name="l02243"></a><span class="lineno"> 2243</span>&#160;  <span class="keyword">def </span>searchprocess(self, type, process):</div>
<div class="line"><a name="l02244"></a><span class="lineno"> 2244</span>&#160;    <span class="stringliteral">&quot;Search for elements of a given type and process them&quot;</span></div>
<div class="line"><a name="l02245"></a><span class="lineno"> 2245</span>&#160;    self.locateprocess(<span class="keyword">lambda</span> container: isinstance(container, type), process)</div>
<div class="line"><a name="l02246"></a><span class="lineno"> 2246</span>&#160; </div>
<div class="line"><a name="l02247"></a><span class="lineno"> 2247</span>&#160;  <span class="keyword">def </span>locateprocess(self, locate, process):</div>
<div class="line"><a name="l02248"></a><span class="lineno"> 2248</span>&#160;    <span class="stringliteral">&quot;Search for all embedded containers and process them&quot;</span></div>
<div class="line"><a name="l02249"></a><span class="lineno"> 2249</span>&#160;    <span class="keywordflow">for</span> container <span class="keywordflow">in</span> self.contents:</div>
<div class="line"><a name="l02250"></a><span class="lineno"> 2250</span>&#160;      container.locateprocess(locate, process)</div>
<div class="line"><a name="l02251"></a><span class="lineno"> 2251</span>&#160;      <span class="keywordflow">if</span> locate(container):</div>
<div class="line"><a name="l02252"></a><span class="lineno"> 2252</span>&#160;        process(container)</div>
<div class="line"><a name="l02253"></a><span class="lineno"> 2253</span>&#160; </div>
<div class="line"><a name="l02254"></a><span class="lineno"> 2254</span>&#160;  <span class="keyword">def </span>recursivesearch(self, locate, recursive, process):</div>
<div class="line"><a name="l02255"></a><span class="lineno"> 2255</span>&#160;    <span class="stringliteral">&quot;Perform a recursive search in the container.&quot;</span></div>
<div class="line"><a name="l02256"></a><span class="lineno"> 2256</span>&#160;    <span class="keywordflow">for</span> container <span class="keywordflow">in</span> self.contents:</div>
<div class="line"><a name="l02257"></a><span class="lineno"> 2257</span>&#160;      <span class="keywordflow">if</span> recursive(container):</div>
<div class="line"><a name="l02258"></a><span class="lineno"> 2258</span>&#160;        container.recursivesearch(locate, recursive, process)</div>
<div class="line"><a name="l02259"></a><span class="lineno"> 2259</span>&#160;      <span class="keywordflow">if</span> locate(container):</div>
<div class="line"><a name="l02260"></a><span class="lineno"> 2260</span>&#160;        process(container)</div>
<div class="line"><a name="l02261"></a><span class="lineno"> 2261</span>&#160; </div>
<div class="line"><a name="l02262"></a><span class="lineno"> 2262</span>&#160;  <span class="keyword">def </span>extracttext(self):</div>
<div class="line"><a name="l02263"></a><span class="lineno"> 2263</span>&#160;    <span class="stringliteral">&quot;Extract all text from elyxer.allowed containers.&quot;</span></div>
<div class="line"><a name="l02264"></a><span class="lineno"> 2264</span>&#160;    result = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02265"></a><span class="lineno"> 2265</span>&#160;    constants = ContainerExtractor(ContainerConfig.extracttext).extract(self)</div>
<div class="line"><a name="l02266"></a><span class="lineno"> 2266</span>&#160;    <span class="keywordflow">for</span> constant <span class="keywordflow">in</span> constants:</div>
<div class="line"><a name="l02267"></a><span class="lineno"> 2267</span>&#160;      result += constant.string</div>
<div class="line"><a name="l02268"></a><span class="lineno"> 2268</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l02269"></a><span class="lineno"> 2269</span>&#160; </div>
<div class="line"><a name="l02270"></a><span class="lineno"> 2270</span>&#160;  <span class="keyword">def </span>group(self, index, group, isingroup):</div>
<div class="line"><a name="l02271"></a><span class="lineno"> 2271</span>&#160;    <span class="stringliteral">&quot;Group some adjoining elements into a group&quot;</span></div>
<div class="line"><a name="l02272"></a><span class="lineno"> 2272</span>&#160;    <span class="keywordflow">if</span> index &gt;= len(self.contents):</div>
<div class="line"><a name="l02273"></a><span class="lineno"> 2273</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l02274"></a><span class="lineno"> 2274</span>&#160;    <span class="keywordflow">if</span> hasattr(self.contents[index], <span class="stringliteral">&#39;grouped&#39;</span>):</div>
<div class="line"><a name="l02275"></a><span class="lineno"> 2275</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l02276"></a><span class="lineno"> 2276</span>&#160;    <span class="keywordflow">while</span> index &lt; len(self.contents) <span class="keywordflow">and</span> isingroup(self.contents[index]):</div>
<div class="line"><a name="l02277"></a><span class="lineno"> 2277</span>&#160;      self.contents[index].grouped = <span class="keyword">True</span></div>
<div class="line"><a name="l02278"></a><span class="lineno"> 2278</span>&#160;      group.contents.append(self.contents[index])</div>
<div class="line"><a name="l02279"></a><span class="lineno"> 2279</span>&#160;      self.contents.pop(index)</div>
<div class="line"><a name="l02280"></a><span class="lineno"> 2280</span>&#160;    self.contents.insert(index, group)</div>
<div class="line"><a name="l02281"></a><span class="lineno"> 2281</span>&#160; </div>
<div class="line"><a name="l02282"></a><span class="lineno"> 2282</span>&#160;  <span class="keyword">def </span>remove(self, index):</div>
<div class="line"><a name="l02283"></a><span class="lineno"> 2283</span>&#160;    <span class="stringliteral">&quot;Remove a container but leave its contents&quot;</span></div>
<div class="line"><a name="l02284"></a><span class="lineno"> 2284</span>&#160;    container = self.contents[index]</div>
<div class="line"><a name="l02285"></a><span class="lineno"> 2285</span>&#160;    self.contents.pop(index)</div>
<div class="line"><a name="l02286"></a><span class="lineno"> 2286</span>&#160;    <span class="keywordflow">while</span> len(container.contents) &gt; 0:</div>
<div class="line"><a name="l02287"></a><span class="lineno"> 2287</span>&#160;      self.contents.insert(index, container.contents.pop())</div>
<div class="line"><a name="l02288"></a><span class="lineno"> 2288</span>&#160; </div>
<div class="line"><a name="l02289"></a><span class="lineno"> 2289</span>&#160;  <span class="keyword">def </span>tree(self, level = 0):</div>
<div class="line"><a name="l02290"></a><span class="lineno"> 2290</span>&#160;    <span class="stringliteral">&quot;Show in a tree&quot;</span></div>
<div class="line"><a name="l02291"></a><span class="lineno"> 2291</span>&#160;    Trace.debug(<span class="stringliteral">&quot;  &quot;</span> * level + unicode(self))</div>
<div class="line"><a name="l02292"></a><span class="lineno"> 2292</span>&#160;    <span class="keywordflow">for</span> container <span class="keywordflow">in</span> self.contents:</div>
<div class="line"><a name="l02293"></a><span class="lineno"> 2293</span>&#160;      container.tree(level + 1)</div>
<div class="line"><a name="l02294"></a><span class="lineno"> 2294</span>&#160; </div>
<div class="line"><a name="l02295"></a><span class="lineno"> 2295</span>&#160;  <span class="keyword">def </span>getparameter(self, name):</div>
<div class="line"><a name="l02296"></a><span class="lineno"> 2296</span>&#160;    <span class="stringliteral">&quot;Get the value of a parameter, if present.&quot;</span></div>
<div class="line"><a name="l02297"></a><span class="lineno"> 2297</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> name <span class="keywordflow">in</span> self.parameters:</div>
<div class="line"><a name="l02298"></a><span class="lineno"> 2298</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l02299"></a><span class="lineno"> 2299</span>&#160;    <span class="keywordflow">return</span> self.parameters[name]</div>
<div class="line"><a name="l02300"></a><span class="lineno"> 2300</span>&#160; </div>
<div class="line"><a name="l02301"></a><span class="lineno"> 2301</span>&#160;  <span class="keyword">def </span>getparameterlist(self, name):</div>
<div class="line"><a name="l02302"></a><span class="lineno"> 2302</span>&#160;    <span class="stringliteral">&quot;Get the value of a comma-separated parameter as a list.&quot;</span></div>
<div class="line"><a name="l02303"></a><span class="lineno"> 2303</span>&#160;    paramtext = self.getparameter(name)</div>
<div class="line"><a name="l02304"></a><span class="lineno"> 2304</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> paramtext:</div>
<div class="line"><a name="l02305"></a><span class="lineno"> 2305</span>&#160;      <span class="keywordflow">return</span> []</div>
<div class="line"><a name="l02306"></a><span class="lineno"> 2306</span>&#160;    <span class="keywordflow">return</span> paramtext.split(<span class="stringliteral">&#39;,&#39;</span>)</div>
<div class="line"><a name="l02307"></a><span class="lineno"> 2307</span>&#160; </div>
<div class="line"><a name="l02308"></a><span class="lineno"> 2308</span>&#160;  <span class="keyword">def </span>hasemptyoutput(self):</div>
<div class="line"><a name="l02309"></a><span class="lineno"> 2309</span>&#160;    <span class="stringliteral">&quot;Check if the parent&#39;s output is empty.&quot;</span></div>
<div class="line"><a name="l02310"></a><span class="lineno"> 2310</span>&#160;    current = self.parent</div>
<div class="line"><a name="l02311"></a><span class="lineno"> 2311</span>&#160;    <span class="keywordflow">while</span> current:</div>
<div class="line"><a name="l02312"></a><span class="lineno"> 2312</span>&#160;      <span class="keywordflow">if</span> current.output.isempty():</div>
<div class="line"><a name="l02313"></a><span class="lineno"> 2313</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l02314"></a><span class="lineno"> 2314</span>&#160;      current = current.parent</div>
<div class="line"><a name="l02315"></a><span class="lineno"> 2315</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l02316"></a><span class="lineno"> 2316</span>&#160; </div>
<div class="line"><a name="l02317"></a><span class="lineno"> 2317</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l02318"></a><span class="lineno"> 2318</span>&#160;    <span class="stringliteral">&quot;Get a description&quot;</span></div>
<div class="line"><a name="l02319"></a><span class="lineno"> 2319</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.begin:</div>
<div class="line"><a name="l02320"></a><span class="lineno"> 2320</span>&#160;      <span class="keywordflow">return</span> self.__class__.__name__</div>
<div class="line"><a name="l02321"></a><span class="lineno"> 2321</span>&#160;    <span class="keywordflow">return</span> self.__class__.__name__ + <span class="stringliteral">&#39;@&#39;</span> + unicode(self.begin)</div>
<div class="line"><a name="l02322"></a><span class="lineno"> 2322</span>&#160; </div>
<div class="line"><a name="l02323"></a><span class="lineno"> 2323</span>&#160;<span class="keyword">class </span>BlackBox(Container):</div>
<div class="line"><a name="l02324"></a><span class="lineno"> 2324</span>&#160;  <span class="stringliteral">&quot;A container that does not output anything&quot;</span></div>
<div class="line"><a name="l02325"></a><span class="lineno"> 2325</span>&#160; </div>
<div class="line"><a name="l02326"></a><span class="lineno"> 2326</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l02327"></a><span class="lineno"> 2327</span>&#160;    self.parser = LoneCommand()</div>
<div class="line"><a name="l02328"></a><span class="lineno"> 2328</span>&#160;    self.output = EmptyOutput()</div>
<div class="line"><a name="l02329"></a><span class="lineno"> 2329</span>&#160;    self.contents = []</div>
<div class="line"><a name="l02330"></a><span class="lineno"> 2330</span>&#160; </div>
<div class="line"><a name="l02331"></a><span class="lineno"> 2331</span>&#160;<span class="keyword">class </span>LyXFormat(BlackBox):</div>
<div class="line"><a name="l02332"></a><span class="lineno"> 2332</span>&#160;  <span class="stringliteral">&quot;Read the lyxformat command&quot;</span></div>
<div class="line"><a name="l02333"></a><span class="lineno"> 2333</span>&#160; </div>
<div class="line"><a name="l02334"></a><span class="lineno"> 2334</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l02335"></a><span class="lineno"> 2335</span>&#160;    <span class="stringliteral">&quot;Show warning if version &lt; 276&quot;</span></div>
<div class="line"><a name="l02336"></a><span class="lineno"> 2336</span>&#160;    version = int(self.header[1])</div>
<div class="line"><a name="l02337"></a><span class="lineno"> 2337</span>&#160;    <span class="keywordflow">if</span> version &lt; 276:</div>
<div class="line"><a name="l02338"></a><span class="lineno"> 2338</span>&#160;      Trace.error(<span class="stringliteral">&#39;Warning: unsupported old format version &#39;</span> + str(version))</div>
<div class="line"><a name="l02339"></a><span class="lineno"> 2339</span>&#160;    <span class="keywordflow">if</span> version &gt; int(GeneralConfig.version[<span class="stringliteral">&#39;lyxformat&#39;</span>]):</div>
<div class="line"><a name="l02340"></a><span class="lineno"> 2340</span>&#160;      Trace.error(<span class="stringliteral">&#39;Warning: unsupported new format version &#39;</span> + str(version))</div>
<div class="line"><a name="l02341"></a><span class="lineno"> 2341</span>&#160; </div>
<div class="line"><a name="l02342"></a><span class="lineno"> 2342</span>&#160;<span class="keyword">class </span>StringContainer(Container):</div>
<div class="line"><a name="l02343"></a><span class="lineno"> 2343</span>&#160;  <span class="stringliteral">&quot;A container for a single string&quot;</span></div>
<div class="line"><a name="l02344"></a><span class="lineno"> 2344</span>&#160; </div>
<div class="line"><a name="l02345"></a><span class="lineno"> 2345</span>&#160;  parsed = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02346"></a><span class="lineno"> 2346</span>&#160; </div>
<div class="line"><a name="l02347"></a><span class="lineno"> 2347</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l02348"></a><span class="lineno"> 2348</span>&#160;    self.parser = StringParser()</div>
<div class="line"><a name="l02349"></a><span class="lineno"> 2349</span>&#160;    self.output = StringOutput()</div>
<div class="line"><a name="l02350"></a><span class="lineno"> 2350</span>&#160;    self.string = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02351"></a><span class="lineno"> 2351</span>&#160; </div>
<div class="line"><a name="l02352"></a><span class="lineno"> 2352</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l02353"></a><span class="lineno"> 2353</span>&#160;    <span class="stringliteral">&quot;Replace special chars from elyxer.the contents.&quot;</span></div>
<div class="line"><a name="l02354"></a><span class="lineno"> 2354</span>&#160;    <span class="keywordflow">if</span> self.parsed:</div>
<div class="line"><a name="l02355"></a><span class="lineno"> 2355</span>&#160;      self.string = self.replacespecial(self.parsed)</div>
<div class="line"><a name="l02356"></a><span class="lineno"> 2356</span>&#160;      self.parsed = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02357"></a><span class="lineno"> 2357</span>&#160; </div>
<div class="line"><a name="l02358"></a><span class="lineno"> 2358</span>&#160;  <span class="keyword">def </span>replacespecial(self, line):</div>
<div class="line"><a name="l02359"></a><span class="lineno"> 2359</span>&#160;    <span class="stringliteral">&quot;Replace all special chars from elyxer.a line&quot;</span></div>
<div class="line"><a name="l02360"></a><span class="lineno"> 2360</span>&#160;    replaced = self.escape(line, EscapeConfig.entities)</div>
<div class="line"><a name="l02361"></a><span class="lineno"> 2361</span>&#160;    replaced = self.changeline(replaced)</div>
<div class="line"><a name="l02362"></a><span class="lineno"> 2362</span>&#160;    <span class="keywordflow">if</span> ContainerConfig.string[<span class="stringliteral">&#39;startcommand&#39;</span>] <span class="keywordflow">in</span> replaced <span class="keywordflow">and</span> len(replaced) &gt; 1:</div>
<div class="line"><a name="l02363"></a><span class="lineno"> 2363</span>&#160;      <span class="comment"># unprocessed commands</span></div>
<div class="line"><a name="l02364"></a><span class="lineno"> 2364</span>&#160;      <span class="keywordflow">if</span> self.begin:</div>
<div class="line"><a name="l02365"></a><span class="lineno"> 2365</span>&#160;        message = <span class="stringliteral">&#39;Unknown command at &#39;</span> + unicode(self.begin) + <span class="stringliteral">&#39;: &#39;</span></div>
<div class="line"><a name="l02366"></a><span class="lineno"> 2366</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l02367"></a><span class="lineno"> 2367</span>&#160;        message = <span class="stringliteral">&#39;Unknown command: &#39;</span></div>
<div class="line"><a name="l02368"></a><span class="lineno"> 2368</span>&#160;      Trace.error(message + replaced.strip())</div>
<div class="line"><a name="l02369"></a><span class="lineno"> 2369</span>&#160;    <span class="keywordflow">return</span> replaced</div>
<div class="line"><a name="l02370"></a><span class="lineno"> 2370</span>&#160; </div>
<div class="line"><a name="l02371"></a><span class="lineno"> 2371</span>&#160;  <span class="keyword">def </span>changeline(self, line):</div>
<div class="line"><a name="l02372"></a><span class="lineno"> 2372</span>&#160;    line = self.escape(line, EscapeConfig.chars)</div>
<div class="line"><a name="l02373"></a><span class="lineno"> 2373</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> ContainerConfig.string[<span class="stringliteral">&#39;startcommand&#39;</span>] <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l02374"></a><span class="lineno"> 2374</span>&#160;      <span class="keywordflow">return</span> line</div>
<div class="line"><a name="l02375"></a><span class="lineno"> 2375</span>&#160;    line = self.escape(line, EscapeConfig.commands)</div>
<div class="line"><a name="l02376"></a><span class="lineno"> 2376</span>&#160;    <span class="keywordflow">return</span> line</div>
<div class="line"><a name="l02377"></a><span class="lineno"> 2377</span>&#160; </div>
<div class="line"><a name="l02378"></a><span class="lineno"> 2378</span>&#160;  <span class="keyword">def </span>extracttext(self):</div>
<div class="line"><a name="l02379"></a><span class="lineno"> 2379</span>&#160;    <span class="stringliteral">&quot;Return all text.&quot;</span></div>
<div class="line"><a name="l02380"></a><span class="lineno"> 2380</span>&#160;    <span class="keywordflow">return</span> self.string</div>
<div class="line"><a name="l02381"></a><span class="lineno"> 2381</span>&#160;  </div>
<div class="line"><a name="l02382"></a><span class="lineno"> 2382</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l02383"></a><span class="lineno"> 2383</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l02384"></a><span class="lineno"> 2384</span>&#160;    result = <span class="stringliteral">&#39;StringContainer&#39;</span></div>
<div class="line"><a name="l02385"></a><span class="lineno"> 2385</span>&#160;    <span class="keywordflow">if</span> self.begin:</div>
<div class="line"><a name="l02386"></a><span class="lineno"> 2386</span>&#160;      result += <span class="stringliteral">&#39;@&#39;</span> + unicode(self.begin)</div>
<div class="line"><a name="l02387"></a><span class="lineno"> 2387</span>&#160;    ellipsis = <span class="stringliteral">&#39;...&#39;</span></div>
<div class="line"><a name="l02388"></a><span class="lineno"> 2388</span>&#160;    <span class="keywordflow">if</span> len(self.string.strip()) &lt;= 15:</div>
<div class="line"><a name="l02389"></a><span class="lineno"> 2389</span>&#160;      ellipsis = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02390"></a><span class="lineno"> 2390</span>&#160;    <span class="keywordflow">return</span> result + <span class="stringliteral">&#39; (&#39;</span> + self.string.strip()[:15] + ellipsis + <span class="stringliteral">&#39;)&#39;</span></div>
<div class="line"><a name="l02391"></a><span class="lineno"> 2391</span>&#160; </div>
<div class="line"><a name="l02392"></a><span class="lineno"> 2392</span>&#160;<span class="keyword">class </span>Constant(StringContainer):</div>
<div class="line"><a name="l02393"></a><span class="lineno"> 2393</span>&#160;  <span class="stringliteral">&quot;A constant string&quot;</span></div>
<div class="line"><a name="l02394"></a><span class="lineno"> 2394</span>&#160; </div>
<div class="line"><a name="l02395"></a><span class="lineno"> 2395</span>&#160;  <span class="keyword">def </span>__init__(self, text):</div>
<div class="line"><a name="l02396"></a><span class="lineno"> 2396</span>&#160;    self.contents = []</div>
<div class="line"><a name="l02397"></a><span class="lineno"> 2397</span>&#160;    self.string = text</div>
<div class="line"><a name="l02398"></a><span class="lineno"> 2398</span>&#160;    self.output = StringOutput()</div>
<div class="line"><a name="l02399"></a><span class="lineno"> 2399</span>&#160; </div>
<div class="line"><a name="l02400"></a><span class="lineno"> 2400</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l02401"></a><span class="lineno"> 2401</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Constant: &#39;</span> + self.string</div>
<div class="line"><a name="l02402"></a><span class="lineno"> 2402</span>&#160; </div>
<div class="line"><a name="l02403"></a><span class="lineno"> 2403</span>&#160;<span class="keyword">class </span>TaggedText(Container):</div>
<div class="line"><a name="l02404"></a><span class="lineno"> 2404</span>&#160;  <span class="stringliteral">&quot;Text inside a tag&quot;</span></div>
<div class="line"><a name="l02405"></a><span class="lineno"> 2405</span>&#160; </div>
<div class="line"><a name="l02406"></a><span class="lineno"> 2406</span>&#160;  output = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02407"></a><span class="lineno"> 2407</span>&#160; </div>
<div class="line"><a name="l02408"></a><span class="lineno"> 2408</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l02409"></a><span class="lineno"> 2409</span>&#160;    self.parser = TextParser(self)</div>
<div class="line"><a name="l02410"></a><span class="lineno"> 2410</span>&#160;    self.output = TaggedOutput()</div>
<div class="line"><a name="l02411"></a><span class="lineno"> 2411</span>&#160; </div>
<div class="line"><a name="l02412"></a><span class="lineno"> 2412</span>&#160;  <span class="keyword">def </span>complete(self, contents, tag, breaklines=False):</div>
<div class="line"><a name="l02413"></a><span class="lineno"> 2413</span>&#160;    <span class="stringliteral">&quot;Complete the tagged text and return it&quot;</span></div>
<div class="line"><a name="l02414"></a><span class="lineno"> 2414</span>&#160;    self.contents = contents</div>
<div class="line"><a name="l02415"></a><span class="lineno"> 2415</span>&#160;    self.output.tag = tag</div>
<div class="line"><a name="l02416"></a><span class="lineno"> 2416</span>&#160;    self.output.breaklines = breaklines</div>
<div class="line"><a name="l02417"></a><span class="lineno"> 2417</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l02418"></a><span class="lineno"> 2418</span>&#160; </div>
<div class="line"><a name="l02419"></a><span class="lineno"> 2419</span>&#160;  <span class="keyword">def </span>constant(self, text, tag, breaklines=False):</div>
<div class="line"><a name="l02420"></a><span class="lineno"> 2420</span>&#160;    <span class="stringliteral">&quot;Complete the tagged text with a constant&quot;</span></div>
<div class="line"><a name="l02421"></a><span class="lineno"> 2421</span>&#160;    constant = Constant(text)</div>
<div class="line"><a name="l02422"></a><span class="lineno"> 2422</span>&#160;    <span class="keywordflow">return</span> self.complete([constant], tag, breaklines)</div>
<div class="line"><a name="l02423"></a><span class="lineno"> 2423</span>&#160; </div>
<div class="line"><a name="l02424"></a><span class="lineno"> 2424</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l02425"></a><span class="lineno"> 2425</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l02426"></a><span class="lineno"> 2426</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> hasattr(self.output, <span class="stringliteral">&#39;tag&#39;</span>):</div>
<div class="line"><a name="l02427"></a><span class="lineno"> 2427</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;Emtpy tagged text&#39;</span></div>
<div class="line"><a name="l02428"></a><span class="lineno"> 2428</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.output.tag:</div>
<div class="line"><a name="l02429"></a><span class="lineno"> 2429</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;Tagged &lt;unknown tag&gt;&#39;</span></div>
<div class="line"><a name="l02430"></a><span class="lineno"> 2430</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Tagged &lt;&#39;</span> + self.output.tag + <span class="stringliteral">&#39;&gt;&#39;</span></div>
<div class="line"><a name="l02431"></a><span class="lineno"> 2431</span>&#160; </div>
<div class="line"><a name="l02432"></a><span class="lineno"> 2432</span>&#160; </div>
<div class="line"><a name="l02433"></a><span class="lineno"> 2433</span>&#160; </div>
<div class="line"><a name="l02434"></a><span class="lineno"> 2434</span>&#160; </div>
<div class="line"><a name="l02435"></a><span class="lineno"> 2435</span>&#160; </div>
<div class="line"><a name="l02436"></a><span class="lineno"> 2436</span>&#160; </div>
<div class="line"><a name="l02437"></a><span class="lineno"> 2437</span>&#160;<span class="keyword">class </span>DocumentParameters(object):</div>
<div class="line"><a name="l02438"></a><span class="lineno"> 2438</span>&#160;  <span class="stringliteral">&quot;Global parameters for the document.&quot;</span></div>
<div class="line"><a name="l02439"></a><span class="lineno"> 2439</span>&#160; </div>
<div class="line"><a name="l02440"></a><span class="lineno"> 2440</span>&#160;  pdftitle = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02441"></a><span class="lineno"> 2441</span>&#160;  indentstandard = <span class="keyword">False</span></div>
<div class="line"><a name="l02442"></a><span class="lineno"> 2442</span>&#160;  tocdepth = 10</div>
<div class="line"><a name="l02443"></a><span class="lineno"> 2443</span>&#160;  startinglevel = 0</div>
<div class="line"><a name="l02444"></a><span class="lineno"> 2444</span>&#160;  maxdepth = 10</div>
<div class="line"><a name="l02445"></a><span class="lineno"> 2445</span>&#160;  language = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02446"></a><span class="lineno"> 2446</span>&#160;  bibliography = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02447"></a><span class="lineno"> 2447</span>&#160;  outputchanges = <span class="keyword">False</span></div>
<div class="line"><a name="l02448"></a><span class="lineno"> 2448</span>&#160;  displaymode = <span class="keyword">False</span></div>
<div class="line"><a name="l02449"></a><span class="lineno"> 2449</span>&#160; </div>
<div class="line"><a name="l02450"></a><span class="lineno"> 2450</span>&#160; </div>
<div class="line"><a name="l02451"></a><span class="lineno"> 2451</span>&#160; </div>
<div class="line"><a name="l02452"></a><span class="lineno"> 2452</span>&#160; </div>
<div class="line"><a name="l02453"></a><span class="lineno"> 2453</span>&#160; </div>
<div class="line"><a name="l02454"></a><span class="lineno"> 2454</span>&#160; </div>
<div class="line"><a name="l02455"></a><span class="lineno"> 2455</span>&#160;<span class="keyword">class </span>FormulaParser(Parser):</div>
<div class="line"><a name="l02456"></a><span class="lineno"> 2456</span>&#160;  <span class="stringliteral">&quot;Parses a formula&quot;</span></div>
<div class="line"><a name="l02457"></a><span class="lineno"> 2457</span>&#160; </div>
<div class="line"><a name="l02458"></a><span class="lineno"> 2458</span>&#160;  <span class="keyword">def </span>parseheader(self, reader):</div>
<div class="line"><a name="l02459"></a><span class="lineno"> 2459</span>&#160;    <span class="stringliteral">&quot;See if the formula is inlined&quot;</span></div>
<div class="line"><a name="l02460"></a><span class="lineno"> 2460</span>&#160;    self.begin = reader.linenumber + 1</div>
<div class="line"><a name="l02461"></a><span class="lineno"> 2461</span>&#160;    type = self.parsetype(reader)</div>
<div class="line"><a name="l02462"></a><span class="lineno"> 2462</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> type:</div>
<div class="line"><a name="l02463"></a><span class="lineno"> 2463</span>&#160;      reader.nextline()</div>
<div class="line"><a name="l02464"></a><span class="lineno"> 2464</span>&#160;      type = self.parsetype(reader)</div>
<div class="line"><a name="l02465"></a><span class="lineno"> 2465</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> type:</div>
<div class="line"><a name="l02466"></a><span class="lineno"> 2466</span>&#160;        Trace.error(<span class="stringliteral">&#39;Unknown formula type in &#39;</span> + reader.currentline().strip())</div>
<div class="line"><a name="l02467"></a><span class="lineno"> 2467</span>&#160;        <span class="keywordflow">return</span> [<span class="stringliteral">&#39;unknown&#39;</span>]</div>
<div class="line"><a name="l02468"></a><span class="lineno"> 2468</span>&#160;    <span class="keywordflow">return</span> [type]</div>
<div class="line"><a name="l02469"></a><span class="lineno"> 2469</span>&#160; </div>
<div class="line"><a name="l02470"></a><span class="lineno"> 2470</span>&#160;  <span class="keyword">def </span>parsetype(self, reader):</div>
<div class="line"><a name="l02471"></a><span class="lineno"> 2471</span>&#160;    <span class="stringliteral">&quot;Get the formula type from the first line.&quot;</span></div>
<div class="line"><a name="l02472"></a><span class="lineno"> 2472</span>&#160;    <span class="keywordflow">if</span> reader.currentline().find(FormulaConfig.starts[<span class="stringliteral">&#39;simple&#39;</span>]) &gt;= 0:</div>
<div class="line"><a name="l02473"></a><span class="lineno"> 2473</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;inline&#39;</span></div>
<div class="line"><a name="l02474"></a><span class="lineno"> 2474</span>&#160;    <span class="keywordflow">if</span> reader.currentline().find(FormulaConfig.starts[<span class="stringliteral">&#39;complex&#39;</span>]) &gt;= 0:</div>
<div class="line"><a name="l02475"></a><span class="lineno"> 2475</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;block&#39;</span></div>
<div class="line"><a name="l02476"></a><span class="lineno"> 2476</span>&#160;    <span class="keywordflow">if</span> reader.currentline().find(FormulaConfig.starts[<span class="stringliteral">&#39;unnumbered&#39;</span>]) &gt;= 0:</div>
<div class="line"><a name="l02477"></a><span class="lineno"> 2477</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;block&#39;</span></div>
<div class="line"><a name="l02478"></a><span class="lineno"> 2478</span>&#160;    <span class="keywordflow">if</span> reader.currentline().find(FormulaConfig.starts[<span class="stringliteral">&#39;beginbefore&#39;</span>]) &gt;= 0:</div>
<div class="line"><a name="l02479"></a><span class="lineno"> 2479</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;numbered&#39;</span></div>
<div class="line"><a name="l02480"></a><span class="lineno"> 2480</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l02481"></a><span class="lineno"> 2481</span>&#160;  </div>
<div class="line"><a name="l02482"></a><span class="lineno"> 2482</span>&#160;  <span class="keyword">def </span>parse(self, reader):</div>
<div class="line"><a name="l02483"></a><span class="lineno"> 2483</span>&#160;    <span class="stringliteral">&quot;Parse the formula until the end&quot;</span></div>
<div class="line"><a name="l02484"></a><span class="lineno"> 2484</span>&#160;    formula = self.parseformula(reader)</div>
<div class="line"><a name="l02485"></a><span class="lineno"> 2485</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> reader.currentline().startswith(self.ending):</div>
<div class="line"><a name="l02486"></a><span class="lineno"> 2486</span>&#160;      stripped = reader.currentline().strip()</div>
<div class="line"><a name="l02487"></a><span class="lineno"> 2487</span>&#160;      <span class="keywordflow">if</span> len(stripped) &gt; 0:</div>
<div class="line"><a name="l02488"></a><span class="lineno"> 2488</span>&#160;        Trace.error(<span class="stringliteral">&#39;Unparsed formula line &#39;</span> + stripped)</div>
<div class="line"><a name="l02489"></a><span class="lineno"> 2489</span>&#160;      reader.nextline()</div>
<div class="line"><a name="l02490"></a><span class="lineno"> 2490</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l02491"></a><span class="lineno"> 2491</span>&#160;    <span class="keywordflow">return</span> formula</div>
<div class="line"><a name="l02492"></a><span class="lineno"> 2492</span>&#160; </div>
<div class="line"><a name="l02493"></a><span class="lineno"> 2493</span>&#160;  <span class="keyword">def </span>parseformula(self, reader):</div>
<div class="line"><a name="l02494"></a><span class="lineno"> 2494</span>&#160;    <span class="stringliteral">&quot;Parse the formula contents&quot;</span></div>
<div class="line"><a name="l02495"></a><span class="lineno"> 2495</span>&#160;    simple = FormulaConfig.starts[<span class="stringliteral">&#39;simple&#39;</span>]</div>
<div class="line"><a name="l02496"></a><span class="lineno"> 2496</span>&#160;    <span class="keywordflow">if</span> simple <span class="keywordflow">in</span> reader.currentline():</div>
<div class="line"><a name="l02497"></a><span class="lineno"> 2497</span>&#160;      rest = reader.currentline().split(simple, 1)[1]</div>
<div class="line"><a name="l02498"></a><span class="lineno"> 2498</span>&#160;      <span class="keywordflow">if</span> simple <span class="keywordflow">in</span> rest:</div>
<div class="line"><a name="l02499"></a><span class="lineno"> 2499</span>&#160;        <span class="comment"># formula is $...$</span></div>
<div class="line"><a name="l02500"></a><span class="lineno"> 2500</span>&#160;        <span class="keywordflow">return</span> self.parsesingleliner(reader, simple, simple)</div>
<div class="line"><a name="l02501"></a><span class="lineno"> 2501</span>&#160;      <span class="comment"># formula is multiline $...$</span></div>
<div class="line"><a name="l02502"></a><span class="lineno"> 2502</span>&#160;      <span class="keywordflow">return</span> self.parsemultiliner(reader, simple, simple)</div>
<div class="line"><a name="l02503"></a><span class="lineno"> 2503</span>&#160;    <span class="keywordflow">if</span> FormulaConfig.starts[<span class="stringliteral">&#39;complex&#39;</span>] <span class="keywordflow">in</span> reader.currentline():</div>
<div class="line"><a name="l02504"></a><span class="lineno"> 2504</span>&#160;      <span class="comment"># formula of the form \[...\]</span></div>
<div class="line"><a name="l02505"></a><span class="lineno"> 2505</span>&#160;      <span class="keywordflow">return</span> self.parsemultiliner(reader, FormulaConfig.starts[<span class="stringliteral">&#39;complex&#39;</span>],</div>
<div class="line"><a name="l02506"></a><span class="lineno"> 2506</span>&#160;          FormulaConfig.endings[<span class="stringliteral">&#39;complex&#39;</span>])</div>
<div class="line"><a name="l02507"></a><span class="lineno"> 2507</span>&#160;    beginbefore = FormulaConfig.starts[<span class="stringliteral">&#39;beginbefore&#39;</span>]</div>
<div class="line"><a name="l02508"></a><span class="lineno"> 2508</span>&#160;    beginafter = FormulaConfig.starts[<span class="stringliteral">&#39;beginafter&#39;</span>]</div>
<div class="line"><a name="l02509"></a><span class="lineno"> 2509</span>&#160;    <span class="keywordflow">if</span> beginbefore <span class="keywordflow">in</span> reader.currentline():</div>
<div class="line"><a name="l02510"></a><span class="lineno"> 2510</span>&#160;      <span class="keywordflow">if</span> reader.currentline().strip().endswith(beginafter):</div>
<div class="line"><a name="l02511"></a><span class="lineno"> 2511</span>&#160;        current = reader.currentline().strip()</div>
<div class="line"><a name="l02512"></a><span class="lineno"> 2512</span>&#160;        endsplit = current.split(beginbefore)[1].split(beginafter)</div>
<div class="line"><a name="l02513"></a><span class="lineno"> 2513</span>&#160;        startpiece = beginbefore + endsplit[0] + beginafter</div>
<div class="line"><a name="l02514"></a><span class="lineno"> 2514</span>&#160;        endbefore = FormulaConfig.endings[<span class="stringliteral">&#39;endbefore&#39;</span>]</div>
<div class="line"><a name="l02515"></a><span class="lineno"> 2515</span>&#160;        endafter = FormulaConfig.endings[<span class="stringliteral">&#39;endafter&#39;</span>]</div>
<div class="line"><a name="l02516"></a><span class="lineno"> 2516</span>&#160;        endpiece = endbefore + endsplit[0] + endafter</div>
<div class="line"><a name="l02517"></a><span class="lineno"> 2517</span>&#160;        <span class="keywordflow">return</span> startpiece + self.parsemultiliner(reader, startpiece, endpiece) + endpiece</div>
<div class="line"><a name="l02518"></a><span class="lineno"> 2518</span>&#160;      Trace.error(<span class="stringliteral">&#39;Missing &#39;</span> + beginafter + <span class="stringliteral">&#39; in &#39;</span> + reader.currentline())</div>
<div class="line"><a name="l02519"></a><span class="lineno"> 2519</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02520"></a><span class="lineno"> 2520</span>&#160;    begincommand = FormulaConfig.starts[<span class="stringliteral">&#39;command&#39;</span>]</div>
<div class="line"><a name="l02521"></a><span class="lineno"> 2521</span>&#160;    beginbracket = FormulaConfig.starts[<span class="stringliteral">&#39;bracket&#39;</span>]</div>
<div class="line"><a name="l02522"></a><span class="lineno"> 2522</span>&#160;    <span class="keywordflow">if</span> begincommand <span class="keywordflow">in</span> reader.currentline() <span class="keywordflow">and</span> beginbracket <span class="keywordflow">in</span> reader.currentline():</div>
<div class="line"><a name="l02523"></a><span class="lineno"> 2523</span>&#160;      endbracket = FormulaConfig.endings[<span class="stringliteral">&#39;bracket&#39;</span>]</div>
<div class="line"><a name="l02524"></a><span class="lineno"> 2524</span>&#160;      <span class="keywordflow">return</span> self.parsemultiliner(reader, beginbracket, endbracket)</div>
<div class="line"><a name="l02525"></a><span class="lineno"> 2525</span>&#160;    Trace.error(<span class="stringliteral">&#39;Formula beginning &#39;</span> + reader.currentline() + <span class="stringliteral">&#39; is unknown&#39;</span>)</div>
<div class="line"><a name="l02526"></a><span class="lineno"> 2526</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02527"></a><span class="lineno"> 2527</span>&#160; </div>
<div class="line"><a name="l02528"></a><span class="lineno"> 2528</span>&#160;  <span class="keyword">def </span>parsesingleliner(self, reader, start, ending):</div>
<div class="line"><a name="l02529"></a><span class="lineno"> 2529</span>&#160;    <span class="stringliteral">&quot;Parse a formula in one line&quot;</span></div>
<div class="line"><a name="l02530"></a><span class="lineno"> 2530</span>&#160;    line = reader.currentline().strip()</div>
<div class="line"><a name="l02531"></a><span class="lineno"> 2531</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> start <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l02532"></a><span class="lineno"> 2532</span>&#160;      Trace.error(<span class="stringliteral">&#39;Line &#39;</span> + line + <span class="stringliteral">&#39; does not contain formula start &#39;</span> + start)</div>
<div class="line"><a name="l02533"></a><span class="lineno"> 2533</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02534"></a><span class="lineno"> 2534</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> line.endswith(ending):</div>
<div class="line"><a name="l02535"></a><span class="lineno"> 2535</span>&#160;      Trace.error(<span class="stringliteral">&#39;Formula &#39;</span> + line + <span class="stringliteral">&#39; does not end with &#39;</span> + ending)</div>
<div class="line"><a name="l02536"></a><span class="lineno"> 2536</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02537"></a><span class="lineno"> 2537</span>&#160;    index = line.index(start)</div>
<div class="line"><a name="l02538"></a><span class="lineno"> 2538</span>&#160;    rest = line[index + len(start):-len(ending)]</div>
<div class="line"><a name="l02539"></a><span class="lineno"> 2539</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l02540"></a><span class="lineno"> 2540</span>&#160;    <span class="keywordflow">return</span> rest</div>
<div class="line"><a name="l02541"></a><span class="lineno"> 2541</span>&#160; </div>
<div class="line"><a name="l02542"></a><span class="lineno"> 2542</span>&#160;  <span class="keyword">def </span>parsemultiliner(self, reader, start, ending):</div>
<div class="line"><a name="l02543"></a><span class="lineno"> 2543</span>&#160;    <span class="stringliteral">&quot;Parse a formula in multiple lines&quot;</span></div>
<div class="line"><a name="l02544"></a><span class="lineno"> 2544</span>&#160;    formula = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02545"></a><span class="lineno"> 2545</span>&#160;    line = reader.currentline()</div>
<div class="line"><a name="l02546"></a><span class="lineno"> 2546</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> start <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l02547"></a><span class="lineno"> 2547</span>&#160;      Trace.error(<span class="stringliteral">&#39;Line &#39;</span> + line.strip() + <span class="stringliteral">&#39; does not contain formula start &#39;</span> + start)</div>
<div class="line"><a name="l02548"></a><span class="lineno"> 2548</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02549"></a><span class="lineno"> 2549</span>&#160;    index = line.index(start)</div>
<div class="line"><a name="l02550"></a><span class="lineno"> 2550</span>&#160;    line = line[index + len(start):].strip()</div>
<div class="line"><a name="l02551"></a><span class="lineno"> 2551</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> line.endswith(ending):</div>
<div class="line"><a name="l02552"></a><span class="lineno"> 2552</span>&#160;      formula += line + <span class="stringliteral">&#39;\n&#39;</span></div>
<div class="line"><a name="l02553"></a><span class="lineno"> 2553</span>&#160;      reader.nextline()</div>
<div class="line"><a name="l02554"></a><span class="lineno"> 2554</span>&#160;      line = reader.currentline()</div>
<div class="line"><a name="l02555"></a><span class="lineno"> 2555</span>&#160;    formula += line[:-len(ending)]</div>
<div class="line"><a name="l02556"></a><span class="lineno"> 2556</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l02557"></a><span class="lineno"> 2557</span>&#160;    <span class="keywordflow">return</span> formula</div>
<div class="line"><a name="l02558"></a><span class="lineno"> 2558</span>&#160; </div>
<div class="line"><a name="l02559"></a><span class="lineno"> 2559</span>&#160;<span class="keyword">class </span>MacroParser(FormulaParser):</div>
<div class="line"><a name="l02560"></a><span class="lineno"> 2560</span>&#160;  <span class="stringliteral">&quot;A parser for a formula macro.&quot;</span></div>
<div class="line"><a name="l02561"></a><span class="lineno"> 2561</span>&#160; </div>
<div class="line"><a name="l02562"></a><span class="lineno"> 2562</span>&#160;  <span class="keyword">def </span>parseheader(self, reader):</div>
<div class="line"><a name="l02563"></a><span class="lineno"> 2563</span>&#160;    <span class="stringliteral">&quot;See if the formula is inlined&quot;</span></div>
<div class="line"><a name="l02564"></a><span class="lineno"> 2564</span>&#160;    self.begin = reader.linenumber + 1</div>
<div class="line"><a name="l02565"></a><span class="lineno"> 2565</span>&#160;    <span class="keywordflow">return</span> [<span class="stringliteral">&#39;inline&#39;</span>]</div>
<div class="line"><a name="l02566"></a><span class="lineno"> 2566</span>&#160;  </div>
<div class="line"><a name="l02567"></a><span class="lineno"> 2567</span>&#160;  <span class="keyword">def </span>parse(self, reader):</div>
<div class="line"><a name="l02568"></a><span class="lineno"> 2568</span>&#160;    <span class="stringliteral">&quot;Parse the formula until the end&quot;</span></div>
<div class="line"><a name="l02569"></a><span class="lineno"> 2569</span>&#160;    formula = self.parsemultiliner(reader, self.parent.start, self.ending)</div>
<div class="line"><a name="l02570"></a><span class="lineno"> 2570</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l02571"></a><span class="lineno"> 2571</span>&#160;    <span class="keywordflow">return</span> formula</div>
<div class="line"><a name="l02572"></a><span class="lineno"> 2572</span>&#160;  </div>
<div class="line"><a name="l02573"></a><span class="lineno"> 2573</span>&#160; </div>
<div class="line"><a name="l02574"></a><span class="lineno"> 2574</span>&#160; </div>
<div class="line"><a name="l02575"></a><span class="lineno"> 2575</span>&#160; </div>
<div class="line"><a name="l02576"></a><span class="lineno"> 2576</span>&#160; </div>
<div class="line"><a name="l02577"></a><span class="lineno"> 2577</span>&#160; </div>
<div class="line"><a name="l02578"></a><span class="lineno"> 2578</span>&#160; </div>
<div class="line"><a name="l02579"></a><span class="lineno"> 2579</span>&#160; </div>
<div class="line"><a name="l02580"></a><span class="lineno"> 2580</span>&#160; </div>
<div class="line"><a name="l02581"></a><span class="lineno"> 2581</span>&#160;<span class="keyword">class </span>FormulaBit(Container):</div>
<div class="line"><a name="l02582"></a><span class="lineno"> 2582</span>&#160;  <span class="stringliteral">&quot;A bit of a formula&quot;</span></div>
<div class="line"><a name="l02583"></a><span class="lineno"> 2583</span>&#160; </div>
<div class="line"><a name="l02584"></a><span class="lineno"> 2584</span>&#160;  type = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02585"></a><span class="lineno"> 2585</span>&#160;  size = 1</div>
<div class="line"><a name="l02586"></a><span class="lineno"> 2586</span>&#160;  original = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02587"></a><span class="lineno"> 2587</span>&#160; </div>
<div class="line"><a name="l02588"></a><span class="lineno"> 2588</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l02589"></a><span class="lineno"> 2589</span>&#160;    <span class="stringliteral">&quot;The formula bit type can be &#39;alpha&#39;, &#39;number&#39;, &#39;font&#39;.&quot;</span></div>
<div class="line"><a name="l02590"></a><span class="lineno"> 2590</span>&#160;    self.contents = []</div>
<div class="line"><a name="l02591"></a><span class="lineno"> 2591</span>&#160;    self.output = ContentsOutput()</div>
<div class="line"><a name="l02592"></a><span class="lineno"> 2592</span>&#160; </div>
<div class="line"><a name="l02593"></a><span class="lineno"> 2593</span>&#160;  <span class="keyword">def </span>setfactory(self, factory):</div>
<div class="line"><a name="l02594"></a><span class="lineno"> 2594</span>&#160;    <span class="stringliteral">&quot;Set the internal formula factory.&quot;</span></div>
<div class="line"><a name="l02595"></a><span class="lineno"> 2595</span>&#160;    self.factory = factory</div>
<div class="line"><a name="l02596"></a><span class="lineno"> 2596</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l02597"></a><span class="lineno"> 2597</span>&#160; </div>
<div class="line"><a name="l02598"></a><span class="lineno"> 2598</span>&#160;  <span class="keyword">def </span>add(self, bit):</div>
<div class="line"><a name="l02599"></a><span class="lineno"> 2599</span>&#160;    <span class="stringliteral">&quot;Add any kind of formula bit already processed&quot;</span></div>
<div class="line"><a name="l02600"></a><span class="lineno"> 2600</span>&#160;    self.contents.append(bit)</div>
<div class="line"><a name="l02601"></a><span class="lineno"> 2601</span>&#160;    self.original += bit.original</div>
<div class="line"><a name="l02602"></a><span class="lineno"> 2602</span>&#160;    bit.parent = self</div>
<div class="line"><a name="l02603"></a><span class="lineno"> 2603</span>&#160; </div>
<div class="line"><a name="l02604"></a><span class="lineno"> 2604</span>&#160;  <span class="keyword">def </span>skiporiginal(self, string, pos):</div>
<div class="line"><a name="l02605"></a><span class="lineno"> 2605</span>&#160;    <span class="stringliteral">&quot;Skip a string and add it to the original formula&quot;</span></div>
<div class="line"><a name="l02606"></a><span class="lineno"> 2606</span>&#160;    self.original += string</div>
<div class="line"><a name="l02607"></a><span class="lineno"> 2607</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.checkskip(string):</div>
<div class="line"><a name="l02608"></a><span class="lineno"> 2608</span>&#160;      Trace.error(<span class="stringliteral">&#39;String &#39;</span> + string + <span class="stringliteral">&#39; not at &#39;</span> + pos.identifier())</div>
<div class="line"><a name="l02609"></a><span class="lineno"> 2609</span>&#160; </div>
<div class="line"><a name="l02610"></a><span class="lineno"> 2610</span>&#160;  <span class="keyword">def </span>computesize(self):</div>
<div class="line"><a name="l02611"></a><span class="lineno"> 2611</span>&#160;    <span class="stringliteral">&quot;Compute the size of the bit as the max of the sizes of all contents.&quot;</span></div>
<div class="line"><a name="l02612"></a><span class="lineno"> 2612</span>&#160;    <span class="keywordflow">if</span> len(self.contents) == 0:</div>
<div class="line"><a name="l02613"></a><span class="lineno"> 2613</span>&#160;      <span class="keywordflow">return</span> 1</div>
<div class="line"><a name="l02614"></a><span class="lineno"> 2614</span>&#160;    self.size = max([element.size <span class="keywordflow">for</span> element <span class="keywordflow">in</span> self.contents])</div>
<div class="line"><a name="l02615"></a><span class="lineno"> 2615</span>&#160;    <span class="keywordflow">return</span> self.size</div>
<div class="line"><a name="l02616"></a><span class="lineno"> 2616</span>&#160; </div>
<div class="line"><a name="l02617"></a><span class="lineno"> 2617</span>&#160;  <span class="keyword">def </span>clone(self):</div>
<div class="line"><a name="l02618"></a><span class="lineno"> 2618</span>&#160;    <span class="stringliteral">&quot;Return a copy of itself.&quot;</span></div>
<div class="line"><a name="l02619"></a><span class="lineno"> 2619</span>&#160;    <span class="keywordflow">return</span> self.factory.parseformula(self.original)</div>
<div class="line"><a name="l02620"></a><span class="lineno"> 2620</span>&#160; </div>
<div class="line"><a name="l02621"></a><span class="lineno"> 2621</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l02622"></a><span class="lineno"> 2622</span>&#160;    <span class="stringliteral">&quot;Get a string representation&quot;</span></div>
<div class="line"><a name="l02623"></a><span class="lineno"> 2623</span>&#160;    <span class="keywordflow">return</span> self.__class__.__name__ + <span class="stringliteral">&#39; read in &#39;</span> + self.original</div>
<div class="line"><a name="l02624"></a><span class="lineno"> 2624</span>&#160; </div>
<div class="line"><a name="l02625"></a><span class="lineno"> 2625</span>&#160;<span class="keyword">class </span>TaggedBit(FormulaBit):</div>
<div class="line"><a name="l02626"></a><span class="lineno"> 2626</span>&#160;  <span class="stringliteral">&quot;A tagged string in a formula&quot;</span></div>
<div class="line"><a name="l02627"></a><span class="lineno"> 2627</span>&#160; </div>
<div class="line"><a name="l02628"></a><span class="lineno"> 2628</span>&#160;  <span class="keyword">def </span>constant(self, constant, tag):</div>
<div class="line"><a name="l02629"></a><span class="lineno"> 2629</span>&#160;    <span class="stringliteral">&quot;Set the constant and the tag&quot;</span></div>
<div class="line"><a name="l02630"></a><span class="lineno"> 2630</span>&#160;    self.output = TaggedOutput().settag(tag)</div>
<div class="line"><a name="l02631"></a><span class="lineno"> 2631</span>&#160;    self.add(FormulaConstant(constant))</div>
<div class="line"><a name="l02632"></a><span class="lineno"> 2632</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l02633"></a><span class="lineno"> 2633</span>&#160; </div>
<div class="line"><a name="l02634"></a><span class="lineno"> 2634</span>&#160;  <span class="keyword">def </span>complete(self, contents, tag, breaklines = False):</div>
<div class="line"><a name="l02635"></a><span class="lineno"> 2635</span>&#160;    <span class="stringliteral">&quot;Set the constant and the tag&quot;</span></div>
<div class="line"><a name="l02636"></a><span class="lineno"> 2636</span>&#160;    self.contents = contents</div>
<div class="line"><a name="l02637"></a><span class="lineno"> 2637</span>&#160;    self.output = TaggedOutput().settag(tag, breaklines)</div>
<div class="line"><a name="l02638"></a><span class="lineno"> 2638</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l02639"></a><span class="lineno"> 2639</span>&#160; </div>
<div class="line"><a name="l02640"></a><span class="lineno"> 2640</span>&#160;  <span class="keyword">def </span>selfcomplete(self, tag):</div>
<div class="line"><a name="l02641"></a><span class="lineno"> 2641</span>&#160;    <span class="stringliteral">&quot;Set the self-closing tag, no contents (as in &lt;hr/&gt;).&quot;</span></div>
<div class="line"><a name="l02642"></a><span class="lineno"> 2642</span>&#160;    self.output = TaggedOutput().settag(tag, empty = <span class="keyword">True</span>)</div>
<div class="line"><a name="l02643"></a><span class="lineno"> 2643</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l02644"></a><span class="lineno"> 2644</span>&#160; </div>
<div class="line"><a name="l02645"></a><span class="lineno"> 2645</span>&#160;<span class="keyword">class </span>FormulaConstant(Constant):</div>
<div class="line"><a name="l02646"></a><span class="lineno"> 2646</span>&#160;  <span class="stringliteral">&quot;A constant string in a formula&quot;</span></div>
<div class="line"><a name="l02647"></a><span class="lineno"> 2647</span>&#160; </div>
<div class="line"><a name="l02648"></a><span class="lineno"> 2648</span>&#160;  <span class="keyword">def </span>__init__(self, string):</div>
<div class="line"><a name="l02649"></a><span class="lineno"> 2649</span>&#160;    <span class="stringliteral">&quot;Set the constant string&quot;</span></div>
<div class="line"><a name="l02650"></a><span class="lineno"> 2650</span>&#160;    Constant.__init__(self, string)</div>
<div class="line"><a name="l02651"></a><span class="lineno"> 2651</span>&#160;    self.original = string</div>
<div class="line"><a name="l02652"></a><span class="lineno"> 2652</span>&#160;    self.size = 1</div>
<div class="line"><a name="l02653"></a><span class="lineno"> 2653</span>&#160;    self.type = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02654"></a><span class="lineno"> 2654</span>&#160; </div>
<div class="line"><a name="l02655"></a><span class="lineno"> 2655</span>&#160;  <span class="keyword">def </span>computesize(self):</div>
<div class="line"><a name="l02656"></a><span class="lineno"> 2656</span>&#160;    <span class="stringliteral">&quot;Compute the size of the constant: always 1.&quot;</span></div>
<div class="line"><a name="l02657"></a><span class="lineno"> 2657</span>&#160;    <span class="keywordflow">return</span> self.size</div>
<div class="line"><a name="l02658"></a><span class="lineno"> 2658</span>&#160; </div>
<div class="line"><a name="l02659"></a><span class="lineno"> 2659</span>&#160;  <span class="keyword">def </span>clone(self):</div>
<div class="line"><a name="l02660"></a><span class="lineno"> 2660</span>&#160;    <span class="stringliteral">&quot;Return a copy of itself.&quot;</span></div>
<div class="line"><a name="l02661"></a><span class="lineno"> 2661</span>&#160;    <span class="keywordflow">return</span> FormulaConstant(self.original)</div>
<div class="line"><a name="l02662"></a><span class="lineno"> 2662</span>&#160; </div>
<div class="line"><a name="l02663"></a><span class="lineno"> 2663</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l02664"></a><span class="lineno"> 2664</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l02665"></a><span class="lineno"> 2665</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Formula constant: &#39;</span> + self.string</div>
<div class="line"><a name="l02666"></a><span class="lineno"> 2666</span>&#160; </div>
<div class="line"><a name="l02667"></a><span class="lineno"> 2667</span>&#160;<span class="keyword">class </span>RawText(FormulaBit):</div>
<div class="line"><a name="l02668"></a><span class="lineno"> 2668</span>&#160;  <span class="stringliteral">&quot;A bit of text inside a formula&quot;</span></div>
<div class="line"><a name="l02669"></a><span class="lineno"> 2669</span>&#160; </div>
<div class="line"><a name="l02670"></a><span class="lineno"> 2670</span>&#160;  <span class="keyword">def </span>detect(self, pos):</div>
<div class="line"><a name="l02671"></a><span class="lineno"> 2671</span>&#160;    <span class="stringliteral">&quot;Detect a bit of raw text&quot;</span></div>
<div class="line"><a name="l02672"></a><span class="lineno"> 2672</span>&#160;    <span class="keywordflow">return</span> pos.current().isalpha()</div>
<div class="line"><a name="l02673"></a><span class="lineno"> 2673</span>&#160; </div>
<div class="line"><a name="l02674"></a><span class="lineno"> 2674</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l02675"></a><span class="lineno"> 2675</span>&#160;    <span class="stringliteral">&quot;Parse alphabetic text&quot;</span></div>
<div class="line"><a name="l02676"></a><span class="lineno"> 2676</span>&#160;    alpha = pos.globalpha()</div>
<div class="line"><a name="l02677"></a><span class="lineno"> 2677</span>&#160;    self.add(FormulaConstant(alpha))</div>
<div class="line"><a name="l02678"></a><span class="lineno"> 2678</span>&#160;    self.type = <span class="stringliteral">&#39;alpha&#39;</span></div>
<div class="line"><a name="l02679"></a><span class="lineno"> 2679</span>&#160; </div>
<div class="line"><a name="l02680"></a><span class="lineno"> 2680</span>&#160;<span class="keyword">class </span>FormulaSymbol(FormulaBit):</div>
<div class="line"><a name="l02681"></a><span class="lineno"> 2681</span>&#160;  <span class="stringliteral">&quot;A symbol inside a formula&quot;</span></div>
<div class="line"><a name="l02682"></a><span class="lineno"> 2682</span>&#160; </div>
<div class="line"><a name="l02683"></a><span class="lineno"> 2683</span>&#160;  modified = FormulaConfig.modified</div>
<div class="line"><a name="l02684"></a><span class="lineno"> 2684</span>&#160;  unmodified = FormulaConfig.unmodified[<span class="stringliteral">&#39;characters&#39;</span>]</div>
<div class="line"><a name="l02685"></a><span class="lineno"> 2685</span>&#160; </div>
<div class="line"><a name="l02686"></a><span class="lineno"> 2686</span>&#160;  <span class="keyword">def </span>detect(self, pos):</div>
<div class="line"><a name="l02687"></a><span class="lineno"> 2687</span>&#160;    <span class="stringliteral">&quot;Detect a symbol&quot;</span></div>
<div class="line"><a name="l02688"></a><span class="lineno"> 2688</span>&#160;    <span class="keywordflow">if</span> pos.current() <span class="keywordflow">in</span> FormulaSymbol.unmodified:</div>
<div class="line"><a name="l02689"></a><span class="lineno"> 2689</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l02690"></a><span class="lineno"> 2690</span>&#160;    <span class="keywordflow">if</span> pos.current() <span class="keywordflow">in</span> FormulaSymbol.modified:</div>
<div class="line"><a name="l02691"></a><span class="lineno"> 2691</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l02692"></a><span class="lineno"> 2692</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l02693"></a><span class="lineno"> 2693</span>&#160; </div>
<div class="line"><a name="l02694"></a><span class="lineno"> 2694</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l02695"></a><span class="lineno"> 2695</span>&#160;    <span class="stringliteral">&quot;Parse the symbol&quot;</span></div>
<div class="line"><a name="l02696"></a><span class="lineno"> 2696</span>&#160;    <span class="keywordflow">if</span> pos.current() <span class="keywordflow">in</span> FormulaSymbol.unmodified:</div>
<div class="line"><a name="l02697"></a><span class="lineno"> 2697</span>&#160;      self.addsymbol(pos.current(), pos)</div>
<div class="line"><a name="l02698"></a><span class="lineno"> 2698</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l02699"></a><span class="lineno"> 2699</span>&#160;    <span class="keywordflow">if</span> pos.current() <span class="keywordflow">in</span> FormulaSymbol.modified:</div>
<div class="line"><a name="l02700"></a><span class="lineno"> 2700</span>&#160;      self.addsymbol(FormulaSymbol.modified[pos.current()], pos)</div>
<div class="line"><a name="l02701"></a><span class="lineno"> 2701</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l02702"></a><span class="lineno"> 2702</span>&#160;    Trace.error(<span class="stringliteral">&#39;Symbol &#39;</span> + pos.current() + <span class="stringliteral">&#39; not found&#39;</span>)</div>
<div class="line"><a name="l02703"></a><span class="lineno"> 2703</span>&#160; </div>
<div class="line"><a name="l02704"></a><span class="lineno"> 2704</span>&#160;  <span class="keyword">def </span>addsymbol(self, symbol, pos):</div>
<div class="line"><a name="l02705"></a><span class="lineno"> 2705</span>&#160;    <span class="stringliteral">&quot;Add a symbol&quot;</span></div>
<div class="line"><a name="l02706"></a><span class="lineno"> 2706</span>&#160;    self.skiporiginal(pos.current(), pos)</div>
<div class="line"><a name="l02707"></a><span class="lineno"> 2707</span>&#160;    self.contents.append(FormulaConstant(symbol))</div>
<div class="line"><a name="l02708"></a><span class="lineno"> 2708</span>&#160; </div>
<div class="line"><a name="l02709"></a><span class="lineno"> 2709</span>&#160;<span class="keyword">class </span>FormulaNumber(FormulaBit):</div>
<div class="line"><a name="l02710"></a><span class="lineno"> 2710</span>&#160;  <span class="stringliteral">&quot;A string of digits in a formula&quot;</span></div>
<div class="line"><a name="l02711"></a><span class="lineno"> 2711</span>&#160; </div>
<div class="line"><a name="l02712"></a><span class="lineno"> 2712</span>&#160;  <span class="keyword">def </span>detect(self, pos):</div>
<div class="line"><a name="l02713"></a><span class="lineno"> 2713</span>&#160;    <span class="stringliteral">&quot;Detect a digit&quot;</span></div>
<div class="line"><a name="l02714"></a><span class="lineno"> 2714</span>&#160;    <span class="keywordflow">return</span> pos.current().isdigit()</div>
<div class="line"><a name="l02715"></a><span class="lineno"> 2715</span>&#160; </div>
<div class="line"><a name="l02716"></a><span class="lineno"> 2716</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l02717"></a><span class="lineno"> 2717</span>&#160;    <span class="stringliteral">&quot;Parse a bunch of digits&quot;</span></div>
<div class="line"><a name="l02718"></a><span class="lineno"> 2718</span>&#160;    digits = pos.glob(<span class="keyword">lambda</span>: pos.current().isdigit())</div>
<div class="line"><a name="l02719"></a><span class="lineno"> 2719</span>&#160;    self.add(FormulaConstant(digits))</div>
<div class="line"><a name="l02720"></a><span class="lineno"> 2720</span>&#160;    self.type = <span class="stringliteral">&#39;number&#39;</span></div>
<div class="line"><a name="l02721"></a><span class="lineno"> 2721</span>&#160; </div>
<div class="line"><a name="l02722"></a><span class="lineno"> 2722</span>&#160;<span class="keyword">class </span>Comment(FormulaBit):</div>
<div class="line"><a name="l02723"></a><span class="lineno"> 2723</span>&#160;  <span class="stringliteral">&quot;A LaTeX comment: % to the end of the line.&quot;</span></div>
<div class="line"><a name="l02724"></a><span class="lineno"> 2724</span>&#160; </div>
<div class="line"><a name="l02725"></a><span class="lineno"> 2725</span>&#160;  start = FormulaConfig.starts[<span class="stringliteral">&#39;comment&#39;</span>]</div>
<div class="line"><a name="l02726"></a><span class="lineno"> 2726</span>&#160; </div>
<div class="line"><a name="l02727"></a><span class="lineno"> 2727</span>&#160;  <span class="keyword">def </span>detect(self, pos):</div>
<div class="line"><a name="l02728"></a><span class="lineno"> 2728</span>&#160;    <span class="stringliteral">&quot;Detect the %.&quot;</span></div>
<div class="line"><a name="l02729"></a><span class="lineno"> 2729</span>&#160;    <span class="keywordflow">return</span> pos.current() == self.start</div>
<div class="line"><a name="l02730"></a><span class="lineno"> 2730</span>&#160; </div>
<div class="line"><a name="l02731"></a><span class="lineno"> 2731</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l02732"></a><span class="lineno"> 2732</span>&#160;    <span class="stringliteral">&quot;Parse to the end of the line.&quot;</span></div>
<div class="line"><a name="l02733"></a><span class="lineno"> 2733</span>&#160;    self.original += pos.globincluding(<span class="stringliteral">&#39;\n&#39;</span>)</div>
<div class="line"><a name="l02734"></a><span class="lineno"> 2734</span>&#160; </div>
<div class="line"><a name="l02735"></a><span class="lineno"> 2735</span>&#160;<span class="keyword">class </span>WhiteSpace(FormulaBit):</div>
<div class="line"><a name="l02736"></a><span class="lineno"> 2736</span>&#160;  <span class="stringliteral">&quot;Some white space inside a formula.&quot;</span></div>
<div class="line"><a name="l02737"></a><span class="lineno"> 2737</span>&#160; </div>
<div class="line"><a name="l02738"></a><span class="lineno"> 2738</span>&#160;  <span class="keyword">def </span>detect(self, pos):</div>
<div class="line"><a name="l02739"></a><span class="lineno"> 2739</span>&#160;    <span class="stringliteral">&quot;Detect the white space.&quot;</span></div>
<div class="line"><a name="l02740"></a><span class="lineno"> 2740</span>&#160;    <span class="keywordflow">return</span> pos.current().isspace()</div>
<div class="line"><a name="l02741"></a><span class="lineno"> 2741</span>&#160; </div>
<div class="line"><a name="l02742"></a><span class="lineno"> 2742</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l02743"></a><span class="lineno"> 2743</span>&#160;    <span class="stringliteral">&quot;Parse all whitespace.&quot;</span></div>
<div class="line"><a name="l02744"></a><span class="lineno"> 2744</span>&#160;    self.original += pos.skipspace()</div>
<div class="line"><a name="l02745"></a><span class="lineno"> 2745</span>&#160; </div>
<div class="line"><a name="l02746"></a><span class="lineno"> 2746</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l02747"></a><span class="lineno"> 2747</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l02748"></a><span class="lineno"> 2748</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Whitespace: *&#39;</span> + self.original + <span class="stringliteral">&#39;*&#39;</span></div>
<div class="line"><a name="l02749"></a><span class="lineno"> 2749</span>&#160; </div>
<div class="line"><a name="l02750"></a><span class="lineno"> 2750</span>&#160;<span class="keyword">class </span>Bracket(FormulaBit):</div>
<div class="line"><a name="l02751"></a><span class="lineno"> 2751</span>&#160;  <span class="stringliteral">&quot;A {} bracket inside a formula&quot;</span></div>
<div class="line"><a name="l02752"></a><span class="lineno"> 2752</span>&#160; </div>
<div class="line"><a name="l02753"></a><span class="lineno"> 2753</span>&#160;  start = FormulaConfig.starts[<span class="stringliteral">&#39;bracket&#39;</span>]</div>
<div class="line"><a name="l02754"></a><span class="lineno"> 2754</span>&#160;  ending = FormulaConfig.endings[<span class="stringliteral">&#39;bracket&#39;</span>]</div>
<div class="line"><a name="l02755"></a><span class="lineno"> 2755</span>&#160; </div>
<div class="line"><a name="l02756"></a><span class="lineno"> 2756</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l02757"></a><span class="lineno"> 2757</span>&#160;    <span class="stringliteral">&quot;Create a (possibly literal) new bracket&quot;</span></div>
<div class="line"><a name="l02758"></a><span class="lineno"> 2758</span>&#160;    FormulaBit.__init__(self)</div>
<div class="line"><a name="l02759"></a><span class="lineno"> 2759</span>&#160;    self.inner = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02760"></a><span class="lineno"> 2760</span>&#160; </div>
<div class="line"><a name="l02761"></a><span class="lineno"> 2761</span>&#160;  <span class="keyword">def </span>detect(self, pos):</div>
<div class="line"><a name="l02762"></a><span class="lineno"> 2762</span>&#160;    <span class="stringliteral">&quot;Detect the start of a bracket&quot;</span></div>
<div class="line"><a name="l02763"></a><span class="lineno"> 2763</span>&#160;    <span class="keywordflow">return</span> pos.checkfor(self.start)</div>
<div class="line"><a name="l02764"></a><span class="lineno"> 2764</span>&#160; </div>
<div class="line"><a name="l02765"></a><span class="lineno"> 2765</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l02766"></a><span class="lineno"> 2766</span>&#160;    <span class="stringliteral">&quot;Parse the bracket&quot;</span></div>
<div class="line"><a name="l02767"></a><span class="lineno"> 2767</span>&#160;    self.parsecomplete(pos, self.innerformula)</div>
<div class="line"><a name="l02768"></a><span class="lineno"> 2768</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l02769"></a><span class="lineno"> 2769</span>&#160; </div>
<div class="line"><a name="l02770"></a><span class="lineno"> 2770</span>&#160;  <span class="keyword">def </span>parsetext(self, pos):</div>
<div class="line"><a name="l02771"></a><span class="lineno"> 2771</span>&#160;    <span class="stringliteral">&quot;Parse a text bracket&quot;</span></div>
<div class="line"><a name="l02772"></a><span class="lineno"> 2772</span>&#160;    self.parsecomplete(pos, self.innertext)</div>
<div class="line"><a name="l02773"></a><span class="lineno"> 2773</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l02774"></a><span class="lineno"> 2774</span>&#160; </div>
<div class="line"><a name="l02775"></a><span class="lineno"> 2775</span>&#160;  <span class="keyword">def </span>parseliteral(self, pos):</div>
<div class="line"><a name="l02776"></a><span class="lineno"> 2776</span>&#160;    <span class="stringliteral">&quot;Parse a literal bracket&quot;</span></div>
<div class="line"><a name="l02777"></a><span class="lineno"> 2777</span>&#160;    self.parsecomplete(pos, self.innerliteral)</div>
<div class="line"><a name="l02778"></a><span class="lineno"> 2778</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l02779"></a><span class="lineno"> 2779</span>&#160; </div>
<div class="line"><a name="l02780"></a><span class="lineno"> 2780</span>&#160;  <span class="keyword">def </span>parsecomplete(self, pos, innerparser):</div>
<div class="line"><a name="l02781"></a><span class="lineno"> 2781</span>&#160;    <span class="stringliteral">&quot;Parse the start and end marks&quot;</span></div>
<div class="line"><a name="l02782"></a><span class="lineno"> 2782</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.checkfor(self.start):</div>
<div class="line"><a name="l02783"></a><span class="lineno"> 2783</span>&#160;      Trace.error(<span class="stringliteral">&#39;Bracket should start with &#39;</span> + self.start + <span class="stringliteral">&#39; at &#39;</span> + pos.identifier())</div>
<div class="line"><a name="l02784"></a><span class="lineno"> 2784</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l02785"></a><span class="lineno"> 2785</span>&#160;    self.skiporiginal(self.start, pos)</div>
<div class="line"><a name="l02786"></a><span class="lineno"> 2786</span>&#160;    pos.pushending(self.ending)</div>
<div class="line"><a name="l02787"></a><span class="lineno"> 2787</span>&#160;    innerparser(pos)</div>
<div class="line"><a name="l02788"></a><span class="lineno"> 2788</span>&#160;    self.original += pos.popending(self.ending)</div>
<div class="line"><a name="l02789"></a><span class="lineno"> 2789</span>&#160;    self.computesize()</div>
<div class="line"><a name="l02790"></a><span class="lineno"> 2790</span>&#160; </div>
<div class="line"><a name="l02791"></a><span class="lineno"> 2791</span>&#160;  <span class="keyword">def </span>innerformula(self, pos):</div>
<div class="line"><a name="l02792"></a><span class="lineno"> 2792</span>&#160;    <span class="stringliteral">&quot;Parse a whole formula inside the bracket&quot;</span></div>
<div class="line"><a name="l02793"></a><span class="lineno"> 2793</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> pos.finished():</div>
<div class="line"><a name="l02794"></a><span class="lineno"> 2794</span>&#160;      self.add(self.factory.parseany(pos))</div>
<div class="line"><a name="l02795"></a><span class="lineno"> 2795</span>&#160; </div>
<div class="line"><a name="l02796"></a><span class="lineno"> 2796</span>&#160;  <span class="keyword">def </span>innertext(self, pos):</div>
<div class="line"><a name="l02797"></a><span class="lineno"> 2797</span>&#160;    <span class="stringliteral">&quot;Parse some text inside the bracket, following textual rules.&quot;</span></div>
<div class="line"><a name="l02798"></a><span class="lineno"> 2798</span>&#160;    specialchars = FormulaConfig.symbolfunctions.keys()</div>
<div class="line"><a name="l02799"></a><span class="lineno"> 2799</span>&#160;    specialchars.append(FormulaConfig.starts[<span class="stringliteral">&#39;command&#39;</span>])</div>
<div class="line"><a name="l02800"></a><span class="lineno"> 2800</span>&#160;    specialchars.append(FormulaConfig.starts[<span class="stringliteral">&#39;bracket&#39;</span>])</div>
<div class="line"><a name="l02801"></a><span class="lineno"> 2801</span>&#160;    specialchars.append(Comment.start)</div>
<div class="line"><a name="l02802"></a><span class="lineno"> 2802</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> pos.finished():</div>
<div class="line"><a name="l02803"></a><span class="lineno"> 2803</span>&#160;      <span class="keywordflow">if</span> pos.current() <span class="keywordflow">in</span> specialchars:</div>
<div class="line"><a name="l02804"></a><span class="lineno"> 2804</span>&#160;        self.add(self.factory.parseany(pos))</div>
<div class="line"><a name="l02805"></a><span class="lineno"> 2805</span>&#160;        <span class="keywordflow">if</span> pos.checkskip(<span class="stringliteral">&#39; &#39;</span>):</div>
<div class="line"><a name="l02806"></a><span class="lineno"> 2806</span>&#160;          self.original += <span class="stringliteral">&#39; &#39;</span></div>
<div class="line"><a name="l02807"></a><span class="lineno"> 2807</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l02808"></a><span class="lineno"> 2808</span>&#160;        self.add(FormulaConstant(pos.skipcurrent()))</div>
<div class="line"><a name="l02809"></a><span class="lineno"> 2809</span>&#160; </div>
<div class="line"><a name="l02810"></a><span class="lineno"> 2810</span>&#160;  <span class="keyword">def </span>innerliteral(self, pos):</div>
<div class="line"><a name="l02811"></a><span class="lineno"> 2811</span>&#160;    <span class="stringliteral">&quot;Parse a literal inside the bracket, which does not generate HTML.&quot;</span></div>
<div class="line"><a name="l02812"></a><span class="lineno"> 2812</span>&#160;    self.literal = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l02813"></a><span class="lineno"> 2813</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> pos.finished() <span class="keywordflow">and</span> <span class="keywordflow">not</span> pos.current() == self.ending:</div>
<div class="line"><a name="l02814"></a><span class="lineno"> 2814</span>&#160;      <span class="keywordflow">if</span> pos.current() == self.start:</div>
<div class="line"><a name="l02815"></a><span class="lineno"> 2815</span>&#160;        self.parseliteral(pos)</div>
<div class="line"><a name="l02816"></a><span class="lineno"> 2816</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l02817"></a><span class="lineno"> 2817</span>&#160;        self.literal += pos.skipcurrent()</div>
<div class="line"><a name="l02818"></a><span class="lineno"> 2818</span>&#160;    self.original += self.literal</div>
<div class="line"><a name="l02819"></a><span class="lineno"> 2819</span>&#160; </div>
<div class="line"><a name="l02820"></a><span class="lineno"> 2820</span>&#160;<span class="keyword">class </span>SquareBracket(Bracket):</div>
<div class="line"><a name="l02821"></a><span class="lineno"> 2821</span>&#160;  <span class="stringliteral">&quot;A [] bracket inside a formula&quot;</span></div>
<div class="line"><a name="l02822"></a><span class="lineno"> 2822</span>&#160; </div>
<div class="line"><a name="l02823"></a><span class="lineno"> 2823</span>&#160;  start = FormulaConfig.starts[<span class="stringliteral">&#39;squarebracket&#39;</span>]</div>
<div class="line"><a name="l02824"></a><span class="lineno"> 2824</span>&#160;  ending = FormulaConfig.endings[<span class="stringliteral">&#39;squarebracket&#39;</span>]</div>
<div class="line"><a name="l02825"></a><span class="lineno"> 2825</span>&#160; </div>
<div class="line"><a name="l02826"></a><span class="lineno"> 2826</span>&#160;  <span class="keyword">def </span>clone(self):</div>
<div class="line"><a name="l02827"></a><span class="lineno"> 2827</span>&#160;    <span class="stringliteral">&quot;Return a new square bracket with the same contents.&quot;</span></div>
<div class="line"><a name="l02828"></a><span class="lineno"> 2828</span>&#160;    bracket = SquareBracket()</div>
<div class="line"><a name="l02829"></a><span class="lineno"> 2829</span>&#160;    bracket.contents = self.contents</div>
<div class="line"><a name="l02830"></a><span class="lineno"> 2830</span>&#160;    <span class="keywordflow">return</span> bracket</div>
<div class="line"><a name="l02831"></a><span class="lineno"> 2831</span>&#160; </div>
<div class="line"><a name="l02832"></a><span class="lineno"> 2832</span>&#160; </div>
<div class="line"><a name="l02833"></a><span class="lineno"> 2833</span>&#160; </div>
<div class="line"><a name="l02834"></a><span class="lineno"> 2834</span>&#160;<span class="keyword">class </span>MathsProcessor(object):</div>
<div class="line"><a name="l02835"></a><span class="lineno"> 2835</span>&#160;  <span class="stringliteral">&quot;A processor for a maths construction inside the FormulaProcessor.&quot;</span></div>
<div class="line"><a name="l02836"></a><span class="lineno"> 2836</span>&#160; </div>
<div class="line"><a name="l02837"></a><span class="lineno"> 2837</span>&#160;  <span class="keyword">def </span>process(self, contents, index):</div>
<div class="line"><a name="l02838"></a><span class="lineno"> 2838</span>&#160;    <span class="stringliteral">&quot;Process an element inside a formula.&quot;</span></div>
<div class="line"><a name="l02839"></a><span class="lineno"> 2839</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unimplemented process() in &#39;</span> + unicode(self))</div>
<div class="line"><a name="l02840"></a><span class="lineno"> 2840</span>&#160; </div>
<div class="line"><a name="l02841"></a><span class="lineno"> 2841</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l02842"></a><span class="lineno"> 2842</span>&#160;    <span class="stringliteral">&quot;Return a printable description.&quot;</span></div>
<div class="line"><a name="l02843"></a><span class="lineno"> 2843</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Maths processor &#39;</span> + self.__class__.__name__</div>
<div class="line"><a name="l02844"></a><span class="lineno"> 2844</span>&#160; </div>
<div class="line"><a name="l02845"></a><span class="lineno"> 2845</span>&#160;<span class="keyword">class </span>FormulaProcessor(object):</div>
<div class="line"><a name="l02846"></a><span class="lineno"> 2846</span>&#160;  <span class="stringliteral">&quot;A processor specifically for formulas.&quot;</span></div>
<div class="line"><a name="l02847"></a><span class="lineno"> 2847</span>&#160; </div>
<div class="line"><a name="l02848"></a><span class="lineno"> 2848</span>&#160;  processors = []</div>
<div class="line"><a name="l02849"></a><span class="lineno"> 2849</span>&#160; </div>
<div class="line"><a name="l02850"></a><span class="lineno"> 2850</span>&#160;  <span class="keyword">def </span>process(self, bit):</div>
<div class="line"><a name="l02851"></a><span class="lineno"> 2851</span>&#160;    <span class="stringliteral">&quot;Process the contents of every formula bit, recursively.&quot;</span></div>
<div class="line"><a name="l02852"></a><span class="lineno"> 2852</span>&#160;    self.processcontents(bit)</div>
<div class="line"><a name="l02853"></a><span class="lineno"> 2853</span>&#160;    self.processinsides(bit)</div>
<div class="line"><a name="l02854"></a><span class="lineno"> 2854</span>&#160;    self.traversewhole(bit)</div>
<div class="line"><a name="l02855"></a><span class="lineno"> 2855</span>&#160; </div>
<div class="line"><a name="l02856"></a><span class="lineno"> 2856</span>&#160;  <span class="keyword">def </span>processcontents(self, bit):</div>
<div class="line"><a name="l02857"></a><span class="lineno"> 2857</span>&#160;    <span class="stringliteral">&quot;Process the contents of a formula bit.&quot;</span></div>
<div class="line"><a name="l02858"></a><span class="lineno"> 2858</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(bit, FormulaBit):</div>
<div class="line"><a name="l02859"></a><span class="lineno"> 2859</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l02860"></a><span class="lineno"> 2860</span>&#160;    bit.process()</div>
<div class="line"><a name="l02861"></a><span class="lineno"> 2861</span>&#160;    <span class="keywordflow">for</span> element <span class="keywordflow">in</span> bit.contents:</div>
<div class="line"><a name="l02862"></a><span class="lineno"> 2862</span>&#160;      self.processcontents(element)</div>
<div class="line"><a name="l02863"></a><span class="lineno"> 2863</span>&#160; </div>
<div class="line"><a name="l02864"></a><span class="lineno"> 2864</span>&#160;  <span class="keyword">def </span>processinsides(self, bit):</div>
<div class="line"><a name="l02865"></a><span class="lineno"> 2865</span>&#160;    <span class="stringliteral">&quot;Process the insides (limits, brackets) in a formula bit.&quot;</span></div>
<div class="line"><a name="l02866"></a><span class="lineno"> 2866</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(bit, FormulaBit):</div>
<div class="line"><a name="l02867"></a><span class="lineno"> 2867</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l02868"></a><span class="lineno"> 2868</span>&#160;    <span class="keywordflow">for</span> index, element <span class="keywordflow">in</span> enumerate(bit.contents):</div>
<div class="line"><a name="l02869"></a><span class="lineno"> 2869</span>&#160;      <span class="keywordflow">for</span> processor <span class="keywordflow">in</span> self.processors:</div>
<div class="line"><a name="l02870"></a><span class="lineno"> 2870</span>&#160;        processor.process(bit.contents, index)</div>
<div class="line"><a name="l02871"></a><span class="lineno"> 2871</span>&#160;      <span class="comment"># continue with recursive processing</span></div>
<div class="line"><a name="l02872"></a><span class="lineno"> 2872</span>&#160;      self.processinsides(element)</div>
<div class="line"><a name="l02873"></a><span class="lineno"> 2873</span>&#160; </div>
<div class="line"><a name="l02874"></a><span class="lineno"> 2874</span>&#160;  <span class="keyword">def </span>traversewhole(self, formula):</div>
<div class="line"><a name="l02875"></a><span class="lineno"> 2875</span>&#160;    <span class="stringliteral">&quot;Traverse over the contents to alter variables and space units.&quot;</span></div>
<div class="line"><a name="l02876"></a><span class="lineno"> 2876</span>&#160;    last = <span class="keywordtype">None</span></div>
<div class="line"><a name="l02877"></a><span class="lineno"> 2877</span>&#160;    <span class="keywordflow">for</span> bit, contents <span class="keywordflow">in</span> self.traverse(formula):</div>
<div class="line"><a name="l02878"></a><span class="lineno"> 2878</span>&#160;      <span class="keywordflow">if</span> bit.type == <span class="stringliteral">&#39;alpha&#39;</span>:</div>
<div class="line"><a name="l02879"></a><span class="lineno"> 2879</span>&#160;        self.italicize(bit, contents)</div>
<div class="line"><a name="l02880"></a><span class="lineno"> 2880</span>&#160;      <span class="keywordflow">elif</span> bit.type == <span class="stringliteral">&#39;font&#39;</span> <span class="keywordflow">and</span> last <span class="keywordflow">and</span> last.type == <span class="stringliteral">&#39;number&#39;</span>:</div>
<div class="line"><a name="l02881"></a><span class="lineno"> 2881</span>&#160;        bit.contents.insert(0, FormulaConstant(<span class="stringliteral">u&#39;‚Åü&#39;</span>))</div>
<div class="line"><a name="l02882"></a><span class="lineno"> 2882</span>&#160;      last = bit</div>
<div class="line"><a name="l02883"></a><span class="lineno"> 2883</span>&#160; </div>
<div class="line"><a name="l02884"></a><span class="lineno"> 2884</span>&#160;  <span class="keyword">def </span>traverse(self, bit):</div>
<div class="line"><a name="l02885"></a><span class="lineno"> 2885</span>&#160;    <span class="stringliteral">&quot;Traverse a formula and yield a flattened structure of (bit, list) pairs.&quot;</span></div>
<div class="line"><a name="l02886"></a><span class="lineno"> 2886</span>&#160;    <span class="keywordflow">for</span> element <span class="keywordflow">in</span> bit.contents:</div>
<div class="line"><a name="l02887"></a><span class="lineno"> 2887</span>&#160;      <span class="keywordflow">if</span> hasattr(element, <span class="stringliteral">&#39;type&#39;</span>) <span class="keywordflow">and</span> element.type:</div>
<div class="line"><a name="l02888"></a><span class="lineno"> 2888</span>&#160;        <span class="keywordflow">yield</span> (element, bit.contents)</div>
<div class="line"><a name="l02889"></a><span class="lineno"> 2889</span>&#160;      <span class="keywordflow">elif</span> isinstance(element, FormulaBit):</div>
<div class="line"><a name="l02890"></a><span class="lineno"> 2890</span>&#160;        <span class="keywordflow">for</span> pair <span class="keywordflow">in</span> self.traverse(element):</div>
<div class="line"><a name="l02891"></a><span class="lineno"> 2891</span>&#160;          <span class="keywordflow">yield</span> pair</div>
<div class="line"><a name="l02892"></a><span class="lineno"> 2892</span>&#160; </div>
<div class="line"><a name="l02893"></a><span class="lineno"> 2893</span>&#160;  <span class="keyword">def </span>italicize(self, bit, contents):</div>
<div class="line"><a name="l02894"></a><span class="lineno"> 2894</span>&#160;    <span class="stringliteral">&quot;Italicize the given bit of text.&quot;</span></div>
<div class="line"><a name="l02895"></a><span class="lineno"> 2895</span>&#160;    index = contents.index(bit)</div>
<div class="line"><a name="l02896"></a><span class="lineno"> 2896</span>&#160;    contents[index] = TaggedBit().complete([bit], <span class="stringliteral">&#39;i&#39;</span>)</div>
<div class="line"><a name="l02897"></a><span class="lineno"> 2897</span>&#160; </div>
<div class="line"><a name="l02898"></a><span class="lineno"> 2898</span>&#160; </div>
<div class="line"><a name="l02899"></a><span class="lineno"> 2899</span>&#160; </div>
<div class="line"><a name="l02900"></a><span class="lineno"> 2900</span>&#160; </div>
<div class="line"><a name="l02901"></a><span class="lineno"> 2901</span>&#160;<span class="keyword">class </span>Formula(Container):</div>
<div class="line"><a name="l02902"></a><span class="lineno"> 2902</span>&#160;  <span class="stringliteral">&quot;A LaTeX formula&quot;</span></div>
<div class="line"><a name="l02903"></a><span class="lineno"> 2903</span>&#160; </div>
<div class="line"><a name="l02904"></a><span class="lineno"> 2904</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l02905"></a><span class="lineno"> 2905</span>&#160;    self.parser = FormulaParser()</div>
<div class="line"><a name="l02906"></a><span class="lineno"> 2906</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;formula&quot;&#39;</span>)</div>
<div class="line"><a name="l02907"></a><span class="lineno"> 2907</span>&#160; </div>
<div class="line"><a name="l02908"></a><span class="lineno"> 2908</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l02909"></a><span class="lineno"> 2909</span>&#160;    <span class="stringliteral">&quot;Convert the formula to tags&quot;</span></div>
<div class="line"><a name="l02910"></a><span class="lineno"> 2910</span>&#160;    <span class="keywordflow">if</span> self.header[0] == <span class="stringliteral">&#39;inline&#39;</span>:</div>
<div class="line"><a name="l02911"></a><span class="lineno"> 2911</span>&#160;      DocumentParameters.displaymode = <span class="keyword">False</span></div>
<div class="line"><a name="l02912"></a><span class="lineno"> 2912</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l02913"></a><span class="lineno"> 2913</span>&#160;      DocumentParameters.displaymode = <span class="keyword">True</span></div>
<div class="line"><a name="l02914"></a><span class="lineno"> 2914</span>&#160;      self.output.settag(<span class="stringliteral">&#39;div class=&quot;formula&quot;&#39;</span>, <span class="keyword">True</span>)</div>
<div class="line"><a name="l02915"></a><span class="lineno"> 2915</span>&#160;    <span class="keywordflow">if</span> Options.jsmath:</div>
<div class="line"><a name="l02916"></a><span class="lineno"> 2916</span>&#160;      self.jsmath()</div>
<div class="line"><a name="l02917"></a><span class="lineno"> 2917</span>&#160;    <span class="keywordflow">elif</span> Options.mathjax:</div>
<div class="line"><a name="l02918"></a><span class="lineno"> 2918</span>&#160;      self.mathjax()</div>
<div class="line"><a name="l02919"></a><span class="lineno"> 2919</span>&#160;    <span class="keywordflow">elif</span> Options.googlecharts:</div>
<div class="line"><a name="l02920"></a><span class="lineno"> 2920</span>&#160;      self.googlecharts()</div>
<div class="line"><a name="l02921"></a><span class="lineno"> 2921</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l02922"></a><span class="lineno"> 2922</span>&#160;      self.classic()</div>
<div class="line"><a name="l02923"></a><span class="lineno"> 2923</span>&#160; </div>
<div class="line"><a name="l02924"></a><span class="lineno"> 2924</span>&#160;  <span class="keyword">def </span>jsmath(self):</div>
<div class="line"><a name="l02925"></a><span class="lineno"> 2925</span>&#160;    <span class="stringliteral">&quot;Make the contents for jsMath.&quot;</span></div>
<div class="line"><a name="l02926"></a><span class="lineno"> 2926</span>&#160;    <span class="keywordflow">if</span> self.header[0] != <span class="stringliteral">&#39;inline&#39;</span>:</div>
<div class="line"><a name="l02927"></a><span class="lineno"> 2927</span>&#160;      self.output = TaggedOutput().settag(<span class="stringliteral">&#39;div class=&quot;math&quot;&#39;</span>)</div>
<div class="line"><a name="l02928"></a><span class="lineno"> 2928</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l02929"></a><span class="lineno"> 2929</span>&#160;      self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;math&quot;&#39;</span>)</div>
<div class="line"><a name="l02930"></a><span class="lineno"> 2930</span>&#160;    self.contents = [Constant(self.parsed)]</div>
<div class="line"><a name="l02931"></a><span class="lineno"> 2931</span>&#160; </div>
<div class="line"><a name="l02932"></a><span class="lineno"> 2932</span>&#160;  <span class="keyword">def </span>mathjax(self):</div>
<div class="line"><a name="l02933"></a><span class="lineno"> 2933</span>&#160;    <span class="stringliteral">&quot;Make the contents for MathJax.&quot;</span></div>
<div class="line"><a name="l02934"></a><span class="lineno"> 2934</span>&#160;    self.output.tag = <span class="stringliteral">&#39;span class=&quot;MathJax_Preview&quot;&#39;</span></div>
<div class="line"><a name="l02935"></a><span class="lineno"> 2935</span>&#160;    tag = <span class="stringliteral">&#39;script type=&quot;math/tex&#39;</span></div>
<div class="line"><a name="l02936"></a><span class="lineno"> 2936</span>&#160;    <span class="keywordflow">if</span> self.header[0] != <span class="stringliteral">&#39;inline&#39;</span>:</div>
<div class="line"><a name="l02937"></a><span class="lineno"> 2937</span>&#160;      tag += <span class="stringliteral">&#39;;mode=display&#39;</span></div>
<div class="line"><a name="l02938"></a><span class="lineno"> 2938</span>&#160;    self.contents = [TaggedText().constant(self.parsed, tag + <span class="stringliteral">&#39;&quot;&#39;</span>, <span class="keyword">True</span>)]</div>
<div class="line"><a name="l02939"></a><span class="lineno"> 2939</span>&#160; </div>
<div class="line"><a name="l02940"></a><span class="lineno"> 2940</span>&#160;  <span class="keyword">def </span>googlecharts(self):</div>
<div class="line"><a name="l02941"></a><span class="lineno"> 2941</span>&#160;    <span class="stringliteral">&quot;Make the contents using Google Charts http://code.google.com/apis/chart/.&quot;</span></div>
<div class="line"><a name="l02942"></a><span class="lineno"> 2942</span>&#160;    url = FormulaConfig.urls[<span class="stringliteral">&#39;googlecharts&#39;</span>] + urllib.quote_plus(self.parsed)</div>
<div class="line"><a name="l02943"></a><span class="lineno"> 2943</span>&#160;    img = <span class="stringliteral">&#39;&lt;img class=&quot;chart&quot; src=&quot;&#39;</span> + url + <span class="stringliteral">&#39;&quot; alt=&quot;&#39;</span> + self.parsed + <span class="stringliteral">&#39;&quot;/&gt;&#39;</span></div>
<div class="line"><a name="l02944"></a><span class="lineno"> 2944</span>&#160;    self.contents = [Constant(img)]</div>
<div class="line"><a name="l02945"></a><span class="lineno"> 2945</span>&#160; </div>
<div class="line"><a name="l02946"></a><span class="lineno"> 2946</span>&#160;  <span class="keyword">def </span>classic(self):</div>
<div class="line"><a name="l02947"></a><span class="lineno"> 2947</span>&#160;    <span class="stringliteral">&quot;Make the contents using classic output generation with XHTML and CSS.&quot;</span></div>
<div class="line"><a name="l02948"></a><span class="lineno"> 2948</span>&#160;    whole = FormulaFactory().parseformula(self.parsed)</div>
<div class="line"><a name="l02949"></a><span class="lineno"> 2949</span>&#160;    FormulaProcessor().process(whole)</div>
<div class="line"><a name="l02950"></a><span class="lineno"> 2950</span>&#160;    whole.parent = self</div>
<div class="line"><a name="l02951"></a><span class="lineno"> 2951</span>&#160;    self.contents = [whole]</div>
<div class="line"><a name="l02952"></a><span class="lineno"> 2952</span>&#160; </div>
<div class="line"><a name="l02953"></a><span class="lineno"> 2953</span>&#160;  <span class="keyword">def </span>parse(self, pos):</div>
<div class="line"><a name="l02954"></a><span class="lineno"> 2954</span>&#160;    <span class="stringliteral">&quot;Parse using a parse position instead of self.parser.&quot;</span></div>
<div class="line"><a name="l02955"></a><span class="lineno"> 2955</span>&#160;    <span class="keywordflow">if</span> pos.checkskip(<span class="stringliteral">&#39;$$&#39;</span>):</div>
<div class="line"><a name="l02956"></a><span class="lineno"> 2956</span>&#160;      self.parsedollarblock(pos)</div>
<div class="line"><a name="l02957"></a><span class="lineno"> 2957</span>&#160;    <span class="keywordflow">elif</span> pos.checkskip(<span class="stringliteral">&#39;$&#39;</span>):</div>
<div class="line"><a name="l02958"></a><span class="lineno"> 2958</span>&#160;      self.parsedollarinline(pos)</div>
<div class="line"><a name="l02959"></a><span class="lineno"> 2959</span>&#160;    <span class="keywordflow">elif</span> pos.checkskip(<span class="stringliteral">&#39;\\(&#39;</span>):</div>
<div class="line"><a name="l02960"></a><span class="lineno"> 2960</span>&#160;      self.parseinlineto(pos, <span class="stringliteral">&#39;\\)&#39;</span>)</div>
<div class="line"><a name="l02961"></a><span class="lineno"> 2961</span>&#160;    <span class="keywordflow">elif</span> pos.checkskip(<span class="stringliteral">&#39;\\[&#39;</span>):</div>
<div class="line"><a name="l02962"></a><span class="lineno"> 2962</span>&#160;      self.parseblockto(pos, <span class="stringliteral">&#39;\\]&#39;</span>)</div>
<div class="line"><a name="l02963"></a><span class="lineno"> 2963</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l02964"></a><span class="lineno"> 2964</span>&#160;      pos.error(<span class="stringliteral">&#39;Unparseable formula&#39;</span>)</div>
<div class="line"><a name="l02965"></a><span class="lineno"> 2965</span>&#160;    self.process()</div>
<div class="line"><a name="l02966"></a><span class="lineno"> 2966</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l02967"></a><span class="lineno"> 2967</span>&#160; </div>
<div class="line"><a name="l02968"></a><span class="lineno"> 2968</span>&#160;  <span class="keyword">def </span>parsedollarinline(self, pos):</div>
<div class="line"><a name="l02969"></a><span class="lineno"> 2969</span>&#160;    <span class="stringliteral">&quot;Parse a $...$ formula.&quot;</span></div>
<div class="line"><a name="l02970"></a><span class="lineno"> 2970</span>&#160;    self.header = [<span class="stringliteral">&#39;inline&#39;</span>]</div>
<div class="line"><a name="l02971"></a><span class="lineno"> 2971</span>&#160;    self.parsedollar(pos)</div>
<div class="line"><a name="l02972"></a><span class="lineno"> 2972</span>&#160; </div>
<div class="line"><a name="l02973"></a><span class="lineno"> 2973</span>&#160;  <span class="keyword">def </span>parsedollarblock(self, pos):</div>
<div class="line"><a name="l02974"></a><span class="lineno"> 2974</span>&#160;    <span class="stringliteral">&quot;Parse a $$...$$ formula.&quot;</span></div>
<div class="line"><a name="l02975"></a><span class="lineno"> 2975</span>&#160;    self.header = [<span class="stringliteral">&#39;block&#39;</span>]</div>
<div class="line"><a name="l02976"></a><span class="lineno"> 2976</span>&#160;    self.parsedollar(pos)</div>
<div class="line"><a name="l02977"></a><span class="lineno"> 2977</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.checkskip(<span class="stringliteral">&#39;$&#39;</span>):</div>
<div class="line"><a name="l02978"></a><span class="lineno"> 2978</span>&#160;      pos.error(<span class="stringliteral">&#39;Formula should be $$...$$, but last $ is missing.&#39;</span>)</div>
<div class="line"><a name="l02979"></a><span class="lineno"> 2979</span>&#160; </div>
<div class="line"><a name="l02980"></a><span class="lineno"> 2980</span>&#160;  <span class="keyword">def </span>parsedollar(self, pos):</div>
<div class="line"><a name="l02981"></a><span class="lineno"> 2981</span>&#160;    <span class="stringliteral">&quot;Parse to the next $.&quot;</span></div>
<div class="line"><a name="l02982"></a><span class="lineno"> 2982</span>&#160;    pos.pushending(<span class="stringliteral">&#39;$&#39;</span>)</div>
<div class="line"><a name="l02983"></a><span class="lineno"> 2983</span>&#160;    self.parsed = pos.globexcluding(<span class="stringliteral">&#39;$&#39;</span>)</div>
<div class="line"><a name="l02984"></a><span class="lineno"> 2984</span>&#160;    pos.popending(<span class="stringliteral">&#39;$&#39;</span>)</div>
<div class="line"><a name="l02985"></a><span class="lineno"> 2985</span>&#160; </div>
<div class="line"><a name="l02986"></a><span class="lineno"> 2986</span>&#160;  <span class="keyword">def </span>parseinlineto(self, pos, limit):</div>
<div class="line"><a name="l02987"></a><span class="lineno"> 2987</span>&#160;    <span class="stringliteral">&quot;Parse a \\(...\\) formula.&quot;</span></div>
<div class="line"><a name="l02988"></a><span class="lineno"> 2988</span>&#160;    self.header = [<span class="stringliteral">&#39;inline&#39;</span>]</div>
<div class="line"><a name="l02989"></a><span class="lineno"> 2989</span>&#160;    self.parseupto(pos, limit)</div>
<div class="line"><a name="l02990"></a><span class="lineno"> 2990</span>&#160; </div>
<div class="line"><a name="l02991"></a><span class="lineno"> 2991</span>&#160;  <span class="keyword">def </span>parseblockto(self, pos, limit):</div>
<div class="line"><a name="l02992"></a><span class="lineno"> 2992</span>&#160;    <span class="stringliteral">&quot;Parse a \\[...\\] formula.&quot;</span></div>
<div class="line"><a name="l02993"></a><span class="lineno"> 2993</span>&#160;    self.header = [<span class="stringliteral">&#39;block&#39;</span>]</div>
<div class="line"><a name="l02994"></a><span class="lineno"> 2994</span>&#160;    self.parseupto(pos, limit)</div>
<div class="line"><a name="l02995"></a><span class="lineno"> 2995</span>&#160; </div>
<div class="line"><a name="l02996"></a><span class="lineno"> 2996</span>&#160;  <span class="keyword">def </span>parseupto(self, pos, limit):</div>
<div class="line"><a name="l02997"></a><span class="lineno"> 2997</span>&#160;    <span class="stringliteral">&quot;Parse a formula that ends with the given command.&quot;</span></div>
<div class="line"><a name="l02998"></a><span class="lineno"> 2998</span>&#160;    pos.pushending(limit)</div>
<div class="line"><a name="l02999"></a><span class="lineno"> 2999</span>&#160;    self.parsed = pos.glob(<span class="keyword">lambda</span>: <span class="keyword">True</span>)</div>
<div class="line"><a name="l03000"></a><span class="lineno"> 3000</span>&#160;    pos.popending(limit)</div>
<div class="line"><a name="l03001"></a><span class="lineno"> 3001</span>&#160; </div>
<div class="line"><a name="l03002"></a><span class="lineno"> 3002</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l03003"></a><span class="lineno"> 3003</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l03004"></a><span class="lineno"> 3004</span>&#160;    <span class="keywordflow">if</span> self.partkey <span class="keywordflow">and</span> self.partkey.number:</div>
<div class="line"><a name="l03005"></a><span class="lineno"> 3005</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;Formula (&#39;</span> + self.partkey.number + <span class="stringliteral">&#39;)&#39;</span></div>
<div class="line"><a name="l03006"></a><span class="lineno"> 3006</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Unnumbered formula&#39;</span></div>
<div class="line"><a name="l03007"></a><span class="lineno"> 3007</span>&#160; </div>
<div class="line"><a name="l03008"></a><span class="lineno"> 3008</span>&#160;<span class="keyword">class </span>WholeFormula(FormulaBit):</div>
<div class="line"><a name="l03009"></a><span class="lineno"> 3009</span>&#160;  <span class="stringliteral">&quot;Parse a whole formula&quot;</span></div>
<div class="line"><a name="l03010"></a><span class="lineno"> 3010</span>&#160; </div>
<div class="line"><a name="l03011"></a><span class="lineno"> 3011</span>&#160;  <span class="keyword">def </span>detect(self, pos):</div>
<div class="line"><a name="l03012"></a><span class="lineno"> 3012</span>&#160;    <span class="stringliteral">&quot;Not outside the formula is enough.&quot;</span></div>
<div class="line"><a name="l03013"></a><span class="lineno"> 3013</span>&#160;    <span class="keywordflow">return</span> <span class="keywordflow">not</span> pos.finished()</div>
<div class="line"><a name="l03014"></a><span class="lineno"> 3014</span>&#160; </div>
<div class="line"><a name="l03015"></a><span class="lineno"> 3015</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l03016"></a><span class="lineno"> 3016</span>&#160;    <span class="stringliteral">&quot;Parse with any formula bit&quot;</span></div>
<div class="line"><a name="l03017"></a><span class="lineno"> 3017</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> pos.finished():</div>
<div class="line"><a name="l03018"></a><span class="lineno"> 3018</span>&#160;      self.add(self.factory.parseany(pos))</div>
<div class="line"><a name="l03019"></a><span class="lineno"> 3019</span>&#160; </div>
<div class="line"><a name="l03020"></a><span class="lineno"> 3020</span>&#160;<span class="keyword">class </span>FormulaFactory(object):</div>
<div class="line"><a name="l03021"></a><span class="lineno"> 3021</span>&#160;  <span class="stringliteral">&quot;Construct bits of formula&quot;</span></div>
<div class="line"><a name="l03022"></a><span class="lineno"> 3022</span>&#160; </div>
<div class="line"><a name="l03023"></a><span class="lineno"> 3023</span>&#160;  <span class="comment"># bit types will be appended later</span></div>
<div class="line"><a name="l03024"></a><span class="lineno"> 3024</span>&#160;  types = [FormulaSymbol, RawText, FormulaNumber, Bracket, Comment, WhiteSpace]</div>
<div class="line"><a name="l03025"></a><span class="lineno"> 3025</span>&#160;  skippedtypes = [Comment, WhiteSpace]</div>
<div class="line"><a name="l03026"></a><span class="lineno"> 3026</span>&#160;  defining = <span class="keyword">False</span></div>
<div class="line"><a name="l03027"></a><span class="lineno"> 3027</span>&#160; </div>
<div class="line"><a name="l03028"></a><span class="lineno"> 3028</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03029"></a><span class="lineno"> 3029</span>&#160;    <span class="stringliteral">&quot;Initialize the map of instances.&quot;</span></div>
<div class="line"><a name="l03030"></a><span class="lineno"> 3030</span>&#160;    self.instances = dict()</div>
<div class="line"><a name="l03031"></a><span class="lineno"> 3031</span>&#160; </div>
<div class="line"><a name="l03032"></a><span class="lineno"> 3032</span>&#160;  <span class="keyword">def </span>detecttype(self, type, pos):</div>
<div class="line"><a name="l03033"></a><span class="lineno"> 3033</span>&#160;    <span class="stringliteral">&quot;Detect a bit of a given type.&quot;</span></div>
<div class="line"><a name="l03034"></a><span class="lineno"> 3034</span>&#160;    <span class="keywordflow">if</span> pos.finished():</div>
<div class="line"><a name="l03035"></a><span class="lineno"> 3035</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l03036"></a><span class="lineno"> 3036</span>&#160;    <span class="keywordflow">return</span> self.instance(type).detect(pos)</div>
<div class="line"><a name="l03037"></a><span class="lineno"> 3037</span>&#160; </div>
<div class="line"><a name="l03038"></a><span class="lineno"> 3038</span>&#160;  <span class="keyword">def </span>instance(self, type):</div>
<div class="line"><a name="l03039"></a><span class="lineno"> 3039</span>&#160;    <span class="stringliteral">&quot;Get an instance of the given type.&quot;</span></div>
<div class="line"><a name="l03040"></a><span class="lineno"> 3040</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> type <span class="keywordflow">in</span> self.instances <span class="keywordflow">or</span> <span class="keywordflow">not</span> self.instances[type]:</div>
<div class="line"><a name="l03041"></a><span class="lineno"> 3041</span>&#160;      self.instances[type] = self.create(type)</div>
<div class="line"><a name="l03042"></a><span class="lineno"> 3042</span>&#160;    <span class="keywordflow">return</span> self.instances[type]</div>
<div class="line"><a name="l03043"></a><span class="lineno"> 3043</span>&#160; </div>
<div class="line"><a name="l03044"></a><span class="lineno"> 3044</span>&#160;  <span class="keyword">def </span>create(self, type):</div>
<div class="line"><a name="l03045"></a><span class="lineno"> 3045</span>&#160;    <span class="stringliteral">&quot;Create a new formula bit of the given type.&quot;</span></div>
<div class="line"><a name="l03046"></a><span class="lineno"> 3046</span>&#160;    <span class="keywordflow">return</span> Cloner.create(type).setfactory(self)</div>
<div class="line"><a name="l03047"></a><span class="lineno"> 3047</span>&#160; </div>
<div class="line"><a name="l03048"></a><span class="lineno"> 3048</span>&#160;  <span class="keyword">def </span>clearskipped(self, pos):</div>
<div class="line"><a name="l03049"></a><span class="lineno"> 3049</span>&#160;    <span class="stringliteral">&quot;Clear any skipped types.&quot;</span></div>
<div class="line"><a name="l03050"></a><span class="lineno"> 3050</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> pos.finished():</div>
<div class="line"><a name="l03051"></a><span class="lineno"> 3051</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.skipany(pos):</div>
<div class="line"><a name="l03052"></a><span class="lineno"> 3052</span>&#160;        <span class="keywordflow">return</span></div>
<div class="line"><a name="l03053"></a><span class="lineno"> 3053</span>&#160;    <span class="keywordflow">return</span></div>
<div class="line"><a name="l03054"></a><span class="lineno"> 3054</span>&#160; </div>
<div class="line"><a name="l03055"></a><span class="lineno"> 3055</span>&#160;  <span class="keyword">def </span>skipany(self, pos):</div>
<div class="line"><a name="l03056"></a><span class="lineno"> 3056</span>&#160;    <span class="stringliteral">&quot;Skip any skipped types.&quot;</span></div>
<div class="line"><a name="l03057"></a><span class="lineno"> 3057</span>&#160;    <span class="keywordflow">for</span> type <span class="keywordflow">in</span> self.skippedtypes:</div>
<div class="line"><a name="l03058"></a><span class="lineno"> 3058</span>&#160;      <span class="keywordflow">if</span> self.instance(type).detect(pos):</div>
<div class="line"><a name="l03059"></a><span class="lineno"> 3059</span>&#160;        <span class="keywordflow">return</span> self.parsetype(type, pos)</div>
<div class="line"><a name="l03060"></a><span class="lineno"> 3060</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l03061"></a><span class="lineno"> 3061</span>&#160; </div>
<div class="line"><a name="l03062"></a><span class="lineno"> 3062</span>&#160;  <span class="keyword">def </span>parseany(self, pos):</div>
<div class="line"><a name="l03063"></a><span class="lineno"> 3063</span>&#160;    <span class="stringliteral">&quot;Parse any formula bit at the current location.&quot;</span></div>
<div class="line"><a name="l03064"></a><span class="lineno"> 3064</span>&#160;    <span class="keywordflow">for</span> type <span class="keywordflow">in</span> self.types + self.skippedtypes:</div>
<div class="line"><a name="l03065"></a><span class="lineno"> 3065</span>&#160;      <span class="keywordflow">if</span> self.detecttype(type, pos):</div>
<div class="line"><a name="l03066"></a><span class="lineno"> 3066</span>&#160;        <span class="keywordflow">return</span> self.parsetype(type, pos)</div>
<div class="line"><a name="l03067"></a><span class="lineno"> 3067</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unrecognized formula at &#39;</span> + pos.identifier())</div>
<div class="line"><a name="l03068"></a><span class="lineno"> 3068</span>&#160;    <span class="keywordflow">return</span> FormulaConstant(pos.skipcurrent())</div>
<div class="line"><a name="l03069"></a><span class="lineno"> 3069</span>&#160; </div>
<div class="line"><a name="l03070"></a><span class="lineno"> 3070</span>&#160;  <span class="keyword">def </span>parsetype(self, type, pos):</div>
<div class="line"><a name="l03071"></a><span class="lineno"> 3071</span>&#160;    <span class="stringliteral">&quot;Parse the given type and return it.&quot;</span></div>
<div class="line"><a name="l03072"></a><span class="lineno"> 3072</span>&#160;    bit = self.instance(type)</div>
<div class="line"><a name="l03073"></a><span class="lineno"> 3073</span>&#160;    self.instances[type] = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03074"></a><span class="lineno"> 3074</span>&#160;    returnedbit = bit.parsebit(pos)</div>
<div class="line"><a name="l03075"></a><span class="lineno"> 3075</span>&#160;    <span class="keywordflow">if</span> returnedbit:</div>
<div class="line"><a name="l03076"></a><span class="lineno"> 3076</span>&#160;      <span class="keywordflow">return</span> returnedbit.setfactory(self)</div>
<div class="line"><a name="l03077"></a><span class="lineno"> 3077</span>&#160;    <span class="keywordflow">return</span> bit</div>
<div class="line"><a name="l03078"></a><span class="lineno"> 3078</span>&#160; </div>
<div class="line"><a name="l03079"></a><span class="lineno"> 3079</span>&#160;  <span class="keyword">def </span>parseformula(self, formula):</div>
<div class="line"><a name="l03080"></a><span class="lineno"> 3080</span>&#160;    <span class="stringliteral">&quot;Parse a string of text that contains a whole formula.&quot;</span></div>
<div class="line"><a name="l03081"></a><span class="lineno"> 3081</span>&#160;    pos = TextPosition(formula)</div>
<div class="line"><a name="l03082"></a><span class="lineno"> 3082</span>&#160;    whole = self.create(WholeFormula)</div>
<div class="line"><a name="l03083"></a><span class="lineno"> 3083</span>&#160;    <span class="keywordflow">if</span> whole.detect(pos):</div>
<div class="line"><a name="l03084"></a><span class="lineno"> 3084</span>&#160;      whole.parsebit(pos)</div>
<div class="line"><a name="l03085"></a><span class="lineno"> 3085</span>&#160;      <span class="keywordflow">return</span> whole</div>
<div class="line"><a name="l03086"></a><span class="lineno"> 3086</span>&#160;    <span class="comment"># no formula found</span></div>
<div class="line"><a name="l03087"></a><span class="lineno"> 3087</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.finished():</div>
<div class="line"><a name="l03088"></a><span class="lineno"> 3088</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unknown formula at: &#39;</span> + pos.identifier())</div>
<div class="line"><a name="l03089"></a><span class="lineno"> 3089</span>&#160;      whole.add(TaggedBit().constant(formula, <span class="stringliteral">&#39;span class=&quot;unknown&quot;&#39;</span>))</div>
<div class="line"><a name="l03090"></a><span class="lineno"> 3090</span>&#160;    <span class="keywordflow">return</span> whole</div>
<div class="line"><a name="l03091"></a><span class="lineno"> 3091</span>&#160; </div>
<div class="line"><a name="l03092"></a><span class="lineno"> 3092</span>&#160; </div>
<div class="line"><a name="l03093"></a><span class="lineno"> 3093</span>&#160; </div>
<div class="line"><a name="l03094"></a><span class="lineno"> 3094</span>&#160; </div>
<div class="line"><a name="l03095"></a><span class="lineno"> 3095</span>&#160;<span class="keyword">import</span> unicodedata</div>
<div class="line"><a name="l03096"></a><span class="lineno"> 3096</span>&#160; </div>
<div class="line"><a name="l03097"></a><span class="lineno"> 3097</span>&#160; </div>
<div class="line"><a name="l03098"></a><span class="lineno"> 3098</span>&#160; </div>
<div class="line"><a name="l03099"></a><span class="lineno"> 3099</span>&#160; </div>
<div class="line"><a name="l03100"></a><span class="lineno"> 3100</span>&#160; </div>
<div class="line"><a name="l03101"></a><span class="lineno"> 3101</span>&#160; </div>
<div class="line"><a name="l03102"></a><span class="lineno"> 3102</span>&#160; </div>
<div class="line"><a name="l03103"></a><span class="lineno"> 3103</span>&#160; </div>
<div class="line"><a name="l03104"></a><span class="lineno"> 3104</span>&#160; </div>
<div class="line"><a name="l03105"></a><span class="lineno"> 3105</span>&#160; </div>
<div class="line"><a name="l03106"></a><span class="lineno"> 3106</span>&#160; </div>
<div class="line"><a name="l03107"></a><span class="lineno"> 3107</span>&#160; </div>
<div class="line"><a name="l03108"></a><span class="lineno"> 3108</span>&#160;<span class="keyword">import</span> gettext</div>
<div class="line"><a name="l03109"></a><span class="lineno"> 3109</span>&#160; </div>
<div class="line"><a name="l03110"></a><span class="lineno"> 3110</span>&#160; </div>
<div class="line"><a name="l03111"></a><span class="lineno"> 3111</span>&#160;<span class="keyword">class </span>Translator(object):</div>
<div class="line"><a name="l03112"></a><span class="lineno"> 3112</span>&#160;  <span class="stringliteral">&quot;Reads the configuration file and tries to find a translation.&quot;</span></div>
<div class="line"><a name="l03113"></a><span class="lineno"> 3113</span>&#160;  <span class="stringliteral">&quot;Otherwise falls back to the messages in the config file.&quot;</span></div>
<div class="line"><a name="l03114"></a><span class="lineno"> 3114</span>&#160; </div>
<div class="line"><a name="l03115"></a><span class="lineno"> 3115</span>&#160;  instance = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03116"></a><span class="lineno"> 3116</span>&#160; </div>
<div class="line"><a name="l03117"></a><span class="lineno"> 3117</span>&#160;  <span class="keyword">def </span>translate(cls, key):</div>
<div class="line"><a name="l03118"></a><span class="lineno"> 3118</span>&#160;    <span class="stringliteral">&quot;Get the translated message for a key.&quot;</span></div>
<div class="line"><a name="l03119"></a><span class="lineno"> 3119</span>&#160;    <span class="keywordflow">return</span> cls.instance.getmessage(key)</div>
<div class="line"><a name="l03120"></a><span class="lineno"> 3120</span>&#160; </div>
<div class="line"><a name="l03121"></a><span class="lineno"> 3121</span>&#160;  translate = classmethod(translate)</div>
<div class="line"><a name="l03122"></a><span class="lineno"> 3122</span>&#160; </div>
<div class="line"><a name="l03123"></a><span class="lineno"> 3123</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03124"></a><span class="lineno"> 3124</span>&#160;    self.translation = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03125"></a><span class="lineno"> 3125</span>&#160;    self.first = <span class="keyword">True</span></div>
<div class="line"><a name="l03126"></a><span class="lineno"> 3126</span>&#160; </div>
<div class="line"><a name="l03127"></a><span class="lineno"> 3127</span>&#160;  <span class="keyword">def </span>findtranslation(self):</div>
<div class="line"><a name="l03128"></a><span class="lineno"> 3128</span>&#160;    <span class="stringliteral">&quot;Find the translation for the document language.&quot;</span></div>
<div class="line"><a name="l03129"></a><span class="lineno"> 3129</span>&#160;    self.langcodes = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03130"></a><span class="lineno"> 3130</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> DocumentParameters.language:</div>
<div class="line"><a name="l03131"></a><span class="lineno"> 3131</span>&#160;      Trace.error(<span class="stringliteral">&#39;No language in document&#39;</span>)</div>
<div class="line"><a name="l03132"></a><span class="lineno"> 3132</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03133"></a><span class="lineno"> 3133</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> DocumentParameters.language <span class="keywordflow">in</span> TranslationConfig.languages:</div>
<div class="line"><a name="l03134"></a><span class="lineno"> 3134</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unknown language &#39;</span> + DocumentParameters.language)</div>
<div class="line"><a name="l03135"></a><span class="lineno"> 3135</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03136"></a><span class="lineno"> 3136</span>&#160;    <span class="keywordflow">if</span> TranslationConfig.languages[DocumentParameters.language] == <span class="stringliteral">&#39;en&#39;</span>:</div>
<div class="line"><a name="l03137"></a><span class="lineno"> 3137</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03138"></a><span class="lineno"> 3138</span>&#160;    langcodes = [TranslationConfig.languages[DocumentParameters.language]]</div>
<div class="line"><a name="l03139"></a><span class="lineno"> 3139</span>&#160;    <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l03140"></a><span class="lineno"> 3140</span>&#160;      self.translation = gettext.translation(<span class="stringliteral">&#39;elyxer&#39;</span>, <span class="keywordtype">None</span>, langcodes)</div>
<div class="line"><a name="l03141"></a><span class="lineno"> 3141</span>&#160;    <span class="keywordflow">except</span> IOError:</div>
<div class="line"><a name="l03142"></a><span class="lineno"> 3142</span>&#160;      Trace.error(<span class="stringliteral">&#39;No translation for &#39;</span> + unicode(langcodes))</div>
<div class="line"><a name="l03143"></a><span class="lineno"> 3143</span>&#160; </div>
<div class="line"><a name="l03144"></a><span class="lineno"> 3144</span>&#160;  <span class="keyword">def </span>getmessage(self, key):</div>
<div class="line"><a name="l03145"></a><span class="lineno"> 3145</span>&#160;    <span class="stringliteral">&quot;Get the translated message for the given key.&quot;</span></div>
<div class="line"><a name="l03146"></a><span class="lineno"> 3146</span>&#160;    <span class="keywordflow">if</span> self.first:</div>
<div class="line"><a name="l03147"></a><span class="lineno"> 3147</span>&#160;      self.findtranslation()</div>
<div class="line"><a name="l03148"></a><span class="lineno"> 3148</span>&#160;      self.first = <span class="keyword">False</span></div>
<div class="line"><a name="l03149"></a><span class="lineno"> 3149</span>&#160;    message = self.getuntranslated(key)</div>
<div class="line"><a name="l03150"></a><span class="lineno"> 3150</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.translation:</div>
<div class="line"><a name="l03151"></a><span class="lineno"> 3151</span>&#160;      <span class="keywordflow">return</span> message</div>
<div class="line"><a name="l03152"></a><span class="lineno"> 3152</span>&#160;    <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l03153"></a><span class="lineno"> 3153</span>&#160;      message = self.translation.ugettext(message)</div>
<div class="line"><a name="l03154"></a><span class="lineno"> 3154</span>&#160;    <span class="keywordflow">except</span> IOError:</div>
<div class="line"><a name="l03155"></a><span class="lineno"> 3155</span>&#160;      <span class="keywordflow">pass</span></div>
<div class="line"><a name="l03156"></a><span class="lineno"> 3156</span>&#160;    <span class="keywordflow">return</span> message</div>
<div class="line"><a name="l03157"></a><span class="lineno"> 3157</span>&#160; </div>
<div class="line"><a name="l03158"></a><span class="lineno"> 3158</span>&#160;  <span class="keyword">def </span>getuntranslated(self, key):</div>
<div class="line"><a name="l03159"></a><span class="lineno"> 3159</span>&#160;    <span class="stringliteral">&quot;Get the untranslated message.&quot;</span></div>
<div class="line"><a name="l03160"></a><span class="lineno"> 3160</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> key <span class="keywordflow">in</span> TranslationConfig.constants:</div>
<div class="line"><a name="l03161"></a><span class="lineno"> 3161</span>&#160;      Trace.error(<span class="stringliteral">&#39;Cannot translate &#39;</span> + key)</div>
<div class="line"><a name="l03162"></a><span class="lineno"> 3162</span>&#160;      <span class="keywordflow">return</span> key</div>
<div class="line"><a name="l03163"></a><span class="lineno"> 3163</span>&#160;    <span class="keywordflow">return</span> TranslationConfig.constants[key]</div>
<div class="line"><a name="l03164"></a><span class="lineno"> 3164</span>&#160; </div>
<div class="line"><a name="l03165"></a><span class="lineno"> 3165</span>&#160;Translator.instance = Translator()</div>
<div class="line"><a name="l03166"></a><span class="lineno"> 3166</span>&#160; </div>
<div class="line"><a name="l03167"></a><span class="lineno"> 3167</span>&#160; </div>
<div class="line"><a name="l03168"></a><span class="lineno"> 3168</span>&#160; </div>
<div class="line"><a name="l03169"></a><span class="lineno"> 3169</span>&#160;<span class="keyword">class </span>NumberCounter(object):</div>
<div class="line"><a name="l03170"></a><span class="lineno"> 3170</span>&#160;  <span class="stringliteral">&quot;A counter for numbers (by default).&quot;</span></div>
<div class="line"><a name="l03171"></a><span class="lineno"> 3171</span>&#160;  <span class="stringliteral">&quot;The type can be changed to return letters, roman numbers...&quot;</span></div>
<div class="line"><a name="l03172"></a><span class="lineno"> 3172</span>&#160; </div>
<div class="line"><a name="l03173"></a><span class="lineno"> 3173</span>&#160;  name = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03174"></a><span class="lineno"> 3174</span>&#160;  value = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03175"></a><span class="lineno"> 3175</span>&#160;  mode = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03176"></a><span class="lineno"> 3176</span>&#160;  master = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03177"></a><span class="lineno"> 3177</span>&#160; </div>
<div class="line"><a name="l03178"></a><span class="lineno"> 3178</span>&#160;  letters = <span class="stringliteral">&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;</span></div>
<div class="line"><a name="l03179"></a><span class="lineno"> 3179</span>&#160;  symbols = NumberingConfig.sequence[<span class="stringliteral">&#39;symbols&#39;</span>]</div>
<div class="line"><a name="l03180"></a><span class="lineno"> 3180</span>&#160;  romannumerals = [</div>
<div class="line"><a name="l03181"></a><span class="lineno"> 3181</span>&#160;      (<span class="stringliteral">&#39;M&#39;</span>, 1000), (<span class="stringliteral">&#39;CM&#39;</span>, 900), (<span class="stringliteral">&#39;D&#39;</span>, 500), (<span class="stringliteral">&#39;CD&#39;</span>, 400), (<span class="stringliteral">&#39;C&#39;</span>, 100),</div>
<div class="line"><a name="l03182"></a><span class="lineno"> 3182</span>&#160;      (<span class="stringliteral">&#39;XC&#39;</span>, 90), (<span class="stringliteral">&#39;L&#39;</span>, 50), (<span class="stringliteral">&#39;XL&#39;</span>, 40), (<span class="stringliteral">&#39;X&#39;</span>, 10), (<span class="stringliteral">&#39;IX&#39;</span>, 9), (<span class="stringliteral">&#39;V&#39;</span>, 5),</div>
<div class="line"><a name="l03183"></a><span class="lineno"> 3183</span>&#160;      (<span class="stringliteral">&#39;IV&#39;</span>, 4), (<span class="stringliteral">&#39;I&#39;</span>, 1)</div>
<div class="line"><a name="l03184"></a><span class="lineno"> 3184</span>&#160;      ]</div>
<div class="line"><a name="l03185"></a><span class="lineno"> 3185</span>&#160; </div>
<div class="line"><a name="l03186"></a><span class="lineno"> 3186</span>&#160;  <span class="keyword">def </span>__init__(self, name):</div>
<div class="line"><a name="l03187"></a><span class="lineno"> 3187</span>&#160;    <span class="stringliteral">&quot;Give a name to the counter.&quot;</span></div>
<div class="line"><a name="l03188"></a><span class="lineno"> 3188</span>&#160;    self.name = name</div>
<div class="line"><a name="l03189"></a><span class="lineno"> 3189</span>&#160; </div>
<div class="line"><a name="l03190"></a><span class="lineno"> 3190</span>&#160;  <span class="keyword">def </span>setmode(self, mode):</div>
<div class="line"><a name="l03191"></a><span class="lineno"> 3191</span>&#160;    <span class="stringliteral">&quot;Set the counter mode. Can be changed at runtime.&quot;</span></div>
<div class="line"><a name="l03192"></a><span class="lineno"> 3192</span>&#160;    self.mode = mode</div>
<div class="line"><a name="l03193"></a><span class="lineno"> 3193</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l03194"></a><span class="lineno"> 3194</span>&#160; </div>
<div class="line"><a name="l03195"></a><span class="lineno"> 3195</span>&#160;  <span class="keyword">def </span>init(self, value):</div>
<div class="line"><a name="l03196"></a><span class="lineno"> 3196</span>&#160;    <span class="stringliteral">&quot;Set an initial value.&quot;</span></div>
<div class="line"><a name="l03197"></a><span class="lineno"> 3197</span>&#160;    self.value = value</div>
<div class="line"><a name="l03198"></a><span class="lineno"> 3198</span>&#160; </div>
<div class="line"><a name="l03199"></a><span class="lineno"> 3199</span>&#160;  <span class="keyword">def </span>gettext(self):</div>
<div class="line"><a name="l03200"></a><span class="lineno"> 3200</span>&#160;    <span class="stringliteral">&quot;Get the next value as a text string.&quot;</span></div>
<div class="line"><a name="l03201"></a><span class="lineno"> 3201</span>&#160;    <span class="keywordflow">return</span> unicode(self.value)</div>
<div class="line"><a name="l03202"></a><span class="lineno"> 3202</span>&#160; </div>
<div class="line"><a name="l03203"></a><span class="lineno"> 3203</span>&#160;  <span class="keyword">def </span>getletter(self):</div>
<div class="line"><a name="l03204"></a><span class="lineno"> 3204</span>&#160;    <span class="stringliteral">&quot;Get the next value as a letter.&quot;</span></div>
<div class="line"><a name="l03205"></a><span class="lineno"> 3205</span>&#160;    <span class="keywordflow">return</span> self.getsequence(self.letters)</div>
<div class="line"><a name="l03206"></a><span class="lineno"> 3206</span>&#160; </div>
<div class="line"><a name="l03207"></a><span class="lineno"> 3207</span>&#160;  <span class="keyword">def </span>getsymbol(self):</div>
<div class="line"><a name="l03208"></a><span class="lineno"> 3208</span>&#160;    <span class="stringliteral">&quot;Get the next value as a symbol.&quot;</span></div>
<div class="line"><a name="l03209"></a><span class="lineno"> 3209</span>&#160;    <span class="keywordflow">return</span> self.getsequence(self.symbols)</div>
<div class="line"><a name="l03210"></a><span class="lineno"> 3210</span>&#160; </div>
<div class="line"><a name="l03211"></a><span class="lineno"> 3211</span>&#160;  <span class="keyword">def </span>getsequence(self, sequence):</div>
<div class="line"><a name="l03212"></a><span class="lineno"> 3212</span>&#160;    <span class="stringliteral">&quot;Get the next value from elyxer.a sequence.&quot;</span></div>
<div class="line"><a name="l03213"></a><span class="lineno"> 3213</span>&#160;    <span class="keywordflow">return</span> sequence[(self.value - 1) % len(sequence)]</div>
<div class="line"><a name="l03214"></a><span class="lineno"> 3214</span>&#160; </div>
<div class="line"><a name="l03215"></a><span class="lineno"> 3215</span>&#160;  <span class="keyword">def </span>getroman(self):</div>
<div class="line"><a name="l03216"></a><span class="lineno"> 3216</span>&#160;    <span class="stringliteral">&quot;Get the next value as a roman number.&quot;</span></div>
<div class="line"><a name="l03217"></a><span class="lineno"> 3217</span>&#160;    result = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l03218"></a><span class="lineno"> 3218</span>&#160;    number = self.value</div>
<div class="line"><a name="l03219"></a><span class="lineno"> 3219</span>&#160;    <span class="keywordflow">for</span> numeral, value <span class="keywordflow">in</span> self.romannumerals:</div>
<div class="line"><a name="l03220"></a><span class="lineno"> 3220</span>&#160;      <span class="keywordflow">if</span> number &gt;= value:</div>
<div class="line"><a name="l03221"></a><span class="lineno"> 3221</span>&#160;        result += numeral * (number / value)</div>
<div class="line"><a name="l03222"></a><span class="lineno"> 3222</span>&#160;        number = number % value</div>
<div class="line"><a name="l03223"></a><span class="lineno"> 3223</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l03224"></a><span class="lineno"> 3224</span>&#160; </div>
<div class="line"><a name="l03225"></a><span class="lineno"> 3225</span>&#160;  <span class="keyword">def </span>getvalue(self):</div>
<div class="line"><a name="l03226"></a><span class="lineno"> 3226</span>&#160;    <span class="stringliteral">&quot;Get the current value as configured in the current mode.&quot;</span></div>
<div class="line"><a name="l03227"></a><span class="lineno"> 3227</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.mode <span class="keywordflow">or</span> self.mode <span class="keywordflow">in</span> [<span class="stringliteral">&#39;text&#39;</span>, <span class="stringliteral">&#39;1&#39;</span>]:</div>
<div class="line"><a name="l03228"></a><span class="lineno"> 3228</span>&#160;      <span class="keywordflow">return</span> self.gettext()</div>
<div class="line"><a name="l03229"></a><span class="lineno"> 3229</span>&#160;    <span class="keywordflow">if</span> self.mode == <span class="stringliteral">&#39;A&#39;</span>:</div>
<div class="line"><a name="l03230"></a><span class="lineno"> 3230</span>&#160;      <span class="keywordflow">return</span> self.getletter()</div>
<div class="line"><a name="l03231"></a><span class="lineno"> 3231</span>&#160;    <span class="keywordflow">if</span> self.mode == <span class="stringliteral">&#39;a&#39;</span>:</div>
<div class="line"><a name="l03232"></a><span class="lineno"> 3232</span>&#160;      <span class="keywordflow">return</span> self.getletter().lower()</div>
<div class="line"><a name="l03233"></a><span class="lineno"> 3233</span>&#160;    <span class="keywordflow">if</span> self.mode == <span class="stringliteral">&#39;I&#39;</span>:</div>
<div class="line"><a name="l03234"></a><span class="lineno"> 3234</span>&#160;      <span class="keywordflow">return</span> self.getroman()</div>
<div class="line"><a name="l03235"></a><span class="lineno"> 3235</span>&#160;    <span class="keywordflow">if</span> self.mode == <span class="stringliteral">&#39;*&#39;</span>:</div>
<div class="line"><a name="l03236"></a><span class="lineno"> 3236</span>&#160;      <span class="keywordflow">return</span> self.getsymbol()</div>
<div class="line"><a name="l03237"></a><span class="lineno"> 3237</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unknown counter mode &#39;</span> + self.mode)</div>
<div class="line"><a name="l03238"></a><span class="lineno"> 3238</span>&#160;    <span class="keywordflow">return</span> self.gettext()</div>
<div class="line"><a name="l03239"></a><span class="lineno"> 3239</span>&#160; </div>
<div class="line"><a name="l03240"></a><span class="lineno"> 3240</span>&#160;  <span class="keyword">def </span>getnext(self):</div>
<div class="line"><a name="l03241"></a><span class="lineno"> 3241</span>&#160;    <span class="stringliteral">&quot;Increase the current value and get the next value as configured.&quot;</span></div>
<div class="line"><a name="l03242"></a><span class="lineno"> 3242</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.value:</div>
<div class="line"><a name="l03243"></a><span class="lineno"> 3243</span>&#160;      self.value = 0</div>
<div class="line"><a name="l03244"></a><span class="lineno"> 3244</span>&#160;    self.value += 1</div>
<div class="line"><a name="l03245"></a><span class="lineno"> 3245</span>&#160;    <span class="keywordflow">return</span> self.getvalue()</div>
<div class="line"><a name="l03246"></a><span class="lineno"> 3246</span>&#160; </div>
<div class="line"><a name="l03247"></a><span class="lineno"> 3247</span>&#160;  <span class="keyword">def </span>reset(self):</div>
<div class="line"><a name="l03248"></a><span class="lineno"> 3248</span>&#160;    <span class="stringliteral">&quot;Reset the counter.&quot;</span></div>
<div class="line"><a name="l03249"></a><span class="lineno"> 3249</span>&#160;    self.value = 0</div>
<div class="line"><a name="l03250"></a><span class="lineno"> 3250</span>&#160; </div>
<div class="line"><a name="l03251"></a><span class="lineno"> 3251</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l03252"></a><span class="lineno"> 3252</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l03253"></a><span class="lineno"> 3253</span>&#160;    result = <span class="stringliteral">&#39;Counter &#39;</span> + self.name</div>
<div class="line"><a name="l03254"></a><span class="lineno"> 3254</span>&#160;    <span class="keywordflow">if</span> self.mode:</div>
<div class="line"><a name="l03255"></a><span class="lineno"> 3255</span>&#160;      result += <span class="stringliteral">&#39; in mode &#39;</span> + self.mode</div>
<div class="line"><a name="l03256"></a><span class="lineno"> 3256</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l03257"></a><span class="lineno"> 3257</span>&#160; </div>
<div class="line"><a name="l03258"></a><span class="lineno"> 3258</span>&#160;<span class="keyword">class </span>DependentCounter(NumberCounter):</div>
<div class="line"><a name="l03259"></a><span class="lineno"> 3259</span>&#160;  <span class="stringliteral">&quot;A counter which depends on another one (the master).&quot;</span></div>
<div class="line"><a name="l03260"></a><span class="lineno"> 3260</span>&#160; </div>
<div class="line"><a name="l03261"></a><span class="lineno"> 3261</span>&#160;  <span class="keyword">def </span>setmaster(self, master):</div>
<div class="line"><a name="l03262"></a><span class="lineno"> 3262</span>&#160;    <span class="stringliteral">&quot;Set the master counter.&quot;</span></div>
<div class="line"><a name="l03263"></a><span class="lineno"> 3263</span>&#160;    self.master = master</div>
<div class="line"><a name="l03264"></a><span class="lineno"> 3264</span>&#160;    self.last = self.master.getvalue()</div>
<div class="line"><a name="l03265"></a><span class="lineno"> 3265</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l03266"></a><span class="lineno"> 3266</span>&#160; </div>
<div class="line"><a name="l03267"></a><span class="lineno"> 3267</span>&#160;  <span class="keyword">def </span>getnext(self):</div>
<div class="line"><a name="l03268"></a><span class="lineno"> 3268</span>&#160;    <span class="stringliteral">&quot;Increase or, if the master counter has changed, restart.&quot;</span></div>
<div class="line"><a name="l03269"></a><span class="lineno"> 3269</span>&#160;    <span class="keywordflow">if</span> self.last != self.master.getvalue():</div>
<div class="line"><a name="l03270"></a><span class="lineno"> 3270</span>&#160;      self.reset()</div>
<div class="line"><a name="l03271"></a><span class="lineno"> 3271</span>&#160;    value = NumberCounter.getnext(self)</div>
<div class="line"><a name="l03272"></a><span class="lineno"> 3272</span>&#160;    self.last = self.master.getvalue()</div>
<div class="line"><a name="l03273"></a><span class="lineno"> 3273</span>&#160;    <span class="keywordflow">return</span> value</div>
<div class="line"><a name="l03274"></a><span class="lineno"> 3274</span>&#160; </div>
<div class="line"><a name="l03275"></a><span class="lineno"> 3275</span>&#160;  <span class="keyword">def </span>getvalue(self):</div>
<div class="line"><a name="l03276"></a><span class="lineno"> 3276</span>&#160;    <span class="stringliteral">&quot;Get the value of the combined counter: master.dependent.&quot;</span></div>
<div class="line"><a name="l03277"></a><span class="lineno"> 3277</span>&#160;    <span class="keywordflow">return</span> self.master.getvalue() + <span class="stringliteral">&#39;.&#39;</span> + NumberCounter.getvalue(self)</div>
<div class="line"><a name="l03278"></a><span class="lineno"> 3278</span>&#160; </div>
<div class="line"><a name="l03279"></a><span class="lineno"> 3279</span>&#160;<span class="keyword">class </span>NumberGenerator(object):</div>
<div class="line"><a name="l03280"></a><span class="lineno"> 3280</span>&#160;  <span class="stringliteral">&quot;A number generator for unique sequences and hierarchical structures. Used in:&quot;</span></div>
<div class="line"><a name="l03281"></a><span class="lineno"> 3281</span>&#160;  <span class="stringliteral">&quot;  * ordered part numbers: Chapter 3, Section 5.3.&quot;</span></div>
<div class="line"><a name="l03282"></a><span class="lineno"> 3282</span>&#160;  <span class="stringliteral">&quot;  * unique part numbers: Footnote 15, Bibliography cite [15].&quot;</span></div>
<div class="line"><a name="l03283"></a><span class="lineno"> 3283</span>&#160;  <span class="stringliteral">&quot;  * chaptered part numbers: Figure 3.15, Equation (8.3).&quot;</span></div>
<div class="line"><a name="l03284"></a><span class="lineno"> 3284</span>&#160;  <span class="stringliteral">&quot;  * unique roman part numbers: Part I, Book IV.&quot;</span></div>
<div class="line"><a name="l03285"></a><span class="lineno"> 3285</span>&#160; </div>
<div class="line"><a name="l03286"></a><span class="lineno"> 3286</span>&#160;  chaptered = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03287"></a><span class="lineno"> 3287</span>&#160;  generator = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03288"></a><span class="lineno"> 3288</span>&#160; </div>
<div class="line"><a name="l03289"></a><span class="lineno"> 3289</span>&#160;  romanlayouts = [x.lower() <span class="keywordflow">for</span> x <span class="keywordflow">in</span> NumberingConfig.layouts[<span class="stringliteral">&#39;roman&#39;</span>]]</div>
<div class="line"><a name="l03290"></a><span class="lineno"> 3290</span>&#160;  orderedlayouts = [x.lower() <span class="keywordflow">for</span> x <span class="keywordflow">in</span> NumberingConfig.layouts[<span class="stringliteral">&#39;ordered&#39;</span>]]</div>
<div class="line"><a name="l03291"></a><span class="lineno"> 3291</span>&#160; </div>
<div class="line"><a name="l03292"></a><span class="lineno"> 3292</span>&#160;  counters = dict()</div>
<div class="line"><a name="l03293"></a><span class="lineno"> 3293</span>&#160;  appendix = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03294"></a><span class="lineno"> 3294</span>&#160; </div>
<div class="line"><a name="l03295"></a><span class="lineno"> 3295</span>&#160;  <span class="keyword">def </span>deasterisk(self, type):</div>
<div class="line"><a name="l03296"></a><span class="lineno"> 3296</span>&#160;    <span class="stringliteral">&quot;Remove the possible asterisk in a layout type.&quot;</span></div>
<div class="line"><a name="l03297"></a><span class="lineno"> 3297</span>&#160;    <span class="keywordflow">return</span> type.replace(<span class="stringliteral">&#39;*&#39;</span>, <span class="stringliteral">&#39;&#39;</span>)</div>
<div class="line"><a name="l03298"></a><span class="lineno"> 3298</span>&#160; </div>
<div class="line"><a name="l03299"></a><span class="lineno"> 3299</span>&#160;  <span class="keyword">def </span>isunique(self, type):</div>
<div class="line"><a name="l03300"></a><span class="lineno"> 3300</span>&#160;    <span class="stringliteral">&quot;Find out if the layout type corresponds to a unique part.&quot;</span></div>
<div class="line"><a name="l03301"></a><span class="lineno"> 3301</span>&#160;    <span class="keywordflow">return</span> self.isroman(type)</div>
<div class="line"><a name="l03302"></a><span class="lineno"> 3302</span>&#160; </div>
<div class="line"><a name="l03303"></a><span class="lineno"> 3303</span>&#160;  <span class="keyword">def </span>isroman(self, type):</div>
<div class="line"><a name="l03304"></a><span class="lineno"> 3304</span>&#160;    <span class="stringliteral">&quot;Find out if the layout type should have roman numeration.&quot;</span></div>
<div class="line"><a name="l03305"></a><span class="lineno"> 3305</span>&#160;    <span class="keywordflow">return</span> self.deasterisk(type).lower() <span class="keywordflow">in</span> self.romanlayouts</div>
<div class="line"><a name="l03306"></a><span class="lineno"> 3306</span>&#160; </div>
<div class="line"><a name="l03307"></a><span class="lineno"> 3307</span>&#160;  <span class="keyword">def </span>isinordered(self, type):</div>
<div class="line"><a name="l03308"></a><span class="lineno"> 3308</span>&#160;    <span class="stringliteral">&quot;Find out if the layout type corresponds to an (un)ordered part.&quot;</span></div>
<div class="line"><a name="l03309"></a><span class="lineno"> 3309</span>&#160;    <span class="keywordflow">return</span> self.deasterisk(type).lower() <span class="keywordflow">in</span> self.orderedlayouts</div>
<div class="line"><a name="l03310"></a><span class="lineno"> 3310</span>&#160; </div>
<div class="line"><a name="l03311"></a><span class="lineno"> 3311</span>&#160;  <span class="keyword">def </span>isnumbered(self, type):</div>
<div class="line"><a name="l03312"></a><span class="lineno"> 3312</span>&#160;    <span class="stringliteral">&quot;Find out if the type for a layout corresponds to a numbered layout.&quot;</span></div>
<div class="line"><a name="l03313"></a><span class="lineno"> 3313</span>&#160;    <span class="keywordflow">if</span> <span class="stringliteral">&#39;*&#39;</span> <span class="keywordflow">in</span> type:</div>
<div class="line"><a name="l03314"></a><span class="lineno"> 3314</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l03315"></a><span class="lineno"> 3315</span>&#160;    <span class="keywordflow">if</span> self.isroman(type):</div>
<div class="line"><a name="l03316"></a><span class="lineno"> 3316</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l03317"></a><span class="lineno"> 3317</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.isinordered(type):</div>
<div class="line"><a name="l03318"></a><span class="lineno"> 3318</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l03319"></a><span class="lineno"> 3319</span>&#160;    <span class="keywordflow">if</span> self.getlevel(type) &gt; DocumentParameters.maxdepth:</div>
<div class="line"><a name="l03320"></a><span class="lineno"> 3320</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l03321"></a><span class="lineno"> 3321</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l03322"></a><span class="lineno"> 3322</span>&#160; </div>
<div class="line"><a name="l03323"></a><span class="lineno"> 3323</span>&#160;  <span class="keyword">def </span>isunordered(self, type):</div>
<div class="line"><a name="l03324"></a><span class="lineno"> 3324</span>&#160;    <span class="stringliteral">&quot;Find out if the type contains an asterisk, basically.&quot;</span></div>
<div class="line"><a name="l03325"></a><span class="lineno"> 3325</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;*&#39;</span> <span class="keywordflow">in</span> type</div>
<div class="line"><a name="l03326"></a><span class="lineno"> 3326</span>&#160; </div>
<div class="line"><a name="l03327"></a><span class="lineno"> 3327</span>&#160;  <span class="keyword">def </span>getlevel(self, type):</div>
<div class="line"><a name="l03328"></a><span class="lineno"> 3328</span>&#160;    <span class="stringliteral">&quot;Get the level that corresponds to a layout type.&quot;</span></div>
<div class="line"><a name="l03329"></a><span class="lineno"> 3329</span>&#160;    <span class="keywordflow">if</span> self.isunique(type):</div>
<div class="line"><a name="l03330"></a><span class="lineno"> 3330</span>&#160;      <span class="keywordflow">return</span> 0</div>
<div class="line"><a name="l03331"></a><span class="lineno"> 3331</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.isinordered(type):</div>
<div class="line"><a name="l03332"></a><span class="lineno"> 3332</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unknown layout type &#39;</span> + type)</div>
<div class="line"><a name="l03333"></a><span class="lineno"> 3333</span>&#160;      <span class="keywordflow">return</span> 0</div>
<div class="line"><a name="l03334"></a><span class="lineno"> 3334</span>&#160;    type = self.deasterisk(type).lower()</div>
<div class="line"><a name="l03335"></a><span class="lineno"> 3335</span>&#160;    level = self.orderedlayouts.index(type) + 1</div>
<div class="line"><a name="l03336"></a><span class="lineno"> 3336</span>&#160;    <span class="keywordflow">return</span> level - DocumentParameters.startinglevel</div>
<div class="line"><a name="l03337"></a><span class="lineno"> 3337</span>&#160; </div>
<div class="line"><a name="l03338"></a><span class="lineno"> 3338</span>&#160;  <span class="keyword">def </span>getparttype(self, type):</div>
<div class="line"><a name="l03339"></a><span class="lineno"> 3339</span>&#160;    <span class="stringliteral">&quot;Obtain the type for the part: without the asterisk, &quot;</span></div>
<div class="line"><a name="l03340"></a><span class="lineno"> 3340</span>&#160;    <span class="stringliteral">&quot;and switched to Appendix if necessary.&quot;</span></div>
<div class="line"><a name="l03341"></a><span class="lineno"> 3341</span>&#160;    <span class="keywordflow">if</span> NumberGenerator.appendix <span class="keywordflow">and</span> self.getlevel(type) == 1:</div>
<div class="line"><a name="l03342"></a><span class="lineno"> 3342</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;Appendix&#39;</span></div>
<div class="line"><a name="l03343"></a><span class="lineno"> 3343</span>&#160;    <span class="keywordflow">return</span> self.deasterisk(type)</div>
<div class="line"><a name="l03344"></a><span class="lineno"> 3344</span>&#160; </div>
<div class="line"><a name="l03345"></a><span class="lineno"> 3345</span>&#160;  <span class="keyword">def </span>generate(self, type):</div>
<div class="line"><a name="l03346"></a><span class="lineno"> 3346</span>&#160;    <span class="stringliteral">&quot;Generate a number for a layout type.&quot;</span></div>
<div class="line"><a name="l03347"></a><span class="lineno"> 3347</span>&#160;    <span class="stringliteral">&quot;Unique part types such as Part or Book generate roman numbers: Part I.&quot;</span></div>
<div class="line"><a name="l03348"></a><span class="lineno"> 3348</span>&#160;    <span class="stringliteral">&quot;Ordered part types return dot-separated tuples: Chapter 5, Subsection 2.3.5.&quot;</span></div>
<div class="line"><a name="l03349"></a><span class="lineno"> 3349</span>&#160;    <span class="stringliteral">&quot;Everything else generates unique numbers: Bibliography [1].&quot;</span></div>
<div class="line"><a name="l03350"></a><span class="lineno"> 3350</span>&#160;    <span class="stringliteral">&quot;Each invocation results in a new number.&quot;</span></div>
<div class="line"><a name="l03351"></a><span class="lineno"> 3351</span>&#160;    <span class="keywordflow">return</span> self.getcounter(type).getnext()</div>
<div class="line"><a name="l03352"></a><span class="lineno"> 3352</span>&#160; </div>
<div class="line"><a name="l03353"></a><span class="lineno"> 3353</span>&#160;  <span class="keyword">def </span>getcounter(self, type):</div>
<div class="line"><a name="l03354"></a><span class="lineno"> 3354</span>&#160;    <span class="stringliteral">&quot;Get the counter for the given type.&quot;</span></div>
<div class="line"><a name="l03355"></a><span class="lineno"> 3355</span>&#160;    type = type.lower()</div>
<div class="line"><a name="l03356"></a><span class="lineno"> 3356</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> type <span class="keywordflow">in</span> self.counters:</div>
<div class="line"><a name="l03357"></a><span class="lineno"> 3357</span>&#160;      self.counters[type] = self.create(type)</div>
<div class="line"><a name="l03358"></a><span class="lineno"> 3358</span>&#160;    <span class="keywordflow">return</span> self.counters[type]</div>
<div class="line"><a name="l03359"></a><span class="lineno"> 3359</span>&#160; </div>
<div class="line"><a name="l03360"></a><span class="lineno"> 3360</span>&#160;  <span class="keyword">def </span>create(self, type):</div>
<div class="line"><a name="l03361"></a><span class="lineno"> 3361</span>&#160;    <span class="stringliteral">&quot;Create a counter for the given type.&quot;</span></div>
<div class="line"><a name="l03362"></a><span class="lineno"> 3362</span>&#160;    <span class="keywordflow">if</span> self.isnumbered(type) <span class="keywordflow">and</span> self.getlevel(type) &gt; 1:</div>
<div class="line"><a name="l03363"></a><span class="lineno"> 3363</span>&#160;      index = self.orderedlayouts.index(type)</div>
<div class="line"><a name="l03364"></a><span class="lineno"> 3364</span>&#160;      above = self.orderedlayouts[index - 1]</div>
<div class="line"><a name="l03365"></a><span class="lineno"> 3365</span>&#160;      master = self.getcounter(above)</div>
<div class="line"><a name="l03366"></a><span class="lineno"> 3366</span>&#160;      <span class="keywordflow">return</span> self.createdependent(type, master)</div>
<div class="line"><a name="l03367"></a><span class="lineno"> 3367</span>&#160;    counter = NumberCounter(type)</div>
<div class="line"><a name="l03368"></a><span class="lineno"> 3368</span>&#160;    <span class="keywordflow">if</span> self.isroman(type):</div>
<div class="line"><a name="l03369"></a><span class="lineno"> 3369</span>&#160;      counter.setmode(<span class="stringliteral">&#39;I&#39;</span>)</div>
<div class="line"><a name="l03370"></a><span class="lineno"> 3370</span>&#160;    <span class="keywordflow">return</span> counter</div>
<div class="line"><a name="l03371"></a><span class="lineno"> 3371</span>&#160; </div>
<div class="line"><a name="l03372"></a><span class="lineno"> 3372</span>&#160;  <span class="keyword">def </span>getdependentcounter(self, type, master):</div>
<div class="line"><a name="l03373"></a><span class="lineno"> 3373</span>&#160;    <span class="stringliteral">&quot;Get (or create) a counter of the given type that depends on another.&quot;</span></div>
<div class="line"><a name="l03374"></a><span class="lineno"> 3374</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> type <span class="keywordflow">in</span> self.counters <span class="keywordflow">or</span> <span class="keywordflow">not</span> self.counters[type].master:</div>
<div class="line"><a name="l03375"></a><span class="lineno"> 3375</span>&#160;      self.counters[type] = self.createdependent(type, master)</div>
<div class="line"><a name="l03376"></a><span class="lineno"> 3376</span>&#160;    <span class="keywordflow">return</span> self.counters[type]</div>
<div class="line"><a name="l03377"></a><span class="lineno"> 3377</span>&#160; </div>
<div class="line"><a name="l03378"></a><span class="lineno"> 3378</span>&#160;  <span class="keyword">def </span>createdependent(self, type, master):</div>
<div class="line"><a name="l03379"></a><span class="lineno"> 3379</span>&#160;    <span class="stringliteral">&quot;Create a dependent counter given the master.&quot;</span></div>
<div class="line"><a name="l03380"></a><span class="lineno"> 3380</span>&#160;    <span class="keywordflow">return</span> DependentCounter(type).setmaster(master)</div>
<div class="line"><a name="l03381"></a><span class="lineno"> 3381</span>&#160; </div>
<div class="line"><a name="l03382"></a><span class="lineno"> 3382</span>&#160;  <span class="keyword">def </span>startappendix(self):</div>
<div class="line"><a name="l03383"></a><span class="lineno"> 3383</span>&#160;    <span class="stringliteral">&quot;Start appendices here.&quot;</span></div>
<div class="line"><a name="l03384"></a><span class="lineno"> 3384</span>&#160;    firsttype = self.orderedlayouts[DocumentParameters.startinglevel]</div>
<div class="line"><a name="l03385"></a><span class="lineno"> 3385</span>&#160;    counter = self.getcounter(firsttype)</div>
<div class="line"><a name="l03386"></a><span class="lineno"> 3386</span>&#160;    counter.setmode(<span class="stringliteral">&#39;A&#39;</span>).reset()</div>
<div class="line"><a name="l03387"></a><span class="lineno"> 3387</span>&#160;    NumberGenerator.appendix = <span class="keyword">True</span></div>
<div class="line"><a name="l03388"></a><span class="lineno"> 3388</span>&#160; </div>
<div class="line"><a name="l03389"></a><span class="lineno"> 3389</span>&#160;<span class="keyword">class </span>ChapteredGenerator(NumberGenerator):</div>
<div class="line"><a name="l03390"></a><span class="lineno"> 3390</span>&#160;  <span class="stringliteral">&quot;Generate chaptered numbers, as in Chapter.Number.&quot;</span></div>
<div class="line"><a name="l03391"></a><span class="lineno"> 3391</span>&#160;  <span class="stringliteral">&quot;Used in equations, figures: Equation (5.3), figure 8.15.&quot;</span></div>
<div class="line"><a name="l03392"></a><span class="lineno"> 3392</span>&#160; </div>
<div class="line"><a name="l03393"></a><span class="lineno"> 3393</span>&#160;  <span class="keyword">def </span>generate(self, type):</div>
<div class="line"><a name="l03394"></a><span class="lineno"> 3394</span>&#160;    <span class="stringliteral">&quot;Generate a number which goes with first-level numbers (chapters). &quot;</span></div>
<div class="line"><a name="l03395"></a><span class="lineno"> 3395</span>&#160;    <span class="stringliteral">&quot;For the article classes a unique number is generated.&quot;</span></div>
<div class="line"><a name="l03396"></a><span class="lineno"> 3396</span>&#160;    <span class="keywordflow">if</span> DocumentParameters.startinglevel &gt; 0:</div>
<div class="line"><a name="l03397"></a><span class="lineno"> 3397</span>&#160;      <span class="keywordflow">return</span> NumberGenerator.generator.generate(type)</div>
<div class="line"><a name="l03398"></a><span class="lineno"> 3398</span>&#160;    chapter = self.getcounter(<span class="stringliteral">&#39;Chapter&#39;</span>)</div>
<div class="line"><a name="l03399"></a><span class="lineno"> 3399</span>&#160;    <span class="keywordflow">return</span> self.getdependentcounter(type, chapter).getnext()</div>
<div class="line"><a name="l03400"></a><span class="lineno"> 3400</span>&#160; </div>
<div class="line"><a name="l03401"></a><span class="lineno"> 3401</span>&#160; </div>
<div class="line"><a name="l03402"></a><span class="lineno"> 3402</span>&#160;NumberGenerator.chaptered = ChapteredGenerator()</div>
<div class="line"><a name="l03403"></a><span class="lineno"> 3403</span>&#160;NumberGenerator.generator = NumberGenerator()</div>
<div class="line"><a name="l03404"></a><span class="lineno"> 3404</span>&#160; </div>
<div class="line"><a name="l03405"></a><span class="lineno"> 3405</span>&#160; </div>
<div class="line"><a name="l03406"></a><span class="lineno"> 3406</span>&#160; </div>
<div class="line"><a name="l03407"></a><span class="lineno"> 3407</span>&#160; </div>
<div class="line"><a name="l03408"></a><span class="lineno"> 3408</span>&#160; </div>
<div class="line"><a name="l03409"></a><span class="lineno"> 3409</span>&#160; </div>
<div class="line"><a name="l03410"></a><span class="lineno"> 3410</span>&#160;<span class="keyword">class </span>ContainerSize(object):</div>
<div class="line"><a name="l03411"></a><span class="lineno"> 3411</span>&#160;  <span class="stringliteral">&quot;The size of a container.&quot;</span></div>
<div class="line"><a name="l03412"></a><span class="lineno"> 3412</span>&#160; </div>
<div class="line"><a name="l03413"></a><span class="lineno"> 3413</span>&#160;  width = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03414"></a><span class="lineno"> 3414</span>&#160;  height = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03415"></a><span class="lineno"> 3415</span>&#160;  maxwidth = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03416"></a><span class="lineno"> 3416</span>&#160;  maxheight = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03417"></a><span class="lineno"> 3417</span>&#160;  scale = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03418"></a><span class="lineno"> 3418</span>&#160; </div>
<div class="line"><a name="l03419"></a><span class="lineno"> 3419</span>&#160;  <span class="keyword">def </span>set(self, width = None, height = None):</div>
<div class="line"><a name="l03420"></a><span class="lineno"> 3420</span>&#160;    <span class="stringliteral">&quot;Set the proper size with width and height.&quot;</span></div>
<div class="line"><a name="l03421"></a><span class="lineno"> 3421</span>&#160;    self.setvalue(<span class="stringliteral">&#39;width&#39;</span>, width)</div>
<div class="line"><a name="l03422"></a><span class="lineno"> 3422</span>&#160;    self.setvalue(<span class="stringliteral">&#39;height&#39;</span>, height)</div>
<div class="line"><a name="l03423"></a><span class="lineno"> 3423</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l03424"></a><span class="lineno"> 3424</span>&#160; </div>
<div class="line"><a name="l03425"></a><span class="lineno"> 3425</span>&#160;  <span class="keyword">def </span>setmax(self, maxwidth = None, maxheight = None):</div>
<div class="line"><a name="l03426"></a><span class="lineno"> 3426</span>&#160;    <span class="stringliteral">&quot;Set max width and/or height.&quot;</span></div>
<div class="line"><a name="l03427"></a><span class="lineno"> 3427</span>&#160;    self.setvalue(<span class="stringliteral">&#39;maxwidth&#39;</span>, maxwidth)</div>
<div class="line"><a name="l03428"></a><span class="lineno"> 3428</span>&#160;    self.setvalue(<span class="stringliteral">&#39;maxheight&#39;</span>, maxheight)</div>
<div class="line"><a name="l03429"></a><span class="lineno"> 3429</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l03430"></a><span class="lineno"> 3430</span>&#160; </div>
<div class="line"><a name="l03431"></a><span class="lineno"> 3431</span>&#160;  <span class="keyword">def </span>readparameters(self, container):</div>
<div class="line"><a name="l03432"></a><span class="lineno"> 3432</span>&#160;    <span class="stringliteral">&quot;Read some size parameters off a container.&quot;</span></div>
<div class="line"><a name="l03433"></a><span class="lineno"> 3433</span>&#160;    self.setparameter(container, <span class="stringliteral">&#39;width&#39;</span>)</div>
<div class="line"><a name="l03434"></a><span class="lineno"> 3434</span>&#160;    self.setparameter(container, <span class="stringliteral">&#39;height&#39;</span>)</div>
<div class="line"><a name="l03435"></a><span class="lineno"> 3435</span>&#160;    self.setparameter(container, <span class="stringliteral">&#39;scale&#39;</span>)</div>
<div class="line"><a name="l03436"></a><span class="lineno"> 3436</span>&#160;    self.checkvalidheight(container)</div>
<div class="line"><a name="l03437"></a><span class="lineno"> 3437</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l03438"></a><span class="lineno"> 3438</span>&#160; </div>
<div class="line"><a name="l03439"></a><span class="lineno"> 3439</span>&#160;  <span class="keyword">def </span>setparameter(self, container, name):</div>
<div class="line"><a name="l03440"></a><span class="lineno"> 3440</span>&#160;    <span class="stringliteral">&quot;Read a size parameter off a container, and set it if present.&quot;</span></div>
<div class="line"><a name="l03441"></a><span class="lineno"> 3441</span>&#160;    value = container.getparameter(name)</div>
<div class="line"><a name="l03442"></a><span class="lineno"> 3442</span>&#160;    self.setvalue(name, value)</div>
<div class="line"><a name="l03443"></a><span class="lineno"> 3443</span>&#160; </div>
<div class="line"><a name="l03444"></a><span class="lineno"> 3444</span>&#160;  <span class="keyword">def </span>setvalue(self, name, value):</div>
<div class="line"><a name="l03445"></a><span class="lineno"> 3445</span>&#160;    <span class="stringliteral">&quot;Set the value of a parameter name, only if it&#39;s valid.&quot;</span></div>
<div class="line"><a name="l03446"></a><span class="lineno"> 3446</span>&#160;    value = self.processparameter(value)</div>
<div class="line"><a name="l03447"></a><span class="lineno"> 3447</span>&#160;    <span class="keywordflow">if</span> value:</div>
<div class="line"><a name="l03448"></a><span class="lineno"> 3448</span>&#160;      setattr(self, name, value)</div>
<div class="line"><a name="l03449"></a><span class="lineno"> 3449</span>&#160; </div>
<div class="line"><a name="l03450"></a><span class="lineno"> 3450</span>&#160;  <span class="keyword">def </span>checkvalidheight(self, container):</div>
<div class="line"><a name="l03451"></a><span class="lineno"> 3451</span>&#160;    <span class="stringliteral">&quot;Check if the height parameter is valid; otherwise erase it.&quot;</span></div>
<div class="line"><a name="l03452"></a><span class="lineno"> 3452</span>&#160;    heightspecial = container.getparameter(<span class="stringliteral">&#39;height_special&#39;</span>)</div>
<div class="line"><a name="l03453"></a><span class="lineno"> 3453</span>&#160;    <span class="keywordflow">if</span> self.height <span class="keywordflow">and</span> self.extractnumber(self.height) == <span class="stringliteral">&#39;1&#39;</span> <span class="keywordflow">and</span> heightspecial == <span class="stringliteral">&#39;totalheight&#39;</span>:</div>
<div class="line"><a name="l03454"></a><span class="lineno"> 3454</span>&#160;      self.height = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03455"></a><span class="lineno"> 3455</span>&#160; </div>
<div class="line"><a name="l03456"></a><span class="lineno"> 3456</span>&#160;  <span class="keyword">def </span>processparameter(self, value):</div>
<div class="line"><a name="l03457"></a><span class="lineno"> 3457</span>&#160;    <span class="stringliteral">&quot;Do the full processing on a parameter.&quot;</span></div>
<div class="line"><a name="l03458"></a><span class="lineno"> 3458</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> value:</div>
<div class="line"><a name="l03459"></a><span class="lineno"> 3459</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l03460"></a><span class="lineno"> 3460</span>&#160;    <span class="keywordflow">if</span> self.extractnumber(value) == <span class="stringliteral">&#39;0&#39;</span>:</div>
<div class="line"><a name="l03461"></a><span class="lineno"> 3461</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l03462"></a><span class="lineno"> 3462</span>&#160;    <span class="keywordflow">for</span> ignored <span class="keywordflow">in</span> StyleConfig.size[<span class="stringliteral">&#39;ignoredtexts&#39;</span>]:</div>
<div class="line"><a name="l03463"></a><span class="lineno"> 3463</span>&#160;      <span class="keywordflow">if</span> ignored <span class="keywordflow">in</span> value:</div>
<div class="line"><a name="l03464"></a><span class="lineno"> 3464</span>&#160;        value = value.replace(ignored, <span class="stringliteral">&#39;&#39;</span>)</div>
<div class="line"><a name="l03465"></a><span class="lineno"> 3465</span>&#160;    <span class="keywordflow">return</span> value</div>
<div class="line"><a name="l03466"></a><span class="lineno"> 3466</span>&#160; </div>
<div class="line"><a name="l03467"></a><span class="lineno"> 3467</span>&#160;  <span class="keyword">def </span>extractnumber(self, text):</div>
<div class="line"><a name="l03468"></a><span class="lineno"> 3468</span>&#160;    <span class="stringliteral">&quot;Extract the first number in the given text.&quot;</span></div>
<div class="line"><a name="l03469"></a><span class="lineno"> 3469</span>&#160;    result = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l03470"></a><span class="lineno"> 3470</span>&#160;    decimal = <span class="keyword">False</span></div>
<div class="line"><a name="l03471"></a><span class="lineno"> 3471</span>&#160;    <span class="keywordflow">for</span> char <span class="keywordflow">in</span> text:</div>
<div class="line"><a name="l03472"></a><span class="lineno"> 3472</span>&#160;      <span class="keywordflow">if</span> char.isdigit():</div>
<div class="line"><a name="l03473"></a><span class="lineno"> 3473</span>&#160;        result += char</div>
<div class="line"><a name="l03474"></a><span class="lineno"> 3474</span>&#160;      <span class="keywordflow">elif</span> char == <span class="stringliteral">&#39;.&#39;</span> <span class="keywordflow">and</span> <span class="keywordflow">not</span> decimal:</div>
<div class="line"><a name="l03475"></a><span class="lineno"> 3475</span>&#160;        result += char</div>
<div class="line"><a name="l03476"></a><span class="lineno"> 3476</span>&#160;        decimal = <span class="keyword">True</span></div>
<div class="line"><a name="l03477"></a><span class="lineno"> 3477</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l03478"></a><span class="lineno"> 3478</span>&#160;        <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l03479"></a><span class="lineno"> 3479</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l03480"></a><span class="lineno"> 3480</span>&#160; </div>
<div class="line"><a name="l03481"></a><span class="lineno"> 3481</span>&#160;  <span class="keyword">def </span>checkimage(self, width, height):</div>
<div class="line"><a name="l03482"></a><span class="lineno"> 3482</span>&#160;    <span class="stringliteral">&quot;Check image dimensions, set them if possible.&quot;</span></div>
<div class="line"><a name="l03483"></a><span class="lineno"> 3483</span>&#160;    <span class="keywordflow">if</span> width:</div>
<div class="line"><a name="l03484"></a><span class="lineno"> 3484</span>&#160;      self.maxwidth = unicode(width) + <span class="stringliteral">&#39;px&#39;</span></div>
<div class="line"><a name="l03485"></a><span class="lineno"> 3485</span>&#160;      <span class="keywordflow">if</span> self.scale <span class="keywordflow">and</span> <span class="keywordflow">not</span> self.width:</div>
<div class="line"><a name="l03486"></a><span class="lineno"> 3486</span>&#160;        self.width = self.scalevalue(width)</div>
<div class="line"><a name="l03487"></a><span class="lineno"> 3487</span>&#160;    <span class="keywordflow">if</span> height:</div>
<div class="line"><a name="l03488"></a><span class="lineno"> 3488</span>&#160;      self.maxheight = unicode(height) + <span class="stringliteral">&#39;px&#39;</span></div>
<div class="line"><a name="l03489"></a><span class="lineno"> 3489</span>&#160;      <span class="keywordflow">if</span> self.scale <span class="keywordflow">and</span> <span class="keywordflow">not</span> self.height:</div>
<div class="line"><a name="l03490"></a><span class="lineno"> 3490</span>&#160;        self.height = self.scalevalue(height)</div>
<div class="line"><a name="l03491"></a><span class="lineno"> 3491</span>&#160;    <span class="keywordflow">if</span> self.width <span class="keywordflow">and</span> <span class="keywordflow">not</span> self.height:</div>
<div class="line"><a name="l03492"></a><span class="lineno"> 3492</span>&#160;      self.height = <span class="stringliteral">&#39;auto&#39;</span></div>
<div class="line"><a name="l03493"></a><span class="lineno"> 3493</span>&#160;    <span class="keywordflow">if</span> self.height <span class="keywordflow">and</span> <span class="keywordflow">not</span> self.width:</div>
<div class="line"><a name="l03494"></a><span class="lineno"> 3494</span>&#160;      self.width = <span class="stringliteral">&#39;auto&#39;</span></div>
<div class="line"><a name="l03495"></a><span class="lineno"> 3495</span>&#160; </div>
<div class="line"><a name="l03496"></a><span class="lineno"> 3496</span>&#160;  <span class="keyword">def </span>scalevalue(self, value):</div>
<div class="line"><a name="l03497"></a><span class="lineno"> 3497</span>&#160;    <span class="stringliteral">&quot;Scale the value according to the image scale and return it as unicode.&quot;</span></div>
<div class="line"><a name="l03498"></a><span class="lineno"> 3498</span>&#160;    scaled = value * int(self.scale) / 100</div>
<div class="line"><a name="l03499"></a><span class="lineno"> 3499</span>&#160;    <span class="keywordflow">return</span> unicode(int(scaled)) + <span class="stringliteral">&#39;px&#39;</span></div>
<div class="line"><a name="l03500"></a><span class="lineno"> 3500</span>&#160; </div>
<div class="line"><a name="l03501"></a><span class="lineno"> 3501</span>&#160;  <span class="keyword">def </span>removepercentwidth(self):</div>
<div class="line"><a name="l03502"></a><span class="lineno"> 3502</span>&#160;    <span class="stringliteral">&quot;Remove percent width if present, to set it at the figure level.&quot;</span></div>
<div class="line"><a name="l03503"></a><span class="lineno"> 3503</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.width:</div>
<div class="line"><a name="l03504"></a><span class="lineno"> 3504</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l03505"></a><span class="lineno"> 3505</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> <span class="stringliteral">&#39;%&#39;</span> <span class="keywordflow">in</span> self.width:</div>
<div class="line"><a name="l03506"></a><span class="lineno"> 3506</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l03507"></a><span class="lineno"> 3507</span>&#160;    width = self.width</div>
<div class="line"><a name="l03508"></a><span class="lineno"> 3508</span>&#160;    self.width = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03509"></a><span class="lineno"> 3509</span>&#160;    <span class="keywordflow">if</span> self.height == <span class="stringliteral">&#39;auto&#39;</span>:</div>
<div class="line"><a name="l03510"></a><span class="lineno"> 3510</span>&#160;      self.height = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03511"></a><span class="lineno"> 3511</span>&#160;    <span class="keywordflow">return</span> width</div>
<div class="line"><a name="l03512"></a><span class="lineno"> 3512</span>&#160; </div>
<div class="line"><a name="l03513"></a><span class="lineno"> 3513</span>&#160;  <span class="keyword">def </span>addstyle(self, container):</div>
<div class="line"><a name="l03514"></a><span class="lineno"> 3514</span>&#160;    <span class="stringliteral">&quot;Add the proper style attribute to the output tag.&quot;</span></div>
<div class="line"><a name="l03515"></a><span class="lineno"> 3515</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(container.output, TaggedOutput):</div>
<div class="line"><a name="l03516"></a><span class="lineno"> 3516</span>&#160;      Trace.error(<span class="stringliteral">&#39;No tag to add style, in &#39;</span> + unicode(container))</div>
<div class="line"><a name="l03517"></a><span class="lineno"> 3517</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.width <span class="keywordflow">and</span> <span class="keywordflow">not</span> self.height <span class="keywordflow">and</span> <span class="keywordflow">not</span> self.maxwidth <span class="keywordflow">and</span> <span class="keywordflow">not</span> self.maxheight:</div>
<div class="line"><a name="l03518"></a><span class="lineno"> 3518</span>&#160;      <span class="comment"># nothing to see here; move along</span></div>
<div class="line"><a name="l03519"></a><span class="lineno"> 3519</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03520"></a><span class="lineno"> 3520</span>&#160;    tag = <span class="stringliteral">&#39; style=&quot;&#39;</span></div>
<div class="line"><a name="l03521"></a><span class="lineno"> 3521</span>&#160;    tag += self.styleparameter(<span class="stringliteral">&#39;width&#39;</span>)</div>
<div class="line"><a name="l03522"></a><span class="lineno"> 3522</span>&#160;    tag += self.styleparameter(<span class="stringliteral">&#39;maxwidth&#39;</span>)</div>
<div class="line"><a name="l03523"></a><span class="lineno"> 3523</span>&#160;    tag += self.styleparameter(<span class="stringliteral">&#39;height&#39;</span>)</div>
<div class="line"><a name="l03524"></a><span class="lineno"> 3524</span>&#160;    tag += self.styleparameter(<span class="stringliteral">&#39;maxheight&#39;</span>)</div>
<div class="line"><a name="l03525"></a><span class="lineno"> 3525</span>&#160;    <span class="keywordflow">if</span> tag[-1] == <span class="stringliteral">&#39; &#39;</span>:</div>
<div class="line"><a name="l03526"></a><span class="lineno"> 3526</span>&#160;      tag = tag[:-1]</div>
<div class="line"><a name="l03527"></a><span class="lineno"> 3527</span>&#160;    tag += <span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l03528"></a><span class="lineno"> 3528</span>&#160;    container.output.tag += tag</div>
<div class="line"><a name="l03529"></a><span class="lineno"> 3529</span>&#160; </div>
<div class="line"><a name="l03530"></a><span class="lineno"> 3530</span>&#160;  <span class="keyword">def </span>styleparameter(self, name):</div>
<div class="line"><a name="l03531"></a><span class="lineno"> 3531</span>&#160;    <span class="stringliteral">&quot;Get the style for a single parameter.&quot;</span></div>
<div class="line"><a name="l03532"></a><span class="lineno"> 3532</span>&#160;    value = getattr(self, name)</div>
<div class="line"><a name="l03533"></a><span class="lineno"> 3533</span>&#160;    <span class="keywordflow">if</span> value:</div>
<div class="line"><a name="l03534"></a><span class="lineno"> 3534</span>&#160;      <span class="keywordflow">return</span> name.replace(<span class="stringliteral">&#39;max&#39;</span>, <span class="stringliteral">&#39;max-&#39;</span>) + <span class="stringliteral">&#39;: &#39;</span> + value + <span class="stringliteral">&#39;; &#39;</span></div>
<div class="line"><a name="l03535"></a><span class="lineno"> 3535</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l03536"></a><span class="lineno"> 3536</span>&#160; </div>
<div class="line"><a name="l03537"></a><span class="lineno"> 3537</span>&#160; </div>
<div class="line"><a name="l03538"></a><span class="lineno"> 3538</span>&#160; </div>
<div class="line"><a name="l03539"></a><span class="lineno"> 3539</span>&#160;<span class="keyword">class </span>QuoteContainer(Container):</div>
<div class="line"><a name="l03540"></a><span class="lineno"> 3540</span>&#160;  <span class="stringliteral">&quot;A container for a pretty quote&quot;</span></div>
<div class="line"><a name="l03541"></a><span class="lineno"> 3541</span>&#160; </div>
<div class="line"><a name="l03542"></a><span class="lineno"> 3542</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03543"></a><span class="lineno"> 3543</span>&#160;    self.parser = BoundedParser()</div>
<div class="line"><a name="l03544"></a><span class="lineno"> 3544</span>&#160;    self.output = FixedOutput()</div>
<div class="line"><a name="l03545"></a><span class="lineno"> 3545</span>&#160; </div>
<div class="line"><a name="l03546"></a><span class="lineno"> 3546</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03547"></a><span class="lineno"> 3547</span>&#160;    <span class="stringliteral">&quot;Process contents&quot;</span></div>
<div class="line"><a name="l03548"></a><span class="lineno"> 3548</span>&#160;    self.type = self.header[2]</div>
<div class="line"><a name="l03549"></a><span class="lineno"> 3549</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.type <span class="keywordflow">in</span> StyleConfig.quotes:</div>
<div class="line"><a name="l03550"></a><span class="lineno"> 3550</span>&#160;      Trace.error(<span class="stringliteral">&#39;Quote type &#39;</span> + self.type + <span class="stringliteral">&#39; not found&#39;</span>)</div>
<div class="line"><a name="l03551"></a><span class="lineno"> 3551</span>&#160;      self.html = [<span class="stringliteral">&#39;&quot;&#39;</span>]</div>
<div class="line"><a name="l03552"></a><span class="lineno"> 3552</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03553"></a><span class="lineno"> 3553</span>&#160;    self.html = [StyleConfig.quotes[self.type]]</div>
<div class="line"><a name="l03554"></a><span class="lineno"> 3554</span>&#160; </div>
<div class="line"><a name="l03555"></a><span class="lineno"> 3555</span>&#160;<span class="keyword">class </span>LyXLine(Container):</div>
<div class="line"><a name="l03556"></a><span class="lineno"> 3556</span>&#160;  <span class="stringliteral">&quot;A Lyx line&quot;</span></div>
<div class="line"><a name="l03557"></a><span class="lineno"> 3557</span>&#160; </div>
<div class="line"><a name="l03558"></a><span class="lineno"> 3558</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03559"></a><span class="lineno"> 3559</span>&#160;    self.parser = LoneCommand()</div>
<div class="line"><a name="l03560"></a><span class="lineno"> 3560</span>&#160;    self.output = FixedOutput()</div>
<div class="line"><a name="l03561"></a><span class="lineno"> 3561</span>&#160; </div>
<div class="line"><a name="l03562"></a><span class="lineno"> 3562</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03563"></a><span class="lineno"> 3563</span>&#160;    self.html = [<span class="stringliteral">&#39;&lt;hr class=&quot;line&quot; /&gt;&#39;</span>]</div>
<div class="line"><a name="l03564"></a><span class="lineno"> 3564</span>&#160; </div>
<div class="line"><a name="l03565"></a><span class="lineno"> 3565</span>&#160;<span class="keyword">class </span>EmphaticText(TaggedText):</div>
<div class="line"><a name="l03566"></a><span class="lineno"> 3566</span>&#160;  <span class="stringliteral">&quot;Text with emphatic mode&quot;</span></div>
<div class="line"><a name="l03567"></a><span class="lineno"> 3567</span>&#160; </div>
<div class="line"><a name="l03568"></a><span class="lineno"> 3568</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03569"></a><span class="lineno"> 3569</span>&#160;    self.output.tag = <span class="stringliteral">&#39;i&#39;</span></div>
<div class="line"><a name="l03570"></a><span class="lineno"> 3570</span>&#160; </div>
<div class="line"><a name="l03571"></a><span class="lineno"> 3571</span>&#160;<span class="keyword">class </span>ShapedText(TaggedText):</div>
<div class="line"><a name="l03572"></a><span class="lineno"> 3572</span>&#160;  <span class="stringliteral">&quot;Text shaped (italic, slanted)&quot;</span></div>
<div class="line"><a name="l03573"></a><span class="lineno"> 3573</span>&#160; </div>
<div class="line"><a name="l03574"></a><span class="lineno"> 3574</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03575"></a><span class="lineno"> 3575</span>&#160;    self.type = self.header[1]</div>
<div class="line"><a name="l03576"></a><span class="lineno"> 3576</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.type <span class="keywordflow">in</span> TagConfig.shaped:</div>
<div class="line"><a name="l03577"></a><span class="lineno"> 3577</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unrecognized shape &#39;</span> + self.header[1])</div>
<div class="line"><a name="l03578"></a><span class="lineno"> 3578</span>&#160;      self.output.tag = <span class="stringliteral">&#39;span&#39;</span></div>
<div class="line"><a name="l03579"></a><span class="lineno"> 3579</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03580"></a><span class="lineno"> 3580</span>&#160;    self.output.tag = TagConfig.shaped[self.type]</div>
<div class="line"><a name="l03581"></a><span class="lineno"> 3581</span>&#160; </div>
<div class="line"><a name="l03582"></a><span class="lineno"> 3582</span>&#160;<span class="keyword">class </span>VersalitasText(TaggedText):</div>
<div class="line"><a name="l03583"></a><span class="lineno"> 3583</span>&#160;  <span class="stringliteral">&quot;Text in versalitas&quot;</span></div>
<div class="line"><a name="l03584"></a><span class="lineno"> 3584</span>&#160; </div>
<div class="line"><a name="l03585"></a><span class="lineno"> 3585</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03586"></a><span class="lineno"> 3586</span>&#160;    self.output.tag = <span class="stringliteral">&#39;span class=&quot;versalitas&quot;&#39;</span></div>
<div class="line"><a name="l03587"></a><span class="lineno"> 3587</span>&#160; </div>
<div class="line"><a name="l03588"></a><span class="lineno"> 3588</span>&#160;<span class="keyword">class </span>ColorText(TaggedText):</div>
<div class="line"><a name="l03589"></a><span class="lineno"> 3589</span>&#160;  <span class="stringliteral">&quot;Colored text&quot;</span></div>
<div class="line"><a name="l03590"></a><span class="lineno"> 3590</span>&#160; </div>
<div class="line"><a name="l03591"></a><span class="lineno"> 3591</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03592"></a><span class="lineno"> 3592</span>&#160;    self.color = self.header[1]</div>
<div class="line"><a name="l03593"></a><span class="lineno"> 3593</span>&#160;    self.output.tag = <span class="stringliteral">&#39;span class=&quot;&#39;</span> + self.color + <span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l03594"></a><span class="lineno"> 3594</span>&#160; </div>
<div class="line"><a name="l03595"></a><span class="lineno"> 3595</span>&#160;<span class="keyword">class </span>SizeText(TaggedText):</div>
<div class="line"><a name="l03596"></a><span class="lineno"> 3596</span>&#160;  <span class="stringliteral">&quot;Sized text&quot;</span></div>
<div class="line"><a name="l03597"></a><span class="lineno"> 3597</span>&#160; </div>
<div class="line"><a name="l03598"></a><span class="lineno"> 3598</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03599"></a><span class="lineno"> 3599</span>&#160;    self.size = self.header[1]</div>
<div class="line"><a name="l03600"></a><span class="lineno"> 3600</span>&#160;    self.output.tag = <span class="stringliteral">&#39;span class=&quot;&#39;</span> + self.size + <span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l03601"></a><span class="lineno"> 3601</span>&#160; </div>
<div class="line"><a name="l03602"></a><span class="lineno"> 3602</span>&#160;<span class="keyword">class </span>BoldText(TaggedText):</div>
<div class="line"><a name="l03603"></a><span class="lineno"> 3603</span>&#160;  <span class="stringliteral">&quot;Bold text&quot;</span></div>
<div class="line"><a name="l03604"></a><span class="lineno"> 3604</span>&#160; </div>
<div class="line"><a name="l03605"></a><span class="lineno"> 3605</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03606"></a><span class="lineno"> 3606</span>&#160;    self.output.tag = <span class="stringliteral">&#39;b&#39;</span></div>
<div class="line"><a name="l03607"></a><span class="lineno"> 3607</span>&#160; </div>
<div class="line"><a name="l03608"></a><span class="lineno"> 3608</span>&#160;<span class="keyword">class </span>TextFamily(TaggedText):</div>
<div class="line"><a name="l03609"></a><span class="lineno"> 3609</span>&#160;  <span class="stringliteral">&quot;A bit of text from elyxer.a different family&quot;</span></div>
<div class="line"><a name="l03610"></a><span class="lineno"> 3610</span>&#160; </div>
<div class="line"><a name="l03611"></a><span class="lineno"> 3611</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03612"></a><span class="lineno"> 3612</span>&#160;    <span class="stringliteral">&quot;Parse the type of family&quot;</span></div>
<div class="line"><a name="l03613"></a><span class="lineno"> 3613</span>&#160;    self.type = self.header[1]</div>
<div class="line"><a name="l03614"></a><span class="lineno"> 3614</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.type <span class="keywordflow">in</span> TagConfig.family:</div>
<div class="line"><a name="l03615"></a><span class="lineno"> 3615</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unrecognized family &#39;</span> + type)</div>
<div class="line"><a name="l03616"></a><span class="lineno"> 3616</span>&#160;      self.output.tag = <span class="stringliteral">&#39;span&#39;</span></div>
<div class="line"><a name="l03617"></a><span class="lineno"> 3617</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03618"></a><span class="lineno"> 3618</span>&#160;    self.output.tag = TagConfig.family[self.type]</div>
<div class="line"><a name="l03619"></a><span class="lineno"> 3619</span>&#160; </div>
<div class="line"><a name="l03620"></a><span class="lineno"> 3620</span>&#160;<span class="keyword">class </span>Hfill(TaggedText):</div>
<div class="line"><a name="l03621"></a><span class="lineno"> 3621</span>&#160;  <span class="stringliteral">&quot;Horizontall fill&quot;</span></div>
<div class="line"><a name="l03622"></a><span class="lineno"> 3622</span>&#160; </div>
<div class="line"><a name="l03623"></a><span class="lineno"> 3623</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03624"></a><span class="lineno"> 3624</span>&#160;    self.output.tag = <span class="stringliteral">&#39;span class=&quot;hfill&quot;&#39;</span></div>
<div class="line"><a name="l03625"></a><span class="lineno"> 3625</span>&#160; </div>
<div class="line"><a name="l03626"></a><span class="lineno"> 3626</span>&#160;<span class="keyword">class </span>BarredText(TaggedText):</div>
<div class="line"><a name="l03627"></a><span class="lineno"> 3627</span>&#160;  <span class="stringliteral">&quot;Text with a bar somewhere&quot;</span></div>
<div class="line"><a name="l03628"></a><span class="lineno"> 3628</span>&#160; </div>
<div class="line"><a name="l03629"></a><span class="lineno"> 3629</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03630"></a><span class="lineno"> 3630</span>&#160;    <span class="stringliteral">&quot;Parse the type of bar&quot;</span></div>
<div class="line"><a name="l03631"></a><span class="lineno"> 3631</span>&#160;    self.type = self.header[1]</div>
<div class="line"><a name="l03632"></a><span class="lineno"> 3632</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.type <span class="keywordflow">in</span> TagConfig.barred:</div>
<div class="line"><a name="l03633"></a><span class="lineno"> 3633</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unknown bar type &#39;</span> + self.type)</div>
<div class="line"><a name="l03634"></a><span class="lineno"> 3634</span>&#160;      self.output.tag = <span class="stringliteral">&#39;span&#39;</span></div>
<div class="line"><a name="l03635"></a><span class="lineno"> 3635</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03636"></a><span class="lineno"> 3636</span>&#160;    self.output.tag = TagConfig.barred[self.type]</div>
<div class="line"><a name="l03637"></a><span class="lineno"> 3637</span>&#160; </div>
<div class="line"><a name="l03638"></a><span class="lineno"> 3638</span>&#160;<span class="keyword">class </span>LangLine(TaggedText):</div>
<div class="line"><a name="l03639"></a><span class="lineno"> 3639</span>&#160;  <span class="stringliteral">&quot;A line with language information&quot;</span></div>
<div class="line"><a name="l03640"></a><span class="lineno"> 3640</span>&#160; </div>
<div class="line"><a name="l03641"></a><span class="lineno"> 3641</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03642"></a><span class="lineno"> 3642</span>&#160;    <span class="stringliteral">&quot;Only generate a span with lang info when the language is recognized.&quot;</span></div>
<div class="line"><a name="l03643"></a><span class="lineno"> 3643</span>&#160;    lang = self.header[1]</div>
<div class="line"><a name="l03644"></a><span class="lineno"> 3644</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> lang <span class="keywordflow">in</span> TranslationConfig.languages:</div>
<div class="line"><a name="l03645"></a><span class="lineno"> 3645</span>&#160;      self.output = ContentsOutput()</div>
<div class="line"><a name="l03646"></a><span class="lineno"> 3646</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03647"></a><span class="lineno"> 3647</span>&#160;    isolang = TranslationConfig.languages[lang]</div>
<div class="line"><a name="l03648"></a><span class="lineno"> 3648</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span lang=&quot;&#39;</span> + isolang + <span class="stringliteral">&#39;&quot;&#39;</span>, <span class="keyword">False</span>)</div>
<div class="line"><a name="l03649"></a><span class="lineno"> 3649</span>&#160; </div>
<div class="line"><a name="l03650"></a><span class="lineno"> 3650</span>&#160;<span class="keyword">class </span>InsetLength(BlackBox):</div>
<div class="line"><a name="l03651"></a><span class="lineno"> 3651</span>&#160;  <span class="stringliteral">&quot;A length measure inside an inset.&quot;</span></div>
<div class="line"><a name="l03652"></a><span class="lineno"> 3652</span>&#160; </div>
<div class="line"><a name="l03653"></a><span class="lineno"> 3653</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03654"></a><span class="lineno"> 3654</span>&#160;    self.length = self.header[1]</div>
<div class="line"><a name="l03655"></a><span class="lineno"> 3655</span>&#160; </div>
<div class="line"><a name="l03656"></a><span class="lineno"> 3656</span>&#160;<span class="keyword">class </span>Space(Container):</div>
<div class="line"><a name="l03657"></a><span class="lineno"> 3657</span>&#160;  <span class="stringliteral">&quot;A space of several types&quot;</span></div>
<div class="line"><a name="l03658"></a><span class="lineno"> 3658</span>&#160; </div>
<div class="line"><a name="l03659"></a><span class="lineno"> 3659</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03660"></a><span class="lineno"> 3660</span>&#160;    self.parser = InsetParser()</div>
<div class="line"><a name="l03661"></a><span class="lineno"> 3661</span>&#160;    self.output = FixedOutput()</div>
<div class="line"><a name="l03662"></a><span class="lineno"> 3662</span>&#160;  </div>
<div class="line"><a name="l03663"></a><span class="lineno"> 3663</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03664"></a><span class="lineno"> 3664</span>&#160;    self.type = self.header[2]</div>
<div class="line"><a name="l03665"></a><span class="lineno"> 3665</span>&#160;    <span class="keywordflow">if</span> self.type <span class="keywordflow">not</span> <span class="keywordflow">in</span> StyleConfig.hspaces:</div>
<div class="line"><a name="l03666"></a><span class="lineno"> 3666</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unknown space type &#39;</span> + self.type)</div>
<div class="line"><a name="l03667"></a><span class="lineno"> 3667</span>&#160;      self.html = [<span class="stringliteral">&#39; &#39;</span>]</div>
<div class="line"><a name="l03668"></a><span class="lineno"> 3668</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03669"></a><span class="lineno"> 3669</span>&#160;    self.html = [StyleConfig.hspaces[self.type]]</div>
<div class="line"><a name="l03670"></a><span class="lineno"> 3670</span>&#160;    length = self.getlength()</div>
<div class="line"><a name="l03671"></a><span class="lineno"> 3671</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> length:</div>
<div class="line"><a name="l03672"></a><span class="lineno"> 3672</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03673"></a><span class="lineno"> 3673</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;hspace&quot;&#39;</span>, <span class="keyword">False</span>)</div>
<div class="line"><a name="l03674"></a><span class="lineno"> 3674</span>&#160;    ContainerSize().set(length).addstyle(self)</div>
<div class="line"><a name="l03675"></a><span class="lineno"> 3675</span>&#160; </div>
<div class="line"><a name="l03676"></a><span class="lineno"> 3676</span>&#160;  <span class="keyword">def </span>getlength(self):</div>
<div class="line"><a name="l03677"></a><span class="lineno"> 3677</span>&#160;    <span class="stringliteral">&quot;Get the space length from elyxer.the contents or parameters.&quot;</span></div>
<div class="line"><a name="l03678"></a><span class="lineno"> 3678</span>&#160;    <span class="keywordflow">if</span> len(self.contents) == 0 <span class="keywordflow">or</span> <span class="keywordflow">not</span> isinstance(self.contents[0], InsetLength):</div>
<div class="line"><a name="l03679"></a><span class="lineno"> 3679</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l03680"></a><span class="lineno"> 3680</span>&#160;    <span class="keywordflow">return</span> self.contents[0].length</div>
<div class="line"><a name="l03681"></a><span class="lineno"> 3681</span>&#160; </div>
<div class="line"><a name="l03682"></a><span class="lineno"> 3682</span>&#160;<span class="keyword">class </span>VerticalSpace(Container):</div>
<div class="line"><a name="l03683"></a><span class="lineno"> 3683</span>&#160;  <span class="stringliteral">&quot;An inset that contains a vertical space.&quot;</span></div>
<div class="line"><a name="l03684"></a><span class="lineno"> 3684</span>&#160; </div>
<div class="line"><a name="l03685"></a><span class="lineno"> 3685</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03686"></a><span class="lineno"> 3686</span>&#160;    self.parser = InsetParser()</div>
<div class="line"><a name="l03687"></a><span class="lineno"> 3687</span>&#160;    self.output = FixedOutput()</div>
<div class="line"><a name="l03688"></a><span class="lineno"> 3688</span>&#160; </div>
<div class="line"><a name="l03689"></a><span class="lineno"> 3689</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03690"></a><span class="lineno"> 3690</span>&#160;    <span class="stringliteral">&quot;Set the correct tag&quot;</span></div>
<div class="line"><a name="l03691"></a><span class="lineno"> 3691</span>&#160;    self.type = self.header[2]</div>
<div class="line"><a name="l03692"></a><span class="lineno"> 3692</span>&#160;    <span class="keywordflow">if</span> self.type <span class="keywordflow">not</span> <span class="keywordflow">in</span> StyleConfig.vspaces:</div>
<div class="line"><a name="l03693"></a><span class="lineno"> 3693</span>&#160;      self.output = TaggedOutput().settag(<span class="stringliteral">&#39;div class=&quot;vspace&quot; style=&quot;height: &#39;</span> + self.type + <span class="stringliteral">&#39;;&quot;&#39;</span>, <span class="keyword">True</span>)</div>
<div class="line"><a name="l03694"></a><span class="lineno"> 3694</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03695"></a><span class="lineno"> 3695</span>&#160;    self.html = [StyleConfig.vspaces[self.type]]</div>
<div class="line"><a name="l03696"></a><span class="lineno"> 3696</span>&#160; </div>
<div class="line"><a name="l03697"></a><span class="lineno"> 3697</span>&#160;<span class="keyword">class </span>Align(Container):</div>
<div class="line"><a name="l03698"></a><span class="lineno"> 3698</span>&#160;  <span class="stringliteral">&quot;Bit of aligned text&quot;</span></div>
<div class="line"><a name="l03699"></a><span class="lineno"> 3699</span>&#160; </div>
<div class="line"><a name="l03700"></a><span class="lineno"> 3700</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03701"></a><span class="lineno"> 3701</span>&#160;    self.parser = ExcludingParser()</div>
<div class="line"><a name="l03702"></a><span class="lineno"> 3702</span>&#160;    self.output = TaggedOutput().setbreaklines(<span class="keyword">True</span>)</div>
<div class="line"><a name="l03703"></a><span class="lineno"> 3703</span>&#160; </div>
<div class="line"><a name="l03704"></a><span class="lineno"> 3704</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03705"></a><span class="lineno"> 3705</span>&#160;    self.output.tag = <span class="stringliteral">&#39;div class=&quot;&#39;</span> + self.header[1] + <span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l03706"></a><span class="lineno"> 3706</span>&#160; </div>
<div class="line"><a name="l03707"></a><span class="lineno"> 3707</span>&#160;<span class="keyword">class </span>Newline(Container):</div>
<div class="line"><a name="l03708"></a><span class="lineno"> 3708</span>&#160;  <span class="stringliteral">&quot;A newline&quot;</span></div>
<div class="line"><a name="l03709"></a><span class="lineno"> 3709</span>&#160; </div>
<div class="line"><a name="l03710"></a><span class="lineno"> 3710</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03711"></a><span class="lineno"> 3711</span>&#160;    self.parser = LoneCommand()</div>
<div class="line"><a name="l03712"></a><span class="lineno"> 3712</span>&#160;    self.output = FixedOutput()</div>
<div class="line"><a name="l03713"></a><span class="lineno"> 3713</span>&#160; </div>
<div class="line"><a name="l03714"></a><span class="lineno"> 3714</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03715"></a><span class="lineno"> 3715</span>&#160;    <span class="stringliteral">&quot;Process contents&quot;</span></div>
<div class="line"><a name="l03716"></a><span class="lineno"> 3716</span>&#160;    self.html = [<span class="stringliteral">&#39;&lt;br/&gt;\n&#39;</span>]</div>
<div class="line"><a name="l03717"></a><span class="lineno"> 3717</span>&#160; </div>
<div class="line"><a name="l03718"></a><span class="lineno"> 3718</span>&#160;<span class="keyword">class </span>NewPage(Newline):</div>
<div class="line"><a name="l03719"></a><span class="lineno"> 3719</span>&#160;  <span class="stringliteral">&quot;A new page&quot;</span></div>
<div class="line"><a name="l03720"></a><span class="lineno"> 3720</span>&#160; </div>
<div class="line"><a name="l03721"></a><span class="lineno"> 3721</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03722"></a><span class="lineno"> 3722</span>&#160;    <span class="stringliteral">&quot;Process contents&quot;</span></div>
<div class="line"><a name="l03723"></a><span class="lineno"> 3723</span>&#160;    self.html = [<span class="stringliteral">&#39;&lt;p&gt;&lt;br/&gt;\n&lt;/p&gt;\n&#39;</span>]</div>
<div class="line"><a name="l03724"></a><span class="lineno"> 3724</span>&#160; </div>
<div class="line"><a name="l03725"></a><span class="lineno"> 3725</span>&#160;<span class="keyword">class </span>Separator(Container):</div>
<div class="line"><a name="l03726"></a><span class="lineno"> 3726</span>&#160;  <span class="stringliteral">&quot;A separator string which is not extracted by extracttext().&quot;</span></div>
<div class="line"><a name="l03727"></a><span class="lineno"> 3727</span>&#160; </div>
<div class="line"><a name="l03728"></a><span class="lineno"> 3728</span>&#160;  <span class="keyword">def </span>__init__(self, constant):</div>
<div class="line"><a name="l03729"></a><span class="lineno"> 3729</span>&#160;    self.output = FixedOutput()</div>
<div class="line"><a name="l03730"></a><span class="lineno"> 3730</span>&#160;    self.contents = []</div>
<div class="line"><a name="l03731"></a><span class="lineno"> 3731</span>&#160;    self.html = [constant]</div>
<div class="line"><a name="l03732"></a><span class="lineno"> 3732</span>&#160; </div>
<div class="line"><a name="l03733"></a><span class="lineno"> 3733</span>&#160;<span class="keyword">class </span>StrikeOut(TaggedText):</div>
<div class="line"><a name="l03734"></a><span class="lineno"> 3734</span>&#160;  <span class="stringliteral">&quot;Striken out text.&quot;</span></div>
<div class="line"><a name="l03735"></a><span class="lineno"> 3735</span>&#160; </div>
<div class="line"><a name="l03736"></a><span class="lineno"> 3736</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03737"></a><span class="lineno"> 3737</span>&#160;    <span class="stringliteral">&quot;Set the output tag to strike.&quot;</span></div>
<div class="line"><a name="l03738"></a><span class="lineno"> 3738</span>&#160;    self.output.tag = <span class="stringliteral">&#39;strike&#39;</span></div>
<div class="line"><a name="l03739"></a><span class="lineno"> 3739</span>&#160; </div>
<div class="line"><a name="l03740"></a><span class="lineno"> 3740</span>&#160;<span class="keyword">class </span>StartAppendix(BlackBox):</div>
<div class="line"><a name="l03741"></a><span class="lineno"> 3741</span>&#160;  <span class="stringliteral">&quot;Mark to start an appendix here.&quot;</span></div>
<div class="line"><a name="l03742"></a><span class="lineno"> 3742</span>&#160;  <span class="stringliteral">&quot;From this point on, all chapters become appendices.&quot;</span></div>
<div class="line"><a name="l03743"></a><span class="lineno"> 3743</span>&#160; </div>
<div class="line"><a name="l03744"></a><span class="lineno"> 3744</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03745"></a><span class="lineno"> 3745</span>&#160;    <span class="stringliteral">&quot;Activate the special numbering scheme for appendices, using letters.&quot;</span></div>
<div class="line"><a name="l03746"></a><span class="lineno"> 3746</span>&#160;    NumberGenerator.generator.startappendix()</div>
<div class="line"><a name="l03747"></a><span class="lineno"> 3747</span>&#160; </div>
<div class="line"><a name="l03748"></a><span class="lineno"> 3748</span>&#160; </div>
<div class="line"><a name="l03749"></a><span class="lineno"> 3749</span>&#160; </div>
<div class="line"><a name="l03750"></a><span class="lineno"> 3750</span>&#160; </div>
<div class="line"><a name="l03751"></a><span class="lineno"> 3751</span>&#160; </div>
<div class="line"><a name="l03752"></a><span class="lineno"> 3752</span>&#160; </div>
<div class="line"><a name="l03753"></a><span class="lineno"> 3753</span>&#160;<span class="keyword">class </span>Link(Container):</div>
<div class="line"><a name="l03754"></a><span class="lineno"> 3754</span>&#160;  <span class="stringliteral">&quot;A link to another part of the document&quot;</span></div>
<div class="line"><a name="l03755"></a><span class="lineno"> 3755</span>&#160; </div>
<div class="line"><a name="l03756"></a><span class="lineno"> 3756</span>&#160;  anchor = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03757"></a><span class="lineno"> 3757</span>&#160;  url = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03758"></a><span class="lineno"> 3758</span>&#160;  type = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03759"></a><span class="lineno"> 3759</span>&#160;  page = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03760"></a><span class="lineno"> 3760</span>&#160;  target = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03761"></a><span class="lineno"> 3761</span>&#160;  destination = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03762"></a><span class="lineno"> 3762</span>&#160;  title = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03763"></a><span class="lineno"> 3763</span>&#160; </div>
<div class="line"><a name="l03764"></a><span class="lineno"> 3764</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03765"></a><span class="lineno"> 3765</span>&#160;    <span class="stringliteral">&quot;Initialize the link, add target if configured.&quot;</span></div>
<div class="line"><a name="l03766"></a><span class="lineno"> 3766</span>&#160;    self.contents = []</div>
<div class="line"><a name="l03767"></a><span class="lineno"> 3767</span>&#160;    self.parser = InsetParser()</div>
<div class="line"><a name="l03768"></a><span class="lineno"> 3768</span>&#160;    self.output = LinkOutput()</div>
<div class="line"><a name="l03769"></a><span class="lineno"> 3769</span>&#160;    <span class="keywordflow">if</span> Options.target:</div>
<div class="line"><a name="l03770"></a><span class="lineno"> 3770</span>&#160;      self.target = Options.target</div>
<div class="line"><a name="l03771"></a><span class="lineno"> 3771</span>&#160; </div>
<div class="line"><a name="l03772"></a><span class="lineno"> 3772</span>&#160;  <span class="keyword">def </span>complete(self, text, anchor = None, url = None, type = None, title = None):</div>
<div class="line"><a name="l03773"></a><span class="lineno"> 3773</span>&#160;    <span class="stringliteral">&quot;Complete the link.&quot;</span></div>
<div class="line"><a name="l03774"></a><span class="lineno"> 3774</span>&#160;    self.contents = [Constant(text)]</div>
<div class="line"><a name="l03775"></a><span class="lineno"> 3775</span>&#160;    <span class="keywordflow">if</span> anchor:</div>
<div class="line"><a name="l03776"></a><span class="lineno"> 3776</span>&#160;      self.anchor = anchor</div>
<div class="line"><a name="l03777"></a><span class="lineno"> 3777</span>&#160;    <span class="keywordflow">if</span> url:</div>
<div class="line"><a name="l03778"></a><span class="lineno"> 3778</span>&#160;      self.url = url</div>
<div class="line"><a name="l03779"></a><span class="lineno"> 3779</span>&#160;    <span class="keywordflow">if</span> type:</div>
<div class="line"><a name="l03780"></a><span class="lineno"> 3780</span>&#160;      self.type = type</div>
<div class="line"><a name="l03781"></a><span class="lineno"> 3781</span>&#160;    <span class="keywordflow">if</span> title:</div>
<div class="line"><a name="l03782"></a><span class="lineno"> 3782</span>&#160;      self.title = title</div>
<div class="line"><a name="l03783"></a><span class="lineno"> 3783</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l03784"></a><span class="lineno"> 3784</span>&#160; </div>
<div class="line"><a name="l03785"></a><span class="lineno"> 3785</span>&#160;  <span class="keyword">def </span>computedestination(self):</div>
<div class="line"><a name="l03786"></a><span class="lineno"> 3786</span>&#160;    <span class="stringliteral">&quot;Use the destination link to fill in the destination URL.&quot;</span></div>
<div class="line"><a name="l03787"></a><span class="lineno"> 3787</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.destination:</div>
<div class="line"><a name="l03788"></a><span class="lineno"> 3788</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03789"></a><span class="lineno"> 3789</span>&#160;    self.url = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l03790"></a><span class="lineno"> 3790</span>&#160;    <span class="keywordflow">if</span> self.destination.anchor:</div>
<div class="line"><a name="l03791"></a><span class="lineno"> 3791</span>&#160;      self.url = <span class="stringliteral">&#39;#&#39;</span> + self.destination.anchor</div>
<div class="line"><a name="l03792"></a><span class="lineno"> 3792</span>&#160;    <span class="keywordflow">if</span> self.destination.page:</div>
<div class="line"><a name="l03793"></a><span class="lineno"> 3793</span>&#160;      self.url = self.destination.page + self.url</div>
<div class="line"><a name="l03794"></a><span class="lineno"> 3794</span>&#160; </div>
<div class="line"><a name="l03795"></a><span class="lineno"> 3795</span>&#160;  <span class="keyword">def </span>setmutualdestination(self, destination):</div>
<div class="line"><a name="l03796"></a><span class="lineno"> 3796</span>&#160;    <span class="stringliteral">&quot;Set another link as destination, and set its destination to this one.&quot;</span></div>
<div class="line"><a name="l03797"></a><span class="lineno"> 3797</span>&#160;    self.destination = destination</div>
<div class="line"><a name="l03798"></a><span class="lineno"> 3798</span>&#160;    destination.destination = self</div>
<div class="line"><a name="l03799"></a><span class="lineno"> 3799</span>&#160; </div>
<div class="line"><a name="l03800"></a><span class="lineno"> 3800</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l03801"></a><span class="lineno"> 3801</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l03802"></a><span class="lineno"> 3802</span>&#160;    result = <span class="stringliteral">&#39;Link&#39;</span></div>
<div class="line"><a name="l03803"></a><span class="lineno"> 3803</span>&#160;    <span class="keywordflow">if</span> self.anchor:</div>
<div class="line"><a name="l03804"></a><span class="lineno"> 3804</span>&#160;      result += <span class="stringliteral">&#39; #&#39;</span> + self.anchor</div>
<div class="line"><a name="l03805"></a><span class="lineno"> 3805</span>&#160;    <span class="keywordflow">if</span> self.url:</div>
<div class="line"><a name="l03806"></a><span class="lineno"> 3806</span>&#160;      result += <span class="stringliteral">&#39; to &#39;</span> + self.url</div>
<div class="line"><a name="l03807"></a><span class="lineno"> 3807</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l03808"></a><span class="lineno"> 3808</span>&#160; </div>
<div class="line"><a name="l03809"></a><span class="lineno"> 3809</span>&#160;<span class="keyword">class </span>URL(Link):</div>
<div class="line"><a name="l03810"></a><span class="lineno"> 3810</span>&#160;  <span class="stringliteral">&quot;A clickable URL&quot;</span></div>
<div class="line"><a name="l03811"></a><span class="lineno"> 3811</span>&#160; </div>
<div class="line"><a name="l03812"></a><span class="lineno"> 3812</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03813"></a><span class="lineno"> 3813</span>&#160;    <span class="stringliteral">&quot;Read URL from elyxer.parameters&quot;</span></div>
<div class="line"><a name="l03814"></a><span class="lineno"> 3814</span>&#160;    target = self.escape(self.getparameter(<span class="stringliteral">&#39;target&#39;</span>))</div>
<div class="line"><a name="l03815"></a><span class="lineno"> 3815</span>&#160;    self.url = target</div>
<div class="line"><a name="l03816"></a><span class="lineno"> 3816</span>&#160;    type = self.getparameter(<span class="stringliteral">&#39;type&#39;</span>)</div>
<div class="line"><a name="l03817"></a><span class="lineno"> 3817</span>&#160;    <span class="keywordflow">if</span> type:</div>
<div class="line"><a name="l03818"></a><span class="lineno"> 3818</span>&#160;      self.url = self.escape(type) + target</div>
<div class="line"><a name="l03819"></a><span class="lineno"> 3819</span>&#160;    name = self.getparameter(<span class="stringliteral">&#39;name&#39;</span>)</div>
<div class="line"><a name="l03820"></a><span class="lineno"> 3820</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> name:</div>
<div class="line"><a name="l03821"></a><span class="lineno"> 3821</span>&#160;      name = target</div>
<div class="line"><a name="l03822"></a><span class="lineno"> 3822</span>&#160;    self.contents = [Constant(name)]</div>
<div class="line"><a name="l03823"></a><span class="lineno"> 3823</span>&#160; </div>
<div class="line"><a name="l03824"></a><span class="lineno"> 3824</span>&#160;<span class="keyword">class </span>FlexURL(URL):</div>
<div class="line"><a name="l03825"></a><span class="lineno"> 3825</span>&#160;  <span class="stringliteral">&quot;A flexible URL&quot;</span></div>
<div class="line"><a name="l03826"></a><span class="lineno"> 3826</span>&#160; </div>
<div class="line"><a name="l03827"></a><span class="lineno"> 3827</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03828"></a><span class="lineno"> 3828</span>&#160;    <span class="stringliteral">&quot;Read URL from elyxer.contents&quot;</span></div>
<div class="line"><a name="l03829"></a><span class="lineno"> 3829</span>&#160;    self.url = self.extracttext()</div>
<div class="line"><a name="l03830"></a><span class="lineno"> 3830</span>&#160; </div>
<div class="line"><a name="l03831"></a><span class="lineno"> 3831</span>&#160;<span class="keyword">class </span>LinkOutput(ContainerOutput):</div>
<div class="line"><a name="l03832"></a><span class="lineno"> 3832</span>&#160;  <span class="stringliteral">&quot;A link pointing to some destination&quot;</span></div>
<div class="line"><a name="l03833"></a><span class="lineno"> 3833</span>&#160;  <span class="stringliteral">&quot;Or an anchor (destination)&quot;</span></div>
<div class="line"><a name="l03834"></a><span class="lineno"> 3834</span>&#160; </div>
<div class="line"><a name="l03835"></a><span class="lineno"> 3835</span>&#160;  <span class="keyword">def </span>gethtml(self, link):</div>
<div class="line"><a name="l03836"></a><span class="lineno"> 3836</span>&#160;    <span class="stringliteral">&quot;Get the HTML code for the link&quot;</span></div>
<div class="line"><a name="l03837"></a><span class="lineno"> 3837</span>&#160;    type = link.__class__.__name__</div>
<div class="line"><a name="l03838"></a><span class="lineno"> 3838</span>&#160;    <span class="keywordflow">if</span> link.type:</div>
<div class="line"><a name="l03839"></a><span class="lineno"> 3839</span>&#160;      type = link.type</div>
<div class="line"><a name="l03840"></a><span class="lineno"> 3840</span>&#160;    tag = <span class="stringliteral">&#39;a class=&quot;&#39;</span> + type + <span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l03841"></a><span class="lineno"> 3841</span>&#160;    <span class="keywordflow">if</span> link.anchor:</div>
<div class="line"><a name="l03842"></a><span class="lineno"> 3842</span>&#160;      tag += <span class="stringliteral">&#39; name=&quot;&#39;</span> + link.anchor + <span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l03843"></a><span class="lineno"> 3843</span>&#160;    <span class="keywordflow">if</span> link.destination:</div>
<div class="line"><a name="l03844"></a><span class="lineno"> 3844</span>&#160;      link.computedestination()</div>
<div class="line"><a name="l03845"></a><span class="lineno"> 3845</span>&#160;    <span class="keywordflow">if</span> link.url:</div>
<div class="line"><a name="l03846"></a><span class="lineno"> 3846</span>&#160;      tag += <span class="stringliteral">&#39; href=&quot;&#39;</span> + link.url + <span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l03847"></a><span class="lineno"> 3847</span>&#160;    <span class="keywordflow">if</span> link.target:</div>
<div class="line"><a name="l03848"></a><span class="lineno"> 3848</span>&#160;      tag += <span class="stringliteral">&#39; target=&quot;&#39;</span> + link.target + <span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l03849"></a><span class="lineno"> 3849</span>&#160;    <span class="keywordflow">if</span> link.title:</div>
<div class="line"><a name="l03850"></a><span class="lineno"> 3850</span>&#160;      tag += <span class="stringliteral">&#39; title=&quot;&#39;</span> + link.title + <span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l03851"></a><span class="lineno"> 3851</span>&#160;    <span class="keywordflow">return</span> TaggedOutput().settag(tag).gethtml(link)</div>
<div class="line"><a name="l03852"></a><span class="lineno"> 3852</span>&#160; </div>
<div class="line"><a name="l03853"></a><span class="lineno"> 3853</span>&#160; </div>
<div class="line"><a name="l03854"></a><span class="lineno"> 3854</span>&#160; </div>
<div class="line"><a name="l03855"></a><span class="lineno"> 3855</span>&#160; </div>
<div class="line"><a name="l03856"></a><span class="lineno"> 3856</span>&#160; </div>
<div class="line"><a name="l03857"></a><span class="lineno"> 3857</span>&#160;<span class="keyword">class </span>Postprocessor(object):</div>
<div class="line"><a name="l03858"></a><span class="lineno"> 3858</span>&#160;  <span class="stringliteral">&quot;Postprocess a container keeping some context&quot;</span></div>
<div class="line"><a name="l03859"></a><span class="lineno"> 3859</span>&#160; </div>
<div class="line"><a name="l03860"></a><span class="lineno"> 3860</span>&#160;  stages = []</div>
<div class="line"><a name="l03861"></a><span class="lineno"> 3861</span>&#160; </div>
<div class="line"><a name="l03862"></a><span class="lineno"> 3862</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03863"></a><span class="lineno"> 3863</span>&#160;    self.stages = StageDict(Postprocessor.stages, self)</div>
<div class="line"><a name="l03864"></a><span class="lineno"> 3864</span>&#160;    self.current = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03865"></a><span class="lineno"> 3865</span>&#160;    self.last = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03866"></a><span class="lineno"> 3866</span>&#160; </div>
<div class="line"><a name="l03867"></a><span class="lineno"> 3867</span>&#160;  <span class="keyword">def </span>postprocess(self, next):</div>
<div class="line"><a name="l03868"></a><span class="lineno"> 3868</span>&#160;    <span class="stringliteral">&quot;Postprocess a container and its contents.&quot;</span></div>
<div class="line"><a name="l03869"></a><span class="lineno"> 3869</span>&#160;    self.postrecursive(self.current)</div>
<div class="line"><a name="l03870"></a><span class="lineno"> 3870</span>&#160;    result = self.postcurrent(next)</div>
<div class="line"><a name="l03871"></a><span class="lineno"> 3871</span>&#160;    self.last = self.current</div>
<div class="line"><a name="l03872"></a><span class="lineno"> 3872</span>&#160;    self.current = next</div>
<div class="line"><a name="l03873"></a><span class="lineno"> 3873</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l03874"></a><span class="lineno"> 3874</span>&#160; </div>
<div class="line"><a name="l03875"></a><span class="lineno"> 3875</span>&#160;  <span class="keyword">def </span>postrecursive(self, container):</div>
<div class="line"><a name="l03876"></a><span class="lineno"> 3876</span>&#160;    <span class="stringliteral">&quot;Postprocess the container contents recursively&quot;</span></div>
<div class="line"><a name="l03877"></a><span class="lineno"> 3877</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> hasattr(container, <span class="stringliteral">&#39;contents&#39;</span>):</div>
<div class="line"><a name="l03878"></a><span class="lineno"> 3878</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03879"></a><span class="lineno"> 3879</span>&#160;    <span class="keywordflow">if</span> len(container.contents) == 0:</div>
<div class="line"><a name="l03880"></a><span class="lineno"> 3880</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l03881"></a><span class="lineno"> 3881</span>&#160;    <span class="keywordflow">if</span> hasattr(container, <span class="stringliteral">&#39;postprocess&#39;</span>):</div>
<div class="line"><a name="l03882"></a><span class="lineno"> 3882</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> container.postprocess:</div>
<div class="line"><a name="l03883"></a><span class="lineno"> 3883</span>&#160;        <span class="keywordflow">return</span></div>
<div class="line"><a name="l03884"></a><span class="lineno"> 3884</span>&#160;    postprocessor = Postprocessor()</div>
<div class="line"><a name="l03885"></a><span class="lineno"> 3885</span>&#160;    contents = []</div>
<div class="line"><a name="l03886"></a><span class="lineno"> 3886</span>&#160;    <span class="keywordflow">for</span> element <span class="keywordflow">in</span> container.contents:</div>
<div class="line"><a name="l03887"></a><span class="lineno"> 3887</span>&#160;      post = postprocessor.postprocess(element)</div>
<div class="line"><a name="l03888"></a><span class="lineno"> 3888</span>&#160;      <span class="keywordflow">if</span> post:</div>
<div class="line"><a name="l03889"></a><span class="lineno"> 3889</span>&#160;        contents.append(post)</div>
<div class="line"><a name="l03890"></a><span class="lineno"> 3890</span>&#160;    <span class="comment"># two rounds to empty the pipeline</span></div>
<div class="line"><a name="l03891"></a><span class="lineno"> 3891</span>&#160;    <span class="keywordflow">for</span> i <span class="keywordflow">in</span> range(2):</div>
<div class="line"><a name="l03892"></a><span class="lineno"> 3892</span>&#160;      post = postprocessor.postprocess(<span class="keywordtype">None</span>)</div>
<div class="line"><a name="l03893"></a><span class="lineno"> 3893</span>&#160;      <span class="keywordflow">if</span> post:</div>
<div class="line"><a name="l03894"></a><span class="lineno"> 3894</span>&#160;        contents.append(post)</div>
<div class="line"><a name="l03895"></a><span class="lineno"> 3895</span>&#160;    container.contents = contents</div>
<div class="line"><a name="l03896"></a><span class="lineno"> 3896</span>&#160; </div>
<div class="line"><a name="l03897"></a><span class="lineno"> 3897</span>&#160;  <span class="keyword">def </span>postcurrent(self, next):</div>
<div class="line"><a name="l03898"></a><span class="lineno"> 3898</span>&#160;    <span class="stringliteral">&quot;Postprocess the current element taking into account next and last.&quot;</span></div>
<div class="line"><a name="l03899"></a><span class="lineno"> 3899</span>&#160;    stage = self.stages.getstage(self.current)</div>
<div class="line"><a name="l03900"></a><span class="lineno"> 3900</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> stage:</div>
<div class="line"><a name="l03901"></a><span class="lineno"> 3901</span>&#160;      <span class="keywordflow">return</span> self.current</div>
<div class="line"><a name="l03902"></a><span class="lineno"> 3902</span>&#160;    <span class="keywordflow">return</span> stage.postprocess(self.last, self.current, next)</div>
<div class="line"><a name="l03903"></a><span class="lineno"> 3903</span>&#160; </div>
<div class="line"><a name="l03904"></a><span class="lineno"> 3904</span>&#160;<span class="keyword">class </span>StageDict(object):</div>
<div class="line"><a name="l03905"></a><span class="lineno"> 3905</span>&#160;  <span class="stringliteral">&quot;A dictionary of stages corresponding to classes&quot;</span></div>
<div class="line"><a name="l03906"></a><span class="lineno"> 3906</span>&#160; </div>
<div class="line"><a name="l03907"></a><span class="lineno"> 3907</span>&#160;  <span class="keyword">def </span>__init__(self, classes, postprocessor):</div>
<div class="line"><a name="l03908"></a><span class="lineno"> 3908</span>&#160;    <span class="stringliteral">&quot;Instantiate an element from elyxer.each class and store as a dictionary&quot;</span></div>
<div class="line"><a name="l03909"></a><span class="lineno"> 3909</span>&#160;    instances = self.instantiate(classes, postprocessor)</div>
<div class="line"><a name="l03910"></a><span class="lineno"> 3910</span>&#160;    self.stagedict = dict([(x.processedclass, x) <span class="keywordflow">for</span> x <span class="keywordflow">in</span> instances])</div>
<div class="line"><a name="l03911"></a><span class="lineno"> 3911</span>&#160; </div>
<div class="line"><a name="l03912"></a><span class="lineno"> 3912</span>&#160;  <span class="keyword">def </span>instantiate(self, classes, postprocessor):</div>
<div class="line"><a name="l03913"></a><span class="lineno"> 3913</span>&#160;    <span class="stringliteral">&quot;Instantiate an element from elyxer.each class&quot;</span></div>
<div class="line"><a name="l03914"></a><span class="lineno"> 3914</span>&#160;    stages = [x.__new__(x) <span class="keywordflow">for</span> x <span class="keywordflow">in</span> classes]</div>
<div class="line"><a name="l03915"></a><span class="lineno"> 3915</span>&#160;    <span class="keywordflow">for</span> element <span class="keywordflow">in</span> stages:</div>
<div class="line"><a name="l03916"></a><span class="lineno"> 3916</span>&#160;      element.__init__()</div>
<div class="line"><a name="l03917"></a><span class="lineno"> 3917</span>&#160;      element.postprocessor = postprocessor</div>
<div class="line"><a name="l03918"></a><span class="lineno"> 3918</span>&#160;    <span class="keywordflow">return</span> stages</div>
<div class="line"><a name="l03919"></a><span class="lineno"> 3919</span>&#160; </div>
<div class="line"><a name="l03920"></a><span class="lineno"> 3920</span>&#160;  <span class="keyword">def </span>getstage(self, element):</div>
<div class="line"><a name="l03921"></a><span class="lineno"> 3921</span>&#160;    <span class="stringliteral">&quot;Get the stage for a given element, if the type is in the dict&quot;</span></div>
<div class="line"><a name="l03922"></a><span class="lineno"> 3922</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> element.__class__ <span class="keywordflow">in</span> self.stagedict:</div>
<div class="line"><a name="l03923"></a><span class="lineno"> 3923</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l03924"></a><span class="lineno"> 3924</span>&#160;    <span class="keywordflow">return</span> self.stagedict[element.__class__]</div>
<div class="line"><a name="l03925"></a><span class="lineno"> 3925</span>&#160; </div>
<div class="line"><a name="l03926"></a><span class="lineno"> 3926</span>&#160; </div>
<div class="line"><a name="l03927"></a><span class="lineno"> 3927</span>&#160; </div>
<div class="line"><a name="l03928"></a><span class="lineno"> 3928</span>&#160;<span class="keyword">class </span>Label(Link):</div>
<div class="line"><a name="l03929"></a><span class="lineno"> 3929</span>&#160;  <span class="stringliteral">&quot;A label to be referenced&quot;</span></div>
<div class="line"><a name="l03930"></a><span class="lineno"> 3930</span>&#160; </div>
<div class="line"><a name="l03931"></a><span class="lineno"> 3931</span>&#160;  names = dict()</div>
<div class="line"><a name="l03932"></a><span class="lineno"> 3932</span>&#160;  lastlayout = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03933"></a><span class="lineno"> 3933</span>&#160; </div>
<div class="line"><a name="l03934"></a><span class="lineno"> 3934</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l03935"></a><span class="lineno"> 3935</span>&#160;    Link.__init__(self)</div>
<div class="line"><a name="l03936"></a><span class="lineno"> 3936</span>&#160;    self.lastnumbered = <span class="keywordtype">None</span></div>
<div class="line"><a name="l03937"></a><span class="lineno"> 3937</span>&#160; </div>
<div class="line"><a name="l03938"></a><span class="lineno"> 3938</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03939"></a><span class="lineno"> 3939</span>&#160;    <span class="stringliteral">&quot;Process a label container.&quot;</span></div>
<div class="line"><a name="l03940"></a><span class="lineno"> 3940</span>&#160;    key = self.getparameter(<span class="stringliteral">&#39;name&#39;</span>)</div>
<div class="line"><a name="l03941"></a><span class="lineno"> 3941</span>&#160;    self.create(<span class="stringliteral">&#39; &#39;</span>, key)</div>
<div class="line"><a name="l03942"></a><span class="lineno"> 3942</span>&#160;    self.lastnumbered = Label.lastlayout</div>
<div class="line"><a name="l03943"></a><span class="lineno"> 3943</span>&#160; </div>
<div class="line"><a name="l03944"></a><span class="lineno"> 3944</span>&#160;  <span class="keyword">def </span>create(self, text, key, type = &#39;Label&#39;):</div>
<div class="line"><a name="l03945"></a><span class="lineno"> 3945</span>&#160;    <span class="stringliteral">&quot;Create the label for a given key.&quot;</span></div>
<div class="line"><a name="l03946"></a><span class="lineno"> 3946</span>&#160;    self.key = key</div>
<div class="line"><a name="l03947"></a><span class="lineno"> 3947</span>&#160;    self.complete(text, anchor = key, type = type)</div>
<div class="line"><a name="l03948"></a><span class="lineno"> 3948</span>&#160;    Label.names[key] = self</div>
<div class="line"><a name="l03949"></a><span class="lineno"> 3949</span>&#160;    <span class="keywordflow">if</span> key <span class="keywordflow">in</span> Reference.references:</div>
<div class="line"><a name="l03950"></a><span class="lineno"> 3950</span>&#160;      <span class="keywordflow">for</span> reference <span class="keywordflow">in</span> Reference.references[key]:</div>
<div class="line"><a name="l03951"></a><span class="lineno"> 3951</span>&#160;        reference.destination = self</div>
<div class="line"><a name="l03952"></a><span class="lineno"> 3952</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l03953"></a><span class="lineno"> 3953</span>&#160; </div>
<div class="line"><a name="l03954"></a><span class="lineno"> 3954</span>&#160;  <span class="keyword">def </span>findpartkey(self):</div>
<div class="line"><a name="l03955"></a><span class="lineno"> 3955</span>&#160;    <span class="stringliteral">&quot;Get the part key for the latest numbered container seen.&quot;</span></div>
<div class="line"><a name="l03956"></a><span class="lineno"> 3956</span>&#160;    numbered = self.numbered(self)</div>
<div class="line"><a name="l03957"></a><span class="lineno"> 3957</span>&#160;    <span class="keywordflow">if</span> numbered <span class="keywordflow">and</span> numbered.partkey:</div>
<div class="line"><a name="l03958"></a><span class="lineno"> 3958</span>&#160;      <span class="keywordflow">return</span> numbered.partkey</div>
<div class="line"><a name="l03959"></a><span class="lineno"> 3959</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l03960"></a><span class="lineno"> 3960</span>&#160; </div>
<div class="line"><a name="l03961"></a><span class="lineno"> 3961</span>&#160;  <span class="keyword">def </span>numbered(self, container):</div>
<div class="line"><a name="l03962"></a><span class="lineno"> 3962</span>&#160;    <span class="stringliteral">&quot;Get the numbered container for the label.&quot;</span></div>
<div class="line"><a name="l03963"></a><span class="lineno"> 3963</span>&#160;    <span class="keywordflow">if</span> container.partkey:</div>
<div class="line"><a name="l03964"></a><span class="lineno"> 3964</span>&#160;      <span class="keywordflow">return</span> container</div>
<div class="line"><a name="l03965"></a><span class="lineno"> 3965</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> container.parent:</div>
<div class="line"><a name="l03966"></a><span class="lineno"> 3966</span>&#160;      <span class="keywordflow">if</span> self.lastnumbered:</div>
<div class="line"><a name="l03967"></a><span class="lineno"> 3967</span>&#160;        <span class="keywordflow">return</span> self.lastnumbered</div>
<div class="line"><a name="l03968"></a><span class="lineno"> 3968</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l03969"></a><span class="lineno"> 3969</span>&#160;    <span class="keywordflow">return</span> self.numbered(container.parent)</div>
<div class="line"><a name="l03970"></a><span class="lineno"> 3970</span>&#160; </div>
<div class="line"><a name="l03971"></a><span class="lineno"> 3971</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l03972"></a><span class="lineno"> 3972</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l03973"></a><span class="lineno"> 3973</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> hasattr(self, <span class="stringliteral">&#39;key&#39;</span>):</div>
<div class="line"><a name="l03974"></a><span class="lineno"> 3974</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&#39;Unnamed label&#39;</span></div>
<div class="line"><a name="l03975"></a><span class="lineno"> 3975</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Label &#39;</span> + self.key</div>
<div class="line"><a name="l03976"></a><span class="lineno"> 3976</span>&#160; </div>
<div class="line"><a name="l03977"></a><span class="lineno"> 3977</span>&#160;<span class="keyword">class </span>Reference(Link):</div>
<div class="line"><a name="l03978"></a><span class="lineno"> 3978</span>&#160;  <span class="stringliteral">&quot;A reference to a label.&quot;</span></div>
<div class="line"><a name="l03979"></a><span class="lineno"> 3979</span>&#160; </div>
<div class="line"><a name="l03980"></a><span class="lineno"> 3980</span>&#160;  references = dict()</div>
<div class="line"><a name="l03981"></a><span class="lineno"> 3981</span>&#160;  key = <span class="stringliteral">&#39;none&#39;</span></div>
<div class="line"><a name="l03982"></a><span class="lineno"> 3982</span>&#160; </div>
<div class="line"><a name="l03983"></a><span class="lineno"> 3983</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l03984"></a><span class="lineno"> 3984</span>&#160;    <span class="stringliteral">&quot;Read the reference and set the arrow.&quot;</span></div>
<div class="line"><a name="l03985"></a><span class="lineno"> 3985</span>&#160;    self.key = self.getparameter(<span class="stringliteral">&#39;reference&#39;</span>)</div>
<div class="line"><a name="l03986"></a><span class="lineno"> 3986</span>&#160;    <span class="keywordflow">if</span> self.key <span class="keywordflow">in</span> Label.names:</div>
<div class="line"><a name="l03987"></a><span class="lineno"> 3987</span>&#160;      self.direction = <span class="stringliteral">u&#39;‚Üë&#39;</span></div>
<div class="line"><a name="l03988"></a><span class="lineno"> 3988</span>&#160;      label = Label.names[self.key]</div>
<div class="line"><a name="l03989"></a><span class="lineno"> 3989</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l03990"></a><span class="lineno"> 3990</span>&#160;      self.direction = <span class="stringliteral">u&#39;‚Üì&#39;</span></div>
<div class="line"><a name="l03991"></a><span class="lineno"> 3991</span>&#160;      label = Label().complete(<span class="stringliteral">&#39; &#39;</span>, self.key, <span class="stringliteral">&#39;preref&#39;</span>)</div>
<div class="line"><a name="l03992"></a><span class="lineno"> 3992</span>&#160;    self.destination = label</div>
<div class="line"><a name="l03993"></a><span class="lineno"> 3993</span>&#160;    self.formatcontents()</div>
<div class="line"><a name="l03994"></a><span class="lineno"> 3994</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.key <span class="keywordflow">in</span> Reference.references:</div>
<div class="line"><a name="l03995"></a><span class="lineno"> 3995</span>&#160;      Reference.references[self.key] = []</div>
<div class="line"><a name="l03996"></a><span class="lineno"> 3996</span>&#160;    Reference.references[self.key].append(self)</div>
<div class="line"><a name="l03997"></a><span class="lineno"> 3997</span>&#160; </div>
<div class="line"><a name="l03998"></a><span class="lineno"> 3998</span>&#160;  <span class="keyword">def </span>formatcontents(self):</div>
<div class="line"><a name="l03999"></a><span class="lineno"> 3999</span>&#160;    <span class="stringliteral">&quot;Format the reference contents.&quot;</span></div>
<div class="line"><a name="l04000"></a><span class="lineno"> 4000</span>&#160;    formatkey = self.getparameter(<span class="stringliteral">&#39;LatexCommand&#39;</span>)</div>
<div class="line"><a name="l04001"></a><span class="lineno"> 4001</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> formatkey:</div>
<div class="line"><a name="l04002"></a><span class="lineno"> 4002</span>&#160;      formatkey = <span class="stringliteral">&#39;ref&#39;</span></div>
<div class="line"><a name="l04003"></a><span class="lineno"> 4003</span>&#160;    self.formatted = <span class="stringliteral">u&#39;‚Üï&#39;</span></div>
<div class="line"><a name="l04004"></a><span class="lineno"> 4004</span>&#160;    <span class="keywordflow">if</span> formatkey <span class="keywordflow">in</span> StyleConfig.referenceformats:</div>
<div class="line"><a name="l04005"></a><span class="lineno"> 4005</span>&#160;      self.formatted = StyleConfig.referenceformats[formatkey]</div>
<div class="line"><a name="l04006"></a><span class="lineno"> 4006</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l04007"></a><span class="lineno"> 4007</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unknown reference format &#39;</span> + formatkey)</div>
<div class="line"><a name="l04008"></a><span class="lineno"> 4008</span>&#160;    self.replace(<span class="stringliteral">u&#39;‚Üï&#39;</span>, self.direction)</div>
<div class="line"><a name="l04009"></a><span class="lineno"> 4009</span>&#160;    self.replace(<span class="stringliteral">&#39;#&#39;</span>, <span class="stringliteral">&#39;1&#39;</span>)</div>
<div class="line"><a name="l04010"></a><span class="lineno"> 4010</span>&#160;    self.replace(<span class="stringliteral">&#39;on-page&#39;</span>, Translator.translate(<span class="stringliteral">&#39;on-page&#39;</span>))</div>
<div class="line"><a name="l04011"></a><span class="lineno"> 4011</span>&#160;    partkey = self.destination.findpartkey()</div>
<div class="line"><a name="l04012"></a><span class="lineno"> 4012</span>&#160;    <span class="comment"># only if partkey and partkey.number are not null, send partkey.number</span></div>
<div class="line"><a name="l04013"></a><span class="lineno"> 4013</span>&#160;    self.replace(<span class="stringliteral">&#39;@&#39;</span>, partkey <span class="keywordflow">and</span> partkey.number)</div>
<div class="line"><a name="l04014"></a><span class="lineno"> 4014</span>&#160;    self.replace(<span class="stringliteral">u&#39;¬∂&#39;</span>, partkey <span class="keywordflow">and</span> partkey.tocentry)</div>
<div class="line"><a name="l04015"></a><span class="lineno"> 4015</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> <span class="stringliteral">&#39;$&#39;</span> <span class="keywordflow">in</span> self.formatted <span class="keywordflow">or</span> <span class="keywordflow">not</span> partkey <span class="keywordflow">or</span> <span class="keywordflow">not</span> partkey.titlecontents:</div>
<div class="line"><a name="l04016"></a><span class="lineno"> 4016</span>&#160;      <span class="comment"># there is a $ left, but it should go away on preprocessing</span></div>
<div class="line"><a name="l04017"></a><span class="lineno"> 4017</span>&#160;      self.contents = [Constant(self.formatted)]</div>
<div class="line"><a name="l04018"></a><span class="lineno"> 4018</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l04019"></a><span class="lineno"> 4019</span>&#160;    pieces = self.formatted.split(<span class="stringliteral">&#39;$&#39;</span>)</div>
<div class="line"><a name="l04020"></a><span class="lineno"> 4020</span>&#160;    self.contents = [Constant(pieces[0])]</div>
<div class="line"><a name="l04021"></a><span class="lineno"> 4021</span>&#160;    <span class="keywordflow">for</span> piece <span class="keywordflow">in</span> pieces[1:]:</div>
<div class="line"><a name="l04022"></a><span class="lineno"> 4022</span>&#160;      self.contents += partkey.titlecontents</div>
<div class="line"><a name="l04023"></a><span class="lineno"> 4023</span>&#160;      self.contents.append(Constant(piece))</div>
<div class="line"><a name="l04024"></a><span class="lineno"> 4024</span>&#160; </div>
<div class="line"><a name="l04025"></a><span class="lineno"> 4025</span>&#160;  <span class="keyword">def </span>replace(self, key, value):</div>
<div class="line"><a name="l04026"></a><span class="lineno"> 4026</span>&#160;    <span class="stringliteral">&quot;Replace a key in the format template with a value.&quot;</span></div>
<div class="line"><a name="l04027"></a><span class="lineno"> 4027</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> key <span class="keywordflow">in</span> self.formatted:</div>
<div class="line"><a name="l04028"></a><span class="lineno"> 4028</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l04029"></a><span class="lineno"> 4029</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> value:</div>
<div class="line"><a name="l04030"></a><span class="lineno"> 4030</span>&#160;      value = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l04031"></a><span class="lineno"> 4031</span>&#160;    self.formatted = self.formatted.replace(key, value)</div>
<div class="line"><a name="l04032"></a><span class="lineno"> 4032</span>&#160; </div>
<div class="line"><a name="l04033"></a><span class="lineno"> 4033</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l04034"></a><span class="lineno"> 4034</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l04035"></a><span class="lineno"> 4035</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Reference &#39;</span> + self.key</div>
<div class="line"><a name="l04036"></a><span class="lineno"> 4036</span>&#160; </div>
<div class="line"><a name="l04037"></a><span class="lineno"> 4037</span>&#160; </div>
<div class="line"><a name="l04038"></a><span class="lineno"> 4038</span>&#160; </div>
<div class="line"><a name="l04039"></a><span class="lineno"> 4039</span>&#160;<span class="keyword">class </span>FormulaCommand(FormulaBit):</div>
<div class="line"><a name="l04040"></a><span class="lineno"> 4040</span>&#160;  <span class="stringliteral">&quot;A LaTeX command inside a formula&quot;</span></div>
<div class="line"><a name="l04041"></a><span class="lineno"> 4041</span>&#160; </div>
<div class="line"><a name="l04042"></a><span class="lineno"> 4042</span>&#160;  types = []</div>
<div class="line"><a name="l04043"></a><span class="lineno"> 4043</span>&#160;  start = FormulaConfig.starts[<span class="stringliteral">&#39;command&#39;</span>]</div>
<div class="line"><a name="l04044"></a><span class="lineno"> 4044</span>&#160;  commandmap = <span class="keywordtype">None</span></div>
<div class="line"><a name="l04045"></a><span class="lineno"> 4045</span>&#160; </div>
<div class="line"><a name="l04046"></a><span class="lineno"> 4046</span>&#160;  <span class="keyword">def </span>detect(self, pos):</div>
<div class="line"><a name="l04047"></a><span class="lineno"> 4047</span>&#160;    <span class="stringliteral">&quot;Find the current command.&quot;</span></div>
<div class="line"><a name="l04048"></a><span class="lineno"> 4048</span>&#160;    <span class="keywordflow">return</span> pos.checkfor(FormulaCommand.start)</div>
<div class="line"><a name="l04049"></a><span class="lineno"> 4049</span>&#160; </div>
<div class="line"><a name="l04050"></a><span class="lineno"> 4050</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04051"></a><span class="lineno"> 4051</span>&#160;    <span class="stringliteral">&quot;Parse the command.&quot;</span></div>
<div class="line"><a name="l04052"></a><span class="lineno"> 4052</span>&#160;    command = self.extractcommand(pos)</div>
<div class="line"><a name="l04053"></a><span class="lineno"> 4053</span>&#160;    bit = self.parsewithcommand(command, pos)</div>
<div class="line"><a name="l04054"></a><span class="lineno"> 4054</span>&#160;    <span class="keywordflow">if</span> bit:</div>
<div class="line"><a name="l04055"></a><span class="lineno"> 4055</span>&#160;      <span class="keywordflow">return</span> bit</div>
<div class="line"><a name="l04056"></a><span class="lineno"> 4056</span>&#160;    <span class="keywordflow">if</span> command.startswith(<span class="stringliteral">&#39;\\up&#39;</span>) <span class="keywordflow">or</span> command.startswith(<span class="stringliteral">&#39;\\Up&#39;</span>):</div>
<div class="line"><a name="l04057"></a><span class="lineno"> 4057</span>&#160;      upgreek = self.parseupgreek(command, pos)</div>
<div class="line"><a name="l04058"></a><span class="lineno"> 4058</span>&#160;      <span class="keywordflow">if</span> upgreek:</div>
<div class="line"><a name="l04059"></a><span class="lineno"> 4059</span>&#160;        <span class="keywordflow">return</span> upgreek</div>
<div class="line"><a name="l04060"></a><span class="lineno"> 4060</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.factory.defining:</div>
<div class="line"><a name="l04061"></a><span class="lineno"> 4061</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unknown command &#39;</span> + command)</div>
<div class="line"><a name="l04062"></a><span class="lineno"> 4062</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;unknown&quot;&#39;</span>)</div>
<div class="line"><a name="l04063"></a><span class="lineno"> 4063</span>&#160;    self.add(FormulaConstant(command))</div>
<div class="line"><a name="l04064"></a><span class="lineno"> 4064</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04065"></a><span class="lineno"> 4065</span>&#160; </div>
<div class="line"><a name="l04066"></a><span class="lineno"> 4066</span>&#160;  <span class="keyword">def </span>parsewithcommand(self, command, pos):</div>
<div class="line"><a name="l04067"></a><span class="lineno"> 4067</span>&#160;    <span class="stringliteral">&quot;Parse the command type once we have the command.&quot;</span></div>
<div class="line"><a name="l04068"></a><span class="lineno"> 4068</span>&#160;    <span class="keywordflow">for</span> type <span class="keywordflow">in</span> FormulaCommand.types:</div>
<div class="line"><a name="l04069"></a><span class="lineno"> 4069</span>&#160;      <span class="keywordflow">if</span> command <span class="keywordflow">in</span> type.commandmap:</div>
<div class="line"><a name="l04070"></a><span class="lineno"> 4070</span>&#160;        <span class="keywordflow">return</span> self.parsecommandtype(command, type, pos)</div>
<div class="line"><a name="l04071"></a><span class="lineno"> 4071</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04072"></a><span class="lineno"> 4072</span>&#160; </div>
<div class="line"><a name="l04073"></a><span class="lineno"> 4073</span>&#160;  <span class="keyword">def </span>parsecommandtype(self, command, type, pos):</div>
<div class="line"><a name="l04074"></a><span class="lineno"> 4074</span>&#160;    <span class="stringliteral">&quot;Parse a given command type.&quot;</span></div>
<div class="line"><a name="l04075"></a><span class="lineno"> 4075</span>&#160;    bit = self.factory.create(type)</div>
<div class="line"><a name="l04076"></a><span class="lineno"> 4076</span>&#160;    bit.setcommand(command)</div>
<div class="line"><a name="l04077"></a><span class="lineno"> 4077</span>&#160;    returned = bit.parsebit(pos)</div>
<div class="line"><a name="l04078"></a><span class="lineno"> 4078</span>&#160;    <span class="keywordflow">if</span> returned:</div>
<div class="line"><a name="l04079"></a><span class="lineno"> 4079</span>&#160;      <span class="keywordflow">return</span> returned</div>
<div class="line"><a name="l04080"></a><span class="lineno"> 4080</span>&#160;    <span class="keywordflow">return</span> bit</div>
<div class="line"><a name="l04081"></a><span class="lineno"> 4081</span>&#160; </div>
<div class="line"><a name="l04082"></a><span class="lineno"> 4082</span>&#160;  <span class="keyword">def </span>extractcommand(self, pos):</div>
<div class="line"><a name="l04083"></a><span class="lineno"> 4083</span>&#160;    <span class="stringliteral">&quot;Extract the command from elyxer.the current position.&quot;</span></div>
<div class="line"><a name="l04084"></a><span class="lineno"> 4084</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.checkskip(FormulaCommand.start):</div>
<div class="line"><a name="l04085"></a><span class="lineno"> 4085</span>&#160;      pos.error(<span class="stringliteral">&#39;Missing command start &#39;</span> + FormulaCommand.start)</div>
<div class="line"><a name="l04086"></a><span class="lineno"> 4086</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l04087"></a><span class="lineno"> 4087</span>&#160;    <span class="keywordflow">if</span> pos.finished():</div>
<div class="line"><a name="l04088"></a><span class="lineno"> 4088</span>&#160;      <span class="keywordflow">return</span> self.emptycommand(pos)</div>
<div class="line"><a name="l04089"></a><span class="lineno"> 4089</span>&#160;    <span class="keywordflow">if</span> pos.current().isalpha():</div>
<div class="line"><a name="l04090"></a><span class="lineno"> 4090</span>&#160;      <span class="comment"># alpha command</span></div>
<div class="line"><a name="l04091"></a><span class="lineno"> 4091</span>&#160;      command = FormulaCommand.start + pos.globalpha()</div>
<div class="line"><a name="l04092"></a><span class="lineno"> 4092</span>&#160;      <span class="comment"># skip mark of short command</span></div>
<div class="line"><a name="l04093"></a><span class="lineno"> 4093</span>&#160;      pos.checkskip(<span class="stringliteral">&#39;*&#39;</span>)</div>
<div class="line"><a name="l04094"></a><span class="lineno"> 4094</span>&#160;      <span class="keywordflow">return</span> command</div>
<div class="line"><a name="l04095"></a><span class="lineno"> 4095</span>&#160;    <span class="comment"># symbol command</span></div>
<div class="line"><a name="l04096"></a><span class="lineno"> 4096</span>&#160;    <span class="keywordflow">return</span> FormulaCommand.start + pos.skipcurrent()</div>
<div class="line"><a name="l04097"></a><span class="lineno"> 4097</span>&#160; </div>
<div class="line"><a name="l04098"></a><span class="lineno"> 4098</span>&#160;  <span class="keyword">def </span>emptycommand(self, pos):</div>
<div class="line"><a name="l04099"></a><span class="lineno"> 4099</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;Check for an empty command: look for command disguised as ending.</span></div>
<div class="line"><a name="l04100"></a><span class="lineno"> 4100</span>&#160;<span class="stringliteral">    Special case against &#39;{ \{ \} }&#39; situation.&quot;&quot;&quot;</span></div>
<div class="line"><a name="l04101"></a><span class="lineno"> 4101</span>&#160;    command = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l04102"></a><span class="lineno"> 4102</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.isout():</div>
<div class="line"><a name="l04103"></a><span class="lineno"> 4103</span>&#160;      ending = pos.nextending()</div>
<div class="line"><a name="l04104"></a><span class="lineno"> 4104</span>&#160;      <span class="keywordflow">if</span> ending <span class="keywordflow">and</span> pos.checkskip(ending):</div>
<div class="line"><a name="l04105"></a><span class="lineno"> 4105</span>&#160;        command = ending</div>
<div class="line"><a name="l04106"></a><span class="lineno"> 4106</span>&#160;    <span class="keywordflow">return</span> FormulaCommand.start + command</div>
<div class="line"><a name="l04107"></a><span class="lineno"> 4107</span>&#160; </div>
<div class="line"><a name="l04108"></a><span class="lineno"> 4108</span>&#160;  <span class="keyword">def </span>parseupgreek(self, command, pos):</div>
<div class="line"><a name="l04109"></a><span class="lineno"> 4109</span>&#160;    <span class="stringliteral">&quot;Parse the Greek \\up command..&quot;</span></div>
<div class="line"><a name="l04110"></a><span class="lineno"> 4110</span>&#160;    <span class="keywordflow">if</span> len(command) &lt; 4:</div>
<div class="line"><a name="l04111"></a><span class="lineno"> 4111</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04112"></a><span class="lineno"> 4112</span>&#160;    <span class="keywordflow">if</span> command.startswith(<span class="stringliteral">&#39;\\up&#39;</span>):</div>
<div class="line"><a name="l04113"></a><span class="lineno"> 4113</span>&#160;      upcommand = <span class="stringliteral">&#39;\\&#39;</span> + command[3:]</div>
<div class="line"><a name="l04114"></a><span class="lineno"> 4114</span>&#160;    <span class="keywordflow">elif</span> pos.checkskip(<span class="stringliteral">&#39;\\Up&#39;</span>):</div>
<div class="line"><a name="l04115"></a><span class="lineno"> 4115</span>&#160;      upcommand = <span class="stringliteral">&#39;\\&#39;</span> + command[3:4].upper() + command[4:]</div>
<div class="line"><a name="l04116"></a><span class="lineno"> 4116</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l04117"></a><span class="lineno"> 4117</span>&#160;      Trace.error(<span class="stringliteral">&#39;Impossible upgreek command: &#39;</span> + command)</div>
<div class="line"><a name="l04118"></a><span class="lineno"> 4118</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l04119"></a><span class="lineno"> 4119</span>&#160;    upgreek = self.parsewithcommand(upcommand, pos)</div>
<div class="line"><a name="l04120"></a><span class="lineno"> 4120</span>&#160;    <span class="keywordflow">if</span> upgreek:</div>
<div class="line"><a name="l04121"></a><span class="lineno"> 4121</span>&#160;      upgreek.type = <span class="stringliteral">&#39;font&#39;</span></div>
<div class="line"><a name="l04122"></a><span class="lineno"> 4122</span>&#160;    <span class="keywordflow">return</span> upgreek</div>
<div class="line"><a name="l04123"></a><span class="lineno"> 4123</span>&#160; </div>
<div class="line"><a name="l04124"></a><span class="lineno"> 4124</span>&#160;<span class="keyword">class </span>CommandBit(FormulaCommand):</div>
<div class="line"><a name="l04125"></a><span class="lineno"> 4125</span>&#160;  <span class="stringliteral">&quot;A formula bit that includes a command&quot;</span></div>
<div class="line"><a name="l04126"></a><span class="lineno"> 4126</span>&#160; </div>
<div class="line"><a name="l04127"></a><span class="lineno"> 4127</span>&#160;  <span class="keyword">def </span>setcommand(self, command):</div>
<div class="line"><a name="l04128"></a><span class="lineno"> 4128</span>&#160;    <span class="stringliteral">&quot;Set the command in the bit&quot;</span></div>
<div class="line"><a name="l04129"></a><span class="lineno"> 4129</span>&#160;    self.command = command</div>
<div class="line"><a name="l04130"></a><span class="lineno"> 4130</span>&#160;    <span class="keywordflow">if</span> self.commandmap:</div>
<div class="line"><a name="l04131"></a><span class="lineno"> 4131</span>&#160;      self.original += command</div>
<div class="line"><a name="l04132"></a><span class="lineno"> 4132</span>&#160;      self.translated = self.commandmap[self.command]</div>
<div class="line"><a name="l04133"></a><span class="lineno"> 4133</span>&#160; </div>
<div class="line"><a name="l04134"></a><span class="lineno"> 4134</span>&#160;  <span class="keyword">def </span>parseparameter(self, pos):</div>
<div class="line"><a name="l04135"></a><span class="lineno"> 4135</span>&#160;    <span class="stringliteral">&quot;Parse a parameter at the current position&quot;</span></div>
<div class="line"><a name="l04136"></a><span class="lineno"> 4136</span>&#160;    self.factory.clearskipped(pos)</div>
<div class="line"><a name="l04137"></a><span class="lineno"> 4137</span>&#160;    <span class="keywordflow">if</span> pos.finished():</div>
<div class="line"><a name="l04138"></a><span class="lineno"> 4138</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04139"></a><span class="lineno"> 4139</span>&#160;    parameter = self.factory.parseany(pos)</div>
<div class="line"><a name="l04140"></a><span class="lineno"> 4140</span>&#160;    self.add(parameter)</div>
<div class="line"><a name="l04141"></a><span class="lineno"> 4141</span>&#160;    <span class="keywordflow">return</span> parameter</div>
<div class="line"><a name="l04142"></a><span class="lineno"> 4142</span>&#160; </div>
<div class="line"><a name="l04143"></a><span class="lineno"> 4143</span>&#160;  <span class="keyword">def </span>parsesquare(self, pos):</div>
<div class="line"><a name="l04144"></a><span class="lineno"> 4144</span>&#160;    <span class="stringliteral">&quot;Parse a square bracket&quot;</span></div>
<div class="line"><a name="l04145"></a><span class="lineno"> 4145</span>&#160;    self.factory.clearskipped(pos)</div>
<div class="line"><a name="l04146"></a><span class="lineno"> 4146</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.factory.detecttype(SquareBracket, pos):</div>
<div class="line"><a name="l04147"></a><span class="lineno"> 4147</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04148"></a><span class="lineno"> 4148</span>&#160;    bracket = self.factory.parsetype(SquareBracket, pos)</div>
<div class="line"><a name="l04149"></a><span class="lineno"> 4149</span>&#160;    self.add(bracket)</div>
<div class="line"><a name="l04150"></a><span class="lineno"> 4150</span>&#160;    <span class="keywordflow">return</span> bracket</div>
<div class="line"><a name="l04151"></a><span class="lineno"> 4151</span>&#160; </div>
<div class="line"><a name="l04152"></a><span class="lineno"> 4152</span>&#160;  <span class="keyword">def </span>parseliteral(self, pos):</div>
<div class="line"><a name="l04153"></a><span class="lineno"> 4153</span>&#160;    <span class="stringliteral">&quot;Parse a literal bracket.&quot;</span></div>
<div class="line"><a name="l04154"></a><span class="lineno"> 4154</span>&#160;    self.factory.clearskipped(pos)</div>
<div class="line"><a name="l04155"></a><span class="lineno"> 4155</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.factory.detecttype(Bracket, pos):</div>
<div class="line"><a name="l04156"></a><span class="lineno"> 4156</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.isvalue():</div>
<div class="line"><a name="l04157"></a><span class="lineno"> 4157</span>&#160;        Trace.error(<span class="stringliteral">&#39;No literal parameter found at: &#39;</span> + pos.identifier())</div>
<div class="line"><a name="l04158"></a><span class="lineno"> 4158</span>&#160;        <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04159"></a><span class="lineno"> 4159</span>&#160;      <span class="keywordflow">return</span> pos.globvalue()</div>
<div class="line"><a name="l04160"></a><span class="lineno"> 4160</span>&#160;    bracket = Bracket().setfactory(self.factory)</div>
<div class="line"><a name="l04161"></a><span class="lineno"> 4161</span>&#160;    self.add(bracket.parseliteral(pos))</div>
<div class="line"><a name="l04162"></a><span class="lineno"> 4162</span>&#160;    <span class="keywordflow">return</span> bracket.literal</div>
<div class="line"><a name="l04163"></a><span class="lineno"> 4163</span>&#160; </div>
<div class="line"><a name="l04164"></a><span class="lineno"> 4164</span>&#160;  <span class="keyword">def </span>parsesquareliteral(self, pos):</div>
<div class="line"><a name="l04165"></a><span class="lineno"> 4165</span>&#160;    <span class="stringliteral">&quot;Parse a square bracket literally.&quot;</span></div>
<div class="line"><a name="l04166"></a><span class="lineno"> 4166</span>&#160;    self.factory.clearskipped(pos)</div>
<div class="line"><a name="l04167"></a><span class="lineno"> 4167</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.factory.detecttype(SquareBracket, pos):</div>
<div class="line"><a name="l04168"></a><span class="lineno"> 4168</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04169"></a><span class="lineno"> 4169</span>&#160;    bracket = SquareBracket().setfactory(self.factory)</div>
<div class="line"><a name="l04170"></a><span class="lineno"> 4170</span>&#160;    self.add(bracket.parseliteral(pos))</div>
<div class="line"><a name="l04171"></a><span class="lineno"> 4171</span>&#160;    <span class="keywordflow">return</span> bracket.literal</div>
<div class="line"><a name="l04172"></a><span class="lineno"> 4172</span>&#160; </div>
<div class="line"><a name="l04173"></a><span class="lineno"> 4173</span>&#160;  <span class="keyword">def </span>parsetext(self, pos):</div>
<div class="line"><a name="l04174"></a><span class="lineno"> 4174</span>&#160;    <span class="stringliteral">&quot;Parse a text parameter.&quot;</span></div>
<div class="line"><a name="l04175"></a><span class="lineno"> 4175</span>&#160;    self.factory.clearskipped(pos)</div>
<div class="line"><a name="l04176"></a><span class="lineno"> 4176</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.factory.detecttype(Bracket, pos):</div>
<div class="line"><a name="l04177"></a><span class="lineno"> 4177</span>&#160;      Trace.error(<span class="stringliteral">&#39;No text parameter for &#39;</span> + self.command)</div>
<div class="line"><a name="l04178"></a><span class="lineno"> 4178</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04179"></a><span class="lineno"> 4179</span>&#160;    bracket = Bracket().setfactory(self.factory).parsetext(pos)</div>
<div class="line"><a name="l04180"></a><span class="lineno"> 4180</span>&#160;    self.add(bracket)</div>
<div class="line"><a name="l04181"></a><span class="lineno"> 4181</span>&#160;    <span class="keywordflow">return</span> bracket</div>
<div class="line"><a name="l04182"></a><span class="lineno"> 4182</span>&#160; </div>
<div class="line"><a name="l04183"></a><span class="lineno"> 4183</span>&#160;<span class="keyword">class </span>EmptyCommand(CommandBit):</div>
<div class="line"><a name="l04184"></a><span class="lineno"> 4184</span>&#160;  <span class="stringliteral">&quot;An empty command (without parameters)&quot;</span></div>
<div class="line"><a name="l04185"></a><span class="lineno"> 4185</span>&#160; </div>
<div class="line"><a name="l04186"></a><span class="lineno"> 4186</span>&#160;  commandmap = FormulaConfig.commands</div>
<div class="line"><a name="l04187"></a><span class="lineno"> 4187</span>&#160; </div>
<div class="line"><a name="l04188"></a><span class="lineno"> 4188</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04189"></a><span class="lineno"> 4189</span>&#160;    <span class="stringliteral">&quot;Parse a command without parameters&quot;</span></div>
<div class="line"><a name="l04190"></a><span class="lineno"> 4190</span>&#160;    self.contents = [FormulaConstant(self.translated)]</div>
<div class="line"><a name="l04191"></a><span class="lineno"> 4191</span>&#160; </div>
<div class="line"><a name="l04192"></a><span class="lineno"> 4192</span>&#160;<span class="keyword">class </span>SpacedCommand(CommandBit):</div>
<div class="line"><a name="l04193"></a><span class="lineno"> 4193</span>&#160;  <span class="stringliteral">&quot;An empty command which should have math spacing in formulas.&quot;</span></div>
<div class="line"><a name="l04194"></a><span class="lineno"> 4194</span>&#160; </div>
<div class="line"><a name="l04195"></a><span class="lineno"> 4195</span>&#160;  commandmap = FormulaConfig.spacedcommands</div>
<div class="line"><a name="l04196"></a><span class="lineno"> 4196</span>&#160; </div>
<div class="line"><a name="l04197"></a><span class="lineno"> 4197</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04198"></a><span class="lineno"> 4198</span>&#160;    <span class="stringliteral">&quot;Place as contents the command translated and spaced.&quot;</span></div>
<div class="line"><a name="l04199"></a><span class="lineno"> 4199</span>&#160;    self.contents = [FormulaConstant(<span class="stringliteral">u&#39;‚Åü&#39;</span> + self.translated + <span class="stringliteral">u&#39;‚Åü&#39;</span>)]</div>
<div class="line"><a name="l04200"></a><span class="lineno"> 4200</span>&#160; </div>
<div class="line"><a name="l04201"></a><span class="lineno"> 4201</span>&#160;<span class="keyword">class </span>AlphaCommand(EmptyCommand):</div>
<div class="line"><a name="l04202"></a><span class="lineno"> 4202</span>&#160;  <span class="stringliteral">&quot;A command without paramters whose result is alphabetical&quot;</span></div>
<div class="line"><a name="l04203"></a><span class="lineno"> 4203</span>&#160; </div>
<div class="line"><a name="l04204"></a><span class="lineno"> 4204</span>&#160;  commandmap = FormulaConfig.alphacommands</div>
<div class="line"><a name="l04205"></a><span class="lineno"> 4205</span>&#160; </div>
<div class="line"><a name="l04206"></a><span class="lineno"> 4206</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04207"></a><span class="lineno"> 4207</span>&#160;    <span class="stringliteral">&quot;Parse the command and set type to alpha&quot;</span></div>
<div class="line"><a name="l04208"></a><span class="lineno"> 4208</span>&#160;    EmptyCommand.parsebit(self, pos)</div>
<div class="line"><a name="l04209"></a><span class="lineno"> 4209</span>&#160;    self.type = <span class="stringliteral">&#39;alpha&#39;</span></div>
<div class="line"><a name="l04210"></a><span class="lineno"> 4210</span>&#160; </div>
<div class="line"><a name="l04211"></a><span class="lineno"> 4211</span>&#160;<span class="keyword">class </span>OneParamFunction(CommandBit):</div>
<div class="line"><a name="l04212"></a><span class="lineno"> 4212</span>&#160;  <span class="stringliteral">&quot;A function of one parameter&quot;</span></div>
<div class="line"><a name="l04213"></a><span class="lineno"> 4213</span>&#160; </div>
<div class="line"><a name="l04214"></a><span class="lineno"> 4214</span>&#160;  commandmap = FormulaConfig.onefunctions</div>
<div class="line"><a name="l04215"></a><span class="lineno"> 4215</span>&#160;  simplified = <span class="keyword">False</span></div>
<div class="line"><a name="l04216"></a><span class="lineno"> 4216</span>&#160; </div>
<div class="line"><a name="l04217"></a><span class="lineno"> 4217</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04218"></a><span class="lineno"> 4218</span>&#160;    <span class="stringliteral">&quot;Parse a function with one parameter&quot;</span></div>
<div class="line"><a name="l04219"></a><span class="lineno"> 4219</span>&#160;    self.output = TaggedOutput().settag(self.translated)</div>
<div class="line"><a name="l04220"></a><span class="lineno"> 4220</span>&#160;    self.parseparameter(pos)</div>
<div class="line"><a name="l04221"></a><span class="lineno"> 4221</span>&#160;    self.simplifyifpossible()</div>
<div class="line"><a name="l04222"></a><span class="lineno"> 4222</span>&#160; </div>
<div class="line"><a name="l04223"></a><span class="lineno"> 4223</span>&#160;  <span class="keyword">def </span>simplifyifpossible(self):</div>
<div class="line"><a name="l04224"></a><span class="lineno"> 4224</span>&#160;    <span class="stringliteral">&quot;Try to simplify to a single character.&quot;</span></div>
<div class="line"><a name="l04225"></a><span class="lineno"> 4225</span>&#160;    <span class="keywordflow">if</span> self.original <span class="keywordflow">in</span> self.commandmap:</div>
<div class="line"><a name="l04226"></a><span class="lineno"> 4226</span>&#160;      self.output = FixedOutput()</div>
<div class="line"><a name="l04227"></a><span class="lineno"> 4227</span>&#160;      self.html = [self.commandmap[self.original]]</div>
<div class="line"><a name="l04228"></a><span class="lineno"> 4228</span>&#160;      self.simplified = <span class="keyword">True</span></div>
<div class="line"><a name="l04229"></a><span class="lineno"> 4229</span>&#160; </div>
<div class="line"><a name="l04230"></a><span class="lineno"> 4230</span>&#160;<span class="keyword">class </span>SymbolFunction(CommandBit):</div>
<div class="line"><a name="l04231"></a><span class="lineno"> 4231</span>&#160;  <span class="stringliteral">&quot;Find a function which is represented by a symbol (like _ or ^)&quot;</span></div>
<div class="line"><a name="l04232"></a><span class="lineno"> 4232</span>&#160; </div>
<div class="line"><a name="l04233"></a><span class="lineno"> 4233</span>&#160;  commandmap = FormulaConfig.symbolfunctions</div>
<div class="line"><a name="l04234"></a><span class="lineno"> 4234</span>&#160; </div>
<div class="line"><a name="l04235"></a><span class="lineno"> 4235</span>&#160;  <span class="keyword">def </span>detect(self, pos):</div>
<div class="line"><a name="l04236"></a><span class="lineno"> 4236</span>&#160;    <span class="stringliteral">&quot;Find the symbol&quot;</span></div>
<div class="line"><a name="l04237"></a><span class="lineno"> 4237</span>&#160;    <span class="keywordflow">return</span> pos.current() <span class="keywordflow">in</span> SymbolFunction.commandmap</div>
<div class="line"><a name="l04238"></a><span class="lineno"> 4238</span>&#160; </div>
<div class="line"><a name="l04239"></a><span class="lineno"> 4239</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04240"></a><span class="lineno"> 4240</span>&#160;    <span class="stringliteral">&quot;Parse the symbol&quot;</span></div>
<div class="line"><a name="l04241"></a><span class="lineno"> 4241</span>&#160;    self.setcommand(pos.current())</div>
<div class="line"><a name="l04242"></a><span class="lineno"> 4242</span>&#160;    pos.skip(self.command)</div>
<div class="line"><a name="l04243"></a><span class="lineno"> 4243</span>&#160;    self.output = TaggedOutput().settag(self.translated)</div>
<div class="line"><a name="l04244"></a><span class="lineno"> 4244</span>&#160;    self.parseparameter(pos)</div>
<div class="line"><a name="l04245"></a><span class="lineno"> 4245</span>&#160; </div>
<div class="line"><a name="l04246"></a><span class="lineno"> 4246</span>&#160;<span class="keyword">class </span>TextFunction(CommandBit):</div>
<div class="line"><a name="l04247"></a><span class="lineno"> 4247</span>&#160;  <span class="stringliteral">&quot;A function where parameters are read as text.&quot;</span></div>
<div class="line"><a name="l04248"></a><span class="lineno"> 4248</span>&#160; </div>
<div class="line"><a name="l04249"></a><span class="lineno"> 4249</span>&#160;  commandmap = FormulaConfig.textfunctions</div>
<div class="line"><a name="l04250"></a><span class="lineno"> 4250</span>&#160; </div>
<div class="line"><a name="l04251"></a><span class="lineno"> 4251</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04252"></a><span class="lineno"> 4252</span>&#160;    <span class="stringliteral">&quot;Parse a text parameter&quot;</span></div>
<div class="line"><a name="l04253"></a><span class="lineno"> 4253</span>&#160;    self.output = TaggedOutput().settag(self.translated)</div>
<div class="line"><a name="l04254"></a><span class="lineno"> 4254</span>&#160;    self.parsetext(pos)</div>
<div class="line"><a name="l04255"></a><span class="lineno"> 4255</span>&#160; </div>
<div class="line"><a name="l04256"></a><span class="lineno"> 4256</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l04257"></a><span class="lineno"> 4257</span>&#160;    <span class="stringliteral">&quot;Set the type to font&quot;</span></div>
<div class="line"><a name="l04258"></a><span class="lineno"> 4258</span>&#160;    self.type = <span class="stringliteral">&#39;font&#39;</span></div>
<div class="line"><a name="l04259"></a><span class="lineno"> 4259</span>&#160; </div>
<div class="line"><a name="l04260"></a><span class="lineno"> 4260</span>&#160;<span class="keyword">class </span>LabelFunction(CommandBit):</div>
<div class="line"><a name="l04261"></a><span class="lineno"> 4261</span>&#160;  <span class="stringliteral">&quot;A function that acts as a label&quot;</span></div>
<div class="line"><a name="l04262"></a><span class="lineno"> 4262</span>&#160; </div>
<div class="line"><a name="l04263"></a><span class="lineno"> 4263</span>&#160;  commandmap = FormulaConfig.labelfunctions</div>
<div class="line"><a name="l04264"></a><span class="lineno"> 4264</span>&#160; </div>
<div class="line"><a name="l04265"></a><span class="lineno"> 4265</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04266"></a><span class="lineno"> 4266</span>&#160;    <span class="stringliteral">&quot;Parse a literal parameter&quot;</span></div>
<div class="line"><a name="l04267"></a><span class="lineno"> 4267</span>&#160;    self.key = self.parseliteral(pos)</div>
<div class="line"><a name="l04268"></a><span class="lineno"> 4268</span>&#160; </div>
<div class="line"><a name="l04269"></a><span class="lineno"> 4269</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l04270"></a><span class="lineno"> 4270</span>&#160;    <span class="stringliteral">&quot;Add an anchor with the label contents.&quot;</span></div>
<div class="line"><a name="l04271"></a><span class="lineno"> 4271</span>&#160;    self.type = <span class="stringliteral">&#39;font&#39;</span></div>
<div class="line"><a name="l04272"></a><span class="lineno"> 4272</span>&#160;    self.label = Label().create(<span class="stringliteral">&#39; &#39;</span>, self.key, type = <span class="stringliteral">&#39;eqnumber&#39;</span>)</div>
<div class="line"><a name="l04273"></a><span class="lineno"> 4273</span>&#160;    self.contents = [self.label]</div>
<div class="line"><a name="l04274"></a><span class="lineno"> 4274</span>&#160;    <span class="comment"># store as a Label so we know it&#39;s been seen</span></div>
<div class="line"><a name="l04275"></a><span class="lineno"> 4275</span>&#160;    Label.names[self.key] = self.label</div>
<div class="line"><a name="l04276"></a><span class="lineno"> 4276</span>&#160; </div>
<div class="line"><a name="l04277"></a><span class="lineno"> 4277</span>&#160;<span class="keyword">class </span>FontFunction(OneParamFunction):</div>
<div class="line"><a name="l04278"></a><span class="lineno"> 4278</span>&#160;  <span class="stringliteral">&quot;A function of one parameter that changes the font&quot;</span></div>
<div class="line"><a name="l04279"></a><span class="lineno"> 4279</span>&#160; </div>
<div class="line"><a name="l04280"></a><span class="lineno"> 4280</span>&#160;  commandmap = FormulaConfig.fontfunctions</div>
<div class="line"><a name="l04281"></a><span class="lineno"> 4281</span>&#160; </div>
<div class="line"><a name="l04282"></a><span class="lineno"> 4282</span>&#160;  <span class="keyword">def </span>process(self):</div>
<div class="line"><a name="l04283"></a><span class="lineno"> 4283</span>&#160;    <span class="stringliteral">&quot;Simplify if possible using a single character.&quot;</span></div>
<div class="line"><a name="l04284"></a><span class="lineno"> 4284</span>&#160;    self.type = <span class="stringliteral">&#39;font&#39;</span></div>
<div class="line"><a name="l04285"></a><span class="lineno"> 4285</span>&#160;    self.simplifyifpossible()</div>
<div class="line"><a name="l04286"></a><span class="lineno"> 4286</span>&#160; </div>
<div class="line"><a name="l04287"></a><span class="lineno"> 4287</span>&#160;FormulaFactory.types += [FormulaCommand, SymbolFunction]</div>
<div class="line"><a name="l04288"></a><span class="lineno"> 4288</span>&#160;FormulaCommand.types = [</div>
<div class="line"><a name="l04289"></a><span class="lineno"> 4289</span>&#160;    AlphaCommand, EmptyCommand, OneParamFunction, FontFunction, LabelFunction,</div>
<div class="line"><a name="l04290"></a><span class="lineno"> 4290</span>&#160;    TextFunction, SpacedCommand,</div>
<div class="line"><a name="l04291"></a><span class="lineno"> 4291</span>&#160;    ]</div>
<div class="line"><a name="l04292"></a><span class="lineno"> 4292</span>&#160; </div>
<div class="line"><a name="l04293"></a><span class="lineno"> 4293</span>&#160; </div>
<div class="line"><a name="l04294"></a><span class="lineno"> 4294</span>&#160; </div>
<div class="line"><a name="l04295"></a><span class="lineno"> 4295</span>&#160; </div>
<div class="line"><a name="l04296"></a><span class="lineno"> 4296</span>&#160; </div>
<div class="line"><a name="l04297"></a><span class="lineno"> 4297</span>&#160; </div>
<div class="line"><a name="l04298"></a><span class="lineno"> 4298</span>&#160; </div>
<div class="line"><a name="l04299"></a><span class="lineno"> 4299</span>&#160; </div>
<div class="line"><a name="l04300"></a><span class="lineno"> 4300</span>&#160; </div>
<div class="line"><a name="l04301"></a><span class="lineno"> 4301</span>&#160; </div>
<div class="line"><a name="l04302"></a><span class="lineno"> 4302</span>&#160; </div>
<div class="line"><a name="l04303"></a><span class="lineno"> 4303</span>&#160; </div>
<div class="line"><a name="l04304"></a><span class="lineno"> 4304</span>&#160;<span class="keyword">class </span>BigSymbol(object):</div>
<div class="line"><a name="l04305"></a><span class="lineno"> 4305</span>&#160;  <span class="stringliteral">&quot;A big symbol generator.&quot;</span></div>
<div class="line"><a name="l04306"></a><span class="lineno"> 4306</span>&#160; </div>
<div class="line"><a name="l04307"></a><span class="lineno"> 4307</span>&#160;  symbols = FormulaConfig.bigsymbols</div>
<div class="line"><a name="l04308"></a><span class="lineno"> 4308</span>&#160; </div>
<div class="line"><a name="l04309"></a><span class="lineno"> 4309</span>&#160;  <span class="keyword">def </span>__init__(self, symbol):</div>
<div class="line"><a name="l04310"></a><span class="lineno"> 4310</span>&#160;    <span class="stringliteral">&quot;Create the big symbol.&quot;</span></div>
<div class="line"><a name="l04311"></a><span class="lineno"> 4311</span>&#160;    self.symbol = symbol</div>
<div class="line"><a name="l04312"></a><span class="lineno"> 4312</span>&#160; </div>
<div class="line"><a name="l04313"></a><span class="lineno"> 4313</span>&#160;  <span class="keyword">def </span>getpieces(self):</div>
<div class="line"><a name="l04314"></a><span class="lineno"> 4314</span>&#160;    <span class="stringliteral">&quot;Get an array with all pieces.&quot;</span></div>
<div class="line"><a name="l04315"></a><span class="lineno"> 4315</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.symbol <span class="keywordflow">in</span> self.symbols:</div>
<div class="line"><a name="l04316"></a><span class="lineno"> 4316</span>&#160;      <span class="keywordflow">return</span> [self.symbol]</div>
<div class="line"><a name="l04317"></a><span class="lineno"> 4317</span>&#160;    <span class="keywordflow">if</span> self.smalllimit():</div>
<div class="line"><a name="l04318"></a><span class="lineno"> 4318</span>&#160;      <span class="keywordflow">return</span> [self.symbol]</div>
<div class="line"><a name="l04319"></a><span class="lineno"> 4319</span>&#160;    <span class="keywordflow">return</span> self.symbols[self.symbol]</div>
<div class="line"><a name="l04320"></a><span class="lineno"> 4320</span>&#160; </div>
<div class="line"><a name="l04321"></a><span class="lineno"> 4321</span>&#160;  <span class="keyword">def </span>smalllimit(self):</div>
<div class="line"><a name="l04322"></a><span class="lineno"> 4322</span>&#160;    <span class="stringliteral">&quot;Decide if the limit should be a small, one-line symbol.&quot;</span></div>
<div class="line"><a name="l04323"></a><span class="lineno"> 4323</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> DocumentParameters.displaymode:</div>
<div class="line"><a name="l04324"></a><span class="lineno"> 4324</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l04325"></a><span class="lineno"> 4325</span>&#160;    <span class="keywordflow">if</span> len(self.symbols[self.symbol]) == 1:</div>
<div class="line"><a name="l04326"></a><span class="lineno"> 4326</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l04327"></a><span class="lineno"> 4327</span>&#160;    <span class="keywordflow">return</span> Options.simplemath</div>
<div class="line"><a name="l04328"></a><span class="lineno"> 4328</span>&#160; </div>
<div class="line"><a name="l04329"></a><span class="lineno"> 4329</span>&#160;<span class="keyword">class </span>BigBracket(BigSymbol):</div>
<div class="line"><a name="l04330"></a><span class="lineno"> 4330</span>&#160;  <span class="stringliteral">&quot;A big bracket generator.&quot;</span></div>
<div class="line"><a name="l04331"></a><span class="lineno"> 4331</span>&#160; </div>
<div class="line"><a name="l04332"></a><span class="lineno"> 4332</span>&#160;  <span class="keyword">def </span>__init__(self, size, bracket, alignment=&#39;l&#39;):</div>
<div class="line"><a name="l04333"></a><span class="lineno"> 4333</span>&#160;    <span class="stringliteral">&quot;Set the size and symbol for the bracket.&quot;</span></div>
<div class="line"><a name="l04334"></a><span class="lineno"> 4334</span>&#160;    self.size = size</div>
<div class="line"><a name="l04335"></a><span class="lineno"> 4335</span>&#160;    self.original = bracket</div>
<div class="line"><a name="l04336"></a><span class="lineno"> 4336</span>&#160;    self.alignment = alignment</div>
<div class="line"><a name="l04337"></a><span class="lineno"> 4337</span>&#160;    self.pieces = <span class="keywordtype">None</span></div>
<div class="line"><a name="l04338"></a><span class="lineno"> 4338</span>&#160;    <span class="keywordflow">if</span> bracket <span class="keywordflow">in</span> FormulaConfig.bigbrackets:</div>
<div class="line"><a name="l04339"></a><span class="lineno"> 4339</span>&#160;      self.pieces = FormulaConfig.bigbrackets[bracket]</div>
<div class="line"><a name="l04340"></a><span class="lineno"> 4340</span>&#160; </div>
<div class="line"><a name="l04341"></a><span class="lineno"> 4341</span>&#160;  <span class="keyword">def </span>getpiece(self, index):</div>
<div class="line"><a name="l04342"></a><span class="lineno"> 4342</span>&#160;    <span class="stringliteral">&quot;Return the nth piece for the bracket.&quot;</span></div>
<div class="line"><a name="l04343"></a><span class="lineno"> 4343</span>&#160;    function = getattr(self, <span class="stringliteral">&#39;getpiece&#39;</span> + unicode(len(self.pieces)))</div>
<div class="line"><a name="l04344"></a><span class="lineno"> 4344</span>&#160;    <span class="keywordflow">return</span> function(index)</div>
<div class="line"><a name="l04345"></a><span class="lineno"> 4345</span>&#160; </div>
<div class="line"><a name="l04346"></a><span class="lineno"> 4346</span>&#160;  <span class="keyword">def </span>getpiece1(self, index):</div>
<div class="line"><a name="l04347"></a><span class="lineno"> 4347</span>&#160;    <span class="stringliteral">&quot;Return the only piece for a single-piece bracket.&quot;</span></div>
<div class="line"><a name="l04348"></a><span class="lineno"> 4348</span>&#160;    <span class="keywordflow">return</span> self.pieces[0]</div>
<div class="line"><a name="l04349"></a><span class="lineno"> 4349</span>&#160; </div>
<div class="line"><a name="l04350"></a><span class="lineno"> 4350</span>&#160;  <span class="keyword">def </span>getpiece3(self, index):</div>
<div class="line"><a name="l04351"></a><span class="lineno"> 4351</span>&#160;    <span class="stringliteral">&quot;Get the nth piece for a 3-piece bracket: parenthesis or square bracket.&quot;</span></div>
<div class="line"><a name="l04352"></a><span class="lineno"> 4352</span>&#160;    <span class="keywordflow">if</span> index == 0:</div>
<div class="line"><a name="l04353"></a><span class="lineno"> 4353</span>&#160;      <span class="keywordflow">return</span> self.pieces[0]</div>
<div class="line"><a name="l04354"></a><span class="lineno"> 4354</span>&#160;    <span class="keywordflow">if</span> index == self.size - 1:</div>
<div class="line"><a name="l04355"></a><span class="lineno"> 4355</span>&#160;      <span class="keywordflow">return</span> self.pieces[-1]</div>
<div class="line"><a name="l04356"></a><span class="lineno"> 4356</span>&#160;    <span class="keywordflow">return</span> self.pieces[1]</div>
<div class="line"><a name="l04357"></a><span class="lineno"> 4357</span>&#160; </div>
<div class="line"><a name="l04358"></a><span class="lineno"> 4358</span>&#160;  <span class="keyword">def </span>getpiece4(self, index):</div>
<div class="line"><a name="l04359"></a><span class="lineno"> 4359</span>&#160;    <span class="stringliteral">&quot;Get the nth piece for a 4-piece bracket: curly bracket.&quot;</span></div>
<div class="line"><a name="l04360"></a><span class="lineno"> 4360</span>&#160;    <span class="keywordflow">if</span> index == 0:</div>
<div class="line"><a name="l04361"></a><span class="lineno"> 4361</span>&#160;      <span class="keywordflow">return</span> self.pieces[0]</div>
<div class="line"><a name="l04362"></a><span class="lineno"> 4362</span>&#160;    <span class="keywordflow">if</span> index == self.size - 1:</div>
<div class="line"><a name="l04363"></a><span class="lineno"> 4363</span>&#160;      <span class="keywordflow">return</span> self.pieces[3]</div>
<div class="line"><a name="l04364"></a><span class="lineno"> 4364</span>&#160;    <span class="keywordflow">if</span> index == (self.size - 1)/2:</div>
<div class="line"><a name="l04365"></a><span class="lineno"> 4365</span>&#160;      <span class="keywordflow">return</span> self.pieces[2]</div>
<div class="line"><a name="l04366"></a><span class="lineno"> 4366</span>&#160;    <span class="keywordflow">return</span> self.pieces[1]</div>
<div class="line"><a name="l04367"></a><span class="lineno"> 4367</span>&#160; </div>
<div class="line"><a name="l04368"></a><span class="lineno"> 4368</span>&#160;  <span class="keyword">def </span>getcell(self, index):</div>
<div class="line"><a name="l04369"></a><span class="lineno"> 4369</span>&#160;    <span class="stringliteral">&quot;Get the bracket piece as an array cell.&quot;</span></div>
<div class="line"><a name="l04370"></a><span class="lineno"> 4370</span>&#160;    piece = self.getpiece(index)</div>
<div class="line"><a name="l04371"></a><span class="lineno"> 4371</span>&#160;    span = <span class="stringliteral">&#39;span class=&quot;bracket align-&#39;</span> + self.alignment + <span class="stringliteral">&#39;&quot;&#39;</span></div>
<div class="line"><a name="l04372"></a><span class="lineno"> 4372</span>&#160;    <span class="keywordflow">return</span> TaggedBit().constant(piece, span)</div>
<div class="line"><a name="l04373"></a><span class="lineno"> 4373</span>&#160; </div>
<div class="line"><a name="l04374"></a><span class="lineno"> 4374</span>&#160;  <span class="keyword">def </span>getcontents(self):</div>
<div class="line"><a name="l04375"></a><span class="lineno"> 4375</span>&#160;    <span class="stringliteral">&quot;Get the bracket as an array or as a single bracket.&quot;</span></div>
<div class="line"><a name="l04376"></a><span class="lineno"> 4376</span>&#160;    <span class="keywordflow">if</span> self.size == 1 <span class="keywordflow">or</span> <span class="keywordflow">not</span> self.pieces:</div>
<div class="line"><a name="l04377"></a><span class="lineno"> 4377</span>&#160;      <span class="keywordflow">return</span> self.getsinglebracket()</div>
<div class="line"><a name="l04378"></a><span class="lineno"> 4378</span>&#160;    rows = []</div>
<div class="line"><a name="l04379"></a><span class="lineno"> 4379</span>&#160;    <span class="keywordflow">for</span> index <span class="keywordflow">in</span> range(self.size):</div>
<div class="line"><a name="l04380"></a><span class="lineno"> 4380</span>&#160;      cell = self.getcell(index)</div>
<div class="line"><a name="l04381"></a><span class="lineno"> 4381</span>&#160;      rows.append(TaggedBit().complete([cell], <span class="stringliteral">&#39;span class=&quot;arrayrow&quot;&#39;</span>))</div>
<div class="line"><a name="l04382"></a><span class="lineno"> 4382</span>&#160;    <span class="keywordflow">return</span> [TaggedBit().complete(rows, <span class="stringliteral">&#39;span class=&quot;array&quot;&#39;</span>)]</div>
<div class="line"><a name="l04383"></a><span class="lineno"> 4383</span>&#160; </div>
<div class="line"><a name="l04384"></a><span class="lineno"> 4384</span>&#160;  <span class="keyword">def </span>getsinglebracket(self):</div>
<div class="line"><a name="l04385"></a><span class="lineno"> 4385</span>&#160;    <span class="stringliteral">&quot;Return the bracket as a single sign.&quot;</span></div>
<div class="line"><a name="l04386"></a><span class="lineno"> 4386</span>&#160;    <span class="keywordflow">if</span> self.original == <span class="stringliteral">&#39;.&#39;</span>:</div>
<div class="line"><a name="l04387"></a><span class="lineno"> 4387</span>&#160;      <span class="keywordflow">return</span> [TaggedBit().constant(<span class="stringliteral">&#39;&#39;</span>, <span class="stringliteral">&#39;span class=&quot;emptydot&quot;&#39;</span>)]</div>
<div class="line"><a name="l04388"></a><span class="lineno"> 4388</span>&#160;    <span class="keywordflow">return</span> [TaggedBit().constant(self.original, <span class="stringliteral">&#39;span class=&quot;symbol&quot;&#39;</span>)]</div>
<div class="line"><a name="l04389"></a><span class="lineno"> 4389</span>&#160; </div>
<div class="line"><a name="l04390"></a><span class="lineno"> 4390</span>&#160; </div>
<div class="line"><a name="l04391"></a><span class="lineno"> 4391</span>&#160; </div>
<div class="line"><a name="l04392"></a><span class="lineno"> 4392</span>&#160; </div>
<div class="line"><a name="l04393"></a><span class="lineno"> 4393</span>&#160; </div>
<div class="line"><a name="l04394"></a><span class="lineno"> 4394</span>&#160; </div>
<div class="line"><a name="l04395"></a><span class="lineno"> 4395</span>&#160;<span class="keyword">class </span>FormulaEquation(CommandBit):</div>
<div class="line"><a name="l04396"></a><span class="lineno"> 4396</span>&#160;  <span class="stringliteral">&quot;A simple numbered equation.&quot;</span></div>
<div class="line"><a name="l04397"></a><span class="lineno"> 4397</span>&#160; </div>
<div class="line"><a name="l04398"></a><span class="lineno"> 4398</span>&#160;  piece = <span class="stringliteral">&#39;equation&#39;</span></div>
<div class="line"><a name="l04399"></a><span class="lineno"> 4399</span>&#160; </div>
<div class="line"><a name="l04400"></a><span class="lineno"> 4400</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04401"></a><span class="lineno"> 4401</span>&#160;    <span class="stringliteral">&quot;Parse the matrix&quot;</span></div>
<div class="line"><a name="l04402"></a><span class="lineno"> 4402</span>&#160;    self.output = ContentsOutput()</div>
<div class="line"><a name="l04403"></a><span class="lineno"> 4403</span>&#160;    self.add(self.factory.parsetype(WholeFormula, pos))</div>
<div class="line"><a name="l04404"></a><span class="lineno"> 4404</span>&#160; </div>
<div class="line"><a name="l04405"></a><span class="lineno"> 4405</span>&#160;<span class="keyword">class </span>FormulaCell(FormulaCommand):</div>
<div class="line"><a name="l04406"></a><span class="lineno"> 4406</span>&#160;  <span class="stringliteral">&quot;An array cell inside a row&quot;</span></div>
<div class="line"><a name="l04407"></a><span class="lineno"> 4407</span>&#160; </div>
<div class="line"><a name="l04408"></a><span class="lineno"> 4408</span>&#160;  <span class="keyword">def </span>setalignment(self, alignment):</div>
<div class="line"><a name="l04409"></a><span class="lineno"> 4409</span>&#160;    self.alignment = alignment</div>
<div class="line"><a name="l04410"></a><span class="lineno"> 4410</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;arraycell align-&#39;</span> + alignment +<span class="stringliteral">&#39;&quot;&#39;</span>, <span class="keyword">True</span>)</div>
<div class="line"><a name="l04411"></a><span class="lineno"> 4411</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l04412"></a><span class="lineno"> 4412</span>&#160; </div>
<div class="line"><a name="l04413"></a><span class="lineno"> 4413</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04414"></a><span class="lineno"> 4414</span>&#160;    self.factory.clearskipped(pos)</div>
<div class="line"><a name="l04415"></a><span class="lineno"> 4415</span>&#160;    <span class="keywordflow">if</span> pos.finished():</div>
<div class="line"><a name="l04416"></a><span class="lineno"> 4416</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l04417"></a><span class="lineno"> 4417</span>&#160;    self.add(self.factory.parsetype(WholeFormula, pos))</div>
<div class="line"><a name="l04418"></a><span class="lineno"> 4418</span>&#160; </div>
<div class="line"><a name="l04419"></a><span class="lineno"> 4419</span>&#160;<span class="keyword">class </span>FormulaRow(FormulaCommand):</div>
<div class="line"><a name="l04420"></a><span class="lineno"> 4420</span>&#160;  <span class="stringliteral">&quot;An array row inside an array&quot;</span></div>
<div class="line"><a name="l04421"></a><span class="lineno"> 4421</span>&#160; </div>
<div class="line"><a name="l04422"></a><span class="lineno"> 4422</span>&#160;  cellseparator = FormulaConfig.array[<span class="stringliteral">&#39;cellseparator&#39;</span>]</div>
<div class="line"><a name="l04423"></a><span class="lineno"> 4423</span>&#160; </div>
<div class="line"><a name="l04424"></a><span class="lineno"> 4424</span>&#160;  <span class="keyword">def </span>setalignments(self, alignments):</div>
<div class="line"><a name="l04425"></a><span class="lineno"> 4425</span>&#160;    self.alignments = alignments</div>
<div class="line"><a name="l04426"></a><span class="lineno"> 4426</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;arrayrow&quot;&#39;</span>, <span class="keyword">True</span>)</div>
<div class="line"><a name="l04427"></a><span class="lineno"> 4427</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l04428"></a><span class="lineno"> 4428</span>&#160; </div>
<div class="line"><a name="l04429"></a><span class="lineno"> 4429</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04430"></a><span class="lineno"> 4430</span>&#160;    <span class="stringliteral">&quot;Parse a whole row&quot;</span></div>
<div class="line"><a name="l04431"></a><span class="lineno"> 4431</span>&#160;    index = 0</div>
<div class="line"><a name="l04432"></a><span class="lineno"> 4432</span>&#160;    pos.pushending(self.cellseparator, optional=<span class="keyword">True</span>)</div>
<div class="line"><a name="l04433"></a><span class="lineno"> 4433</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> pos.finished():</div>
<div class="line"><a name="l04434"></a><span class="lineno"> 4434</span>&#160;      cell = self.createcell(index)</div>
<div class="line"><a name="l04435"></a><span class="lineno"> 4435</span>&#160;      cell.parsebit(pos)</div>
<div class="line"><a name="l04436"></a><span class="lineno"> 4436</span>&#160;      self.add(cell)</div>
<div class="line"><a name="l04437"></a><span class="lineno"> 4437</span>&#160;      index += 1</div>
<div class="line"><a name="l04438"></a><span class="lineno"> 4438</span>&#160;      pos.checkskip(self.cellseparator)</div>
<div class="line"><a name="l04439"></a><span class="lineno"> 4439</span>&#160;    <span class="keywordflow">if</span> len(self.contents) == 0:</div>
<div class="line"><a name="l04440"></a><span class="lineno"> 4440</span>&#160;      self.output = EmptyOutput()</div>
<div class="line"><a name="l04441"></a><span class="lineno"> 4441</span>&#160; </div>
<div class="line"><a name="l04442"></a><span class="lineno"> 4442</span>&#160;  <span class="keyword">def </span>createcell(self, index):</div>
<div class="line"><a name="l04443"></a><span class="lineno"> 4443</span>&#160;    <span class="stringliteral">&quot;Create the cell that corresponds to the given index.&quot;</span></div>
<div class="line"><a name="l04444"></a><span class="lineno"> 4444</span>&#160;    alignment = self.alignments[index % len(self.alignments)]</div>
<div class="line"><a name="l04445"></a><span class="lineno"> 4445</span>&#160;    <span class="keywordflow">return</span> self.factory.create(FormulaCell).setalignment(alignment)</div>
<div class="line"><a name="l04446"></a><span class="lineno"> 4446</span>&#160; </div>
<div class="line"><a name="l04447"></a><span class="lineno"> 4447</span>&#160;<span class="keyword">class </span>MultiRowFormula(CommandBit):</div>
<div class="line"><a name="l04448"></a><span class="lineno"> 4448</span>&#160;  <span class="stringliteral">&quot;A formula with multiple rows.&quot;</span></div>
<div class="line"><a name="l04449"></a><span class="lineno"> 4449</span>&#160; </div>
<div class="line"><a name="l04450"></a><span class="lineno"> 4450</span>&#160;  <span class="keyword">def </span>parserows(self, pos):</div>
<div class="line"><a name="l04451"></a><span class="lineno"> 4451</span>&#160;    <span class="stringliteral">&quot;Parse all rows, finish when no more row ends&quot;</span></div>
<div class="line"><a name="l04452"></a><span class="lineno"> 4452</span>&#160;    self.rows = []</div>
<div class="line"><a name="l04453"></a><span class="lineno"> 4453</span>&#160;    first = <span class="keyword">True</span></div>
<div class="line"><a name="l04454"></a><span class="lineno"> 4454</span>&#160;    <span class="keywordflow">for</span> row <span class="keywordflow">in</span> self.iteraterows(pos):</div>
<div class="line"><a name="l04455"></a><span class="lineno"> 4455</span>&#160;      <span class="keywordflow">if</span> first:</div>
<div class="line"><a name="l04456"></a><span class="lineno"> 4456</span>&#160;        first = <span class="keyword">False</span></div>
<div class="line"><a name="l04457"></a><span class="lineno"> 4457</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l04458"></a><span class="lineno"> 4458</span>&#160;        <span class="comment"># intersparse empty rows</span></div>
<div class="line"><a name="l04459"></a><span class="lineno"> 4459</span>&#160;        self.addempty()</div>
<div class="line"><a name="l04460"></a><span class="lineno"> 4460</span>&#160;      row.parsebit(pos)</div>
<div class="line"><a name="l04461"></a><span class="lineno"> 4461</span>&#160;      self.addrow(row)</div>
<div class="line"><a name="l04462"></a><span class="lineno"> 4462</span>&#160;    self.size = len(self.rows)</div>
<div class="line"><a name="l04463"></a><span class="lineno"> 4463</span>&#160; </div>
<div class="line"><a name="l04464"></a><span class="lineno"> 4464</span>&#160;  <span class="keyword">def </span>iteraterows(self, pos):</div>
<div class="line"><a name="l04465"></a><span class="lineno"> 4465</span>&#160;    <span class="stringliteral">&quot;Iterate over all rows, end when no more row ends&quot;</span></div>
<div class="line"><a name="l04466"></a><span class="lineno"> 4466</span>&#160;    rowseparator = FormulaConfig.array[<span class="stringliteral">&#39;rowseparator&#39;</span>]</div>
<div class="line"><a name="l04467"></a><span class="lineno"> 4467</span>&#160;    <span class="keywordflow">while</span> <span class="keyword">True</span>:</div>
<div class="line"><a name="l04468"></a><span class="lineno"> 4468</span>&#160;      pos.pushending(rowseparator, <span class="keyword">True</span>)</div>
<div class="line"><a name="l04469"></a><span class="lineno"> 4469</span>&#160;      row = self.factory.create(FormulaRow)</div>
<div class="line"><a name="l04470"></a><span class="lineno"> 4470</span>&#160;      <span class="keywordflow">yield</span> row.setalignments(self.alignments)</div>
<div class="line"><a name="l04471"></a><span class="lineno"> 4471</span>&#160;      <span class="keywordflow">if</span> pos.checkfor(rowseparator):</div>
<div class="line"><a name="l04472"></a><span class="lineno"> 4472</span>&#160;        self.original += pos.popending(rowseparator)</div>
<div class="line"><a name="l04473"></a><span class="lineno"> 4473</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l04474"></a><span class="lineno"> 4474</span>&#160;        <span class="keywordflow">return</span></div>
<div class="line"><a name="l04475"></a><span class="lineno"> 4475</span>&#160; </div>
<div class="line"><a name="l04476"></a><span class="lineno"> 4476</span>&#160;  <span class="keyword">def </span>addempty(self):</div>
<div class="line"><a name="l04477"></a><span class="lineno"> 4477</span>&#160;    <span class="stringliteral">&quot;Add an empty row.&quot;</span></div>
<div class="line"><a name="l04478"></a><span class="lineno"> 4478</span>&#160;    row = self.factory.create(FormulaRow).setalignments(self.alignments)</div>
<div class="line"><a name="l04479"></a><span class="lineno"> 4479</span>&#160;    <span class="keywordflow">for</span> index, originalcell <span class="keywordflow">in</span> enumerate(self.rows[-1].contents):</div>
<div class="line"><a name="l04480"></a><span class="lineno"> 4480</span>&#160;      cell = row.createcell(index)</div>
<div class="line"><a name="l04481"></a><span class="lineno"> 4481</span>&#160;      cell.add(FormulaConstant(<span class="stringliteral">u&#39;‚ÄÖ&#39;</span>))</div>
<div class="line"><a name="l04482"></a><span class="lineno"> 4482</span>&#160;      row.add(cell)</div>
<div class="line"><a name="l04483"></a><span class="lineno"> 4483</span>&#160;    self.addrow(row)</div>
<div class="line"><a name="l04484"></a><span class="lineno"> 4484</span>&#160; </div>
<div class="line"><a name="l04485"></a><span class="lineno"> 4485</span>&#160;  <span class="keyword">def </span>addrow(self, row):</div>
<div class="line"><a name="l04486"></a><span class="lineno"> 4486</span>&#160;    <span class="stringliteral">&quot;Add a row to the contents and to the list of rows.&quot;</span></div>
<div class="line"><a name="l04487"></a><span class="lineno"> 4487</span>&#160;    self.rows.append(row)</div>
<div class="line"><a name="l04488"></a><span class="lineno"> 4488</span>&#160;    self.add(row)</div>
<div class="line"><a name="l04489"></a><span class="lineno"> 4489</span>&#160; </div>
<div class="line"><a name="l04490"></a><span class="lineno"> 4490</span>&#160;<span class="keyword">class </span>FormulaArray(MultiRowFormula):</div>
<div class="line"><a name="l04491"></a><span class="lineno"> 4491</span>&#160;  <span class="stringliteral">&quot;An array within a formula&quot;</span></div>
<div class="line"><a name="l04492"></a><span class="lineno"> 4492</span>&#160; </div>
<div class="line"><a name="l04493"></a><span class="lineno"> 4493</span>&#160;  piece = <span class="stringliteral">&#39;array&#39;</span></div>
<div class="line"><a name="l04494"></a><span class="lineno"> 4494</span>&#160; </div>
<div class="line"><a name="l04495"></a><span class="lineno"> 4495</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04496"></a><span class="lineno"> 4496</span>&#160;    <span class="stringliteral">&quot;Parse the matrix&quot;</span></div>
<div class="line"><a name="l04497"></a><span class="lineno"> 4497</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;array&quot;&#39;</span>, <span class="keyword">False</span>)</div>
<div class="line"><a name="l04498"></a><span class="lineno"> 4498</span>&#160;    self.parsealignments(pos)</div>
<div class="line"><a name="l04499"></a><span class="lineno"> 4499</span>&#160;    self.parserows(pos)</div>
<div class="line"><a name="l04500"></a><span class="lineno"> 4500</span>&#160; </div>
<div class="line"><a name="l04501"></a><span class="lineno"> 4501</span>&#160;  <span class="keyword">def </span>parsealignments(self, pos):</div>
<div class="line"><a name="l04502"></a><span class="lineno"> 4502</span>&#160;    <span class="stringliteral">&quot;Parse the different alignments&quot;</span></div>
<div class="line"><a name="l04503"></a><span class="lineno"> 4503</span>&#160;    <span class="comment"># vertical</span></div>
<div class="line"><a name="l04504"></a><span class="lineno"> 4504</span>&#160;    self.valign = <span class="stringliteral">&#39;c&#39;</span></div>
<div class="line"><a name="l04505"></a><span class="lineno"> 4505</span>&#160;    literal = self.parsesquareliteral(pos)</div>
<div class="line"><a name="l04506"></a><span class="lineno"> 4506</span>&#160;    <span class="keywordflow">if</span> literal:</div>
<div class="line"><a name="l04507"></a><span class="lineno"> 4507</span>&#160;      self.valign = literal</div>
<div class="line"><a name="l04508"></a><span class="lineno"> 4508</span>&#160;    <span class="comment"># horizontal</span></div>
<div class="line"><a name="l04509"></a><span class="lineno"> 4509</span>&#160;    literal = self.parseliteral(pos)</div>
<div class="line"><a name="l04510"></a><span class="lineno"> 4510</span>&#160;    self.alignments = []</div>
<div class="line"><a name="l04511"></a><span class="lineno"> 4511</span>&#160;    <span class="keywordflow">for</span> l <span class="keywordflow">in</span> literal:</div>
<div class="line"><a name="l04512"></a><span class="lineno"> 4512</span>&#160;      self.alignments.append(l)</div>
<div class="line"><a name="l04513"></a><span class="lineno"> 4513</span>&#160; </div>
<div class="line"><a name="l04514"></a><span class="lineno"> 4514</span>&#160;<span class="keyword">class </span>FormulaMatrix(MultiRowFormula):</div>
<div class="line"><a name="l04515"></a><span class="lineno"> 4515</span>&#160;  <span class="stringliteral">&quot;A matrix (array with center alignment).&quot;</span></div>
<div class="line"><a name="l04516"></a><span class="lineno"> 4516</span>&#160; </div>
<div class="line"><a name="l04517"></a><span class="lineno"> 4517</span>&#160;  piece = <span class="stringliteral">&#39;matrix&#39;</span></div>
<div class="line"><a name="l04518"></a><span class="lineno"> 4518</span>&#160; </div>
<div class="line"><a name="l04519"></a><span class="lineno"> 4519</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04520"></a><span class="lineno"> 4520</span>&#160;    <span class="stringliteral">&quot;Parse the matrix, set alignments to &#39;c&#39;.&quot;</span></div>
<div class="line"><a name="l04521"></a><span class="lineno"> 4521</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;array&quot;&#39;</span>, <span class="keyword">False</span>)</div>
<div class="line"><a name="l04522"></a><span class="lineno"> 4522</span>&#160;    self.valign = <span class="stringliteral">&#39;c&#39;</span></div>
<div class="line"><a name="l04523"></a><span class="lineno"> 4523</span>&#160;    self.alignments = [<span class="stringliteral">&#39;c&#39;</span>]</div>
<div class="line"><a name="l04524"></a><span class="lineno"> 4524</span>&#160;    self.parserows(pos)</div>
<div class="line"><a name="l04525"></a><span class="lineno"> 4525</span>&#160; </div>
<div class="line"><a name="l04526"></a><span class="lineno"> 4526</span>&#160;<span class="keyword">class </span>FormulaCases(MultiRowFormula):</div>
<div class="line"><a name="l04527"></a><span class="lineno"> 4527</span>&#160;  <span class="stringliteral">&quot;A cases statement&quot;</span></div>
<div class="line"><a name="l04528"></a><span class="lineno"> 4528</span>&#160; </div>
<div class="line"><a name="l04529"></a><span class="lineno"> 4529</span>&#160;  piece = <span class="stringliteral">&#39;cases&#39;</span></div>
<div class="line"><a name="l04530"></a><span class="lineno"> 4530</span>&#160; </div>
<div class="line"><a name="l04531"></a><span class="lineno"> 4531</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04532"></a><span class="lineno"> 4532</span>&#160;    <span class="stringliteral">&quot;Parse the cases&quot;</span></div>
<div class="line"><a name="l04533"></a><span class="lineno"> 4533</span>&#160;    self.output = ContentsOutput()</div>
<div class="line"><a name="l04534"></a><span class="lineno"> 4534</span>&#160;    self.alignments = [<span class="stringliteral">&#39;l&#39;</span>, <span class="stringliteral">&#39;l&#39;</span>]</div>
<div class="line"><a name="l04535"></a><span class="lineno"> 4535</span>&#160;    self.parserows(pos)</div>
<div class="line"><a name="l04536"></a><span class="lineno"> 4536</span>&#160;    <span class="keywordflow">for</span> row <span class="keywordflow">in</span> self.contents:</div>
<div class="line"><a name="l04537"></a><span class="lineno"> 4537</span>&#160;      <span class="keywordflow">for</span> cell <span class="keywordflow">in</span> row.contents:</div>
<div class="line"><a name="l04538"></a><span class="lineno"> 4538</span>&#160;        cell.output.settag(<span class="stringliteral">&#39;span class=&quot;case align-l&quot;&#39;</span>, <span class="keyword">True</span>)</div>
<div class="line"><a name="l04539"></a><span class="lineno"> 4539</span>&#160;        cell.contents.append(FormulaConstant(<span class="stringliteral">u&#39;‚ÄÉ&#39;</span>))</div>
<div class="line"><a name="l04540"></a><span class="lineno"> 4540</span>&#160;    array = TaggedBit().complete(self.contents, <span class="stringliteral">&#39;span class=&quot;bracketcases&quot;&#39;</span>, <span class="keyword">True</span>)</div>
<div class="line"><a name="l04541"></a><span class="lineno"> 4541</span>&#160;    brace = BigBracket(len(self.contents), <span class="stringliteral">&#39;{&#39;</span>, <span class="stringliteral">&#39;l&#39;</span>)</div>
<div class="line"><a name="l04542"></a><span class="lineno"> 4542</span>&#160;    self.contents = brace.getcontents() + [array]</div>
<div class="line"><a name="l04543"></a><span class="lineno"> 4543</span>&#160; </div>
<div class="line"><a name="l04544"></a><span class="lineno"> 4544</span>&#160;<span class="keyword">class </span>EquationEnvironment(MultiRowFormula):</div>
<div class="line"><a name="l04545"></a><span class="lineno"> 4545</span>&#160;  <span class="stringliteral">&quot;A \\begin{}...\\end equation environment with rows and cells.&quot;</span></div>
<div class="line"><a name="l04546"></a><span class="lineno"> 4546</span>&#160; </div>
<div class="line"><a name="l04547"></a><span class="lineno"> 4547</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04548"></a><span class="lineno"> 4548</span>&#160;    <span class="stringliteral">&quot;Parse the whole environment.&quot;</span></div>
<div class="line"><a name="l04549"></a><span class="lineno"> 4549</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;environment&quot;&#39;</span>, <span class="keyword">False</span>)</div>
<div class="line"><a name="l04550"></a><span class="lineno"> 4550</span>&#160;    environment = self.piece.replace(<span class="stringliteral">&#39;*&#39;</span>, <span class="stringliteral">&#39;&#39;</span>)</div>
<div class="line"><a name="l04551"></a><span class="lineno"> 4551</span>&#160;    <span class="keywordflow">if</span> environment <span class="keywordflow">in</span> FormulaConfig.environments:</div>
<div class="line"><a name="l04552"></a><span class="lineno"> 4552</span>&#160;      self.alignments = FormulaConfig.environments[environment]</div>
<div class="line"><a name="l04553"></a><span class="lineno"> 4553</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l04554"></a><span class="lineno"> 4554</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unknown equation environment &#39;</span> + self.piece)</div>
<div class="line"><a name="l04555"></a><span class="lineno"> 4555</span>&#160;      self.alignments = [<span class="stringliteral">&#39;l&#39;</span>]</div>
<div class="line"><a name="l04556"></a><span class="lineno"> 4556</span>&#160;    self.parserows(pos)</div>
<div class="line"><a name="l04557"></a><span class="lineno"> 4557</span>&#160; </div>
<div class="line"><a name="l04558"></a><span class="lineno"> 4558</span>&#160;<span class="keyword">class </span>BeginCommand(CommandBit):</div>
<div class="line"><a name="l04559"></a><span class="lineno"> 4559</span>&#160;  <span class="stringliteral">&quot;A \\begin{}...\end command and what it entails (array, cases, aligned)&quot;</span></div>
<div class="line"><a name="l04560"></a><span class="lineno"> 4560</span>&#160; </div>
<div class="line"><a name="l04561"></a><span class="lineno"> 4561</span>&#160;  commandmap = {FormulaConfig.array[<span class="stringliteral">&#39;begin&#39;</span>]:<span class="stringliteral">&#39;&#39;</span>}</div>
<div class="line"><a name="l04562"></a><span class="lineno"> 4562</span>&#160; </div>
<div class="line"><a name="l04563"></a><span class="lineno"> 4563</span>&#160;  types = [FormulaEquation, FormulaArray, FormulaCases, FormulaMatrix]</div>
<div class="line"><a name="l04564"></a><span class="lineno"> 4564</span>&#160; </div>
<div class="line"><a name="l04565"></a><span class="lineno"> 4565</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04566"></a><span class="lineno"> 4566</span>&#160;    <span class="stringliteral">&quot;Parse the begin command&quot;</span></div>
<div class="line"><a name="l04567"></a><span class="lineno"> 4567</span>&#160;    command = self.parseliteral(pos)</div>
<div class="line"><a name="l04568"></a><span class="lineno"> 4568</span>&#160;    bit = self.findbit(command)</div>
<div class="line"><a name="l04569"></a><span class="lineno"> 4569</span>&#160;    ending = FormulaConfig.array[<span class="stringliteral">&#39;end&#39;</span>] + <span class="stringliteral">&#39;{&#39;</span> + command + <span class="stringliteral">&#39;}&#39;</span></div>
<div class="line"><a name="l04570"></a><span class="lineno"> 4570</span>&#160;    pos.pushending(ending)</div>
<div class="line"><a name="l04571"></a><span class="lineno"> 4571</span>&#160;    bit.parsebit(pos)</div>
<div class="line"><a name="l04572"></a><span class="lineno"> 4572</span>&#160;    self.add(bit)</div>
<div class="line"><a name="l04573"></a><span class="lineno"> 4573</span>&#160;    self.original += pos.popending(ending)</div>
<div class="line"><a name="l04574"></a><span class="lineno"> 4574</span>&#160;    self.size = bit.size</div>
<div class="line"><a name="l04575"></a><span class="lineno"> 4575</span>&#160; </div>
<div class="line"><a name="l04576"></a><span class="lineno"> 4576</span>&#160;  <span class="keyword">def </span>findbit(self, piece):</div>
<div class="line"><a name="l04577"></a><span class="lineno"> 4577</span>&#160;    <span class="stringliteral">&quot;Find the command bit corresponding to the \\begin{piece}&quot;</span></div>
<div class="line"><a name="l04578"></a><span class="lineno"> 4578</span>&#160;    <span class="keywordflow">for</span> type <span class="keywordflow">in</span> BeginCommand.types:</div>
<div class="line"><a name="l04579"></a><span class="lineno"> 4579</span>&#160;      <span class="keywordflow">if</span> piece.replace(<span class="stringliteral">&#39;*&#39;</span>, <span class="stringliteral">&#39;&#39;</span>) == type.piece:</div>
<div class="line"><a name="l04580"></a><span class="lineno"> 4580</span>&#160;        <span class="keywordflow">return</span> self.factory.create(type)</div>
<div class="line"><a name="l04581"></a><span class="lineno"> 4581</span>&#160;    bit = self.factory.create(EquationEnvironment)</div>
<div class="line"><a name="l04582"></a><span class="lineno"> 4582</span>&#160;    bit.piece = piece</div>
<div class="line"><a name="l04583"></a><span class="lineno"> 4583</span>&#160;    <span class="keywordflow">return</span> bit</div>
<div class="line"><a name="l04584"></a><span class="lineno"> 4584</span>&#160; </div>
<div class="line"><a name="l04585"></a><span class="lineno"> 4585</span>&#160;FormulaCommand.types += [BeginCommand]</div>
<div class="line"><a name="l04586"></a><span class="lineno"> 4586</span>&#160; </div>
<div class="line"><a name="l04587"></a><span class="lineno"> 4587</span>&#160; </div>
<div class="line"><a name="l04588"></a><span class="lineno"> 4588</span>&#160;<span class="keyword">import</span> datetime</div>
<div class="line"><a name="l04589"></a><span class="lineno"> 4589</span>&#160; </div>
<div class="line"><a name="l04590"></a><span class="lineno"> 4590</span>&#160; </div>
<div class="line"><a name="l04591"></a><span class="lineno"> 4591</span>&#160;<span class="keyword">class </span>CombiningFunction(OneParamFunction):</div>
<div class="line"><a name="l04592"></a><span class="lineno"> 4592</span>&#160; </div>
<div class="line"><a name="l04593"></a><span class="lineno"> 4593</span>&#160;  commandmap = FormulaConfig.combiningfunctions</div>
<div class="line"><a name="l04594"></a><span class="lineno"> 4594</span>&#160; </div>
<div class="line"><a name="l04595"></a><span class="lineno"> 4595</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04596"></a><span class="lineno"> 4596</span>&#160;    <span class="stringliteral">&quot;Parse a combining function.&quot;</span></div>
<div class="line"><a name="l04597"></a><span class="lineno"> 4597</span>&#160;    self.type = <span class="stringliteral">&#39;alpha&#39;</span></div>
<div class="line"><a name="l04598"></a><span class="lineno"> 4598</span>&#160;    combining = self.translated</div>
<div class="line"><a name="l04599"></a><span class="lineno"> 4599</span>&#160;    parameter = self.parsesingleparameter(pos)</div>
<div class="line"><a name="l04600"></a><span class="lineno"> 4600</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> parameter:</div>
<div class="line"><a name="l04601"></a><span class="lineno"> 4601</span>&#160;      Trace.error(<span class="stringliteral">&#39;Empty parameter for combining function &#39;</span> + self.command)</div>
<div class="line"><a name="l04602"></a><span class="lineno"> 4602</span>&#160;    <span class="keywordflow">elif</span> len(parameter.extracttext()) != 1:</div>
<div class="line"><a name="l04603"></a><span class="lineno"> 4603</span>&#160;      Trace.error(<span class="stringliteral">&#39;Applying combining function &#39;</span> + self.command + <span class="stringliteral">&#39; to invalid string &quot;&#39;</span> + parameter.extracttext() + <span class="stringliteral">&#39;&quot;&#39;</span>)</div>
<div class="line"><a name="l04604"></a><span class="lineno"> 4604</span>&#160;    self.contents.append(Constant(combining))</div>
<div class="line"><a name="l04605"></a><span class="lineno"> 4605</span>&#160; </div>
<div class="line"><a name="l04606"></a><span class="lineno"> 4606</span>&#160;  <span class="keyword">def </span>parsesingleparameter(self, pos):</div>
<div class="line"><a name="l04607"></a><span class="lineno"> 4607</span>&#160;    <span class="stringliteral">&quot;Parse a parameter, or a single letter.&quot;</span></div>
<div class="line"><a name="l04608"></a><span class="lineno"> 4608</span>&#160;    self.factory.clearskipped(pos)</div>
<div class="line"><a name="l04609"></a><span class="lineno"> 4609</span>&#160;    <span class="keywordflow">if</span> pos.finished():</div>
<div class="line"><a name="l04610"></a><span class="lineno"> 4610</span>&#160;      Trace.error(<span class="stringliteral">&#39;Error while parsing single parameter at &#39;</span> + pos.identifier())</div>
<div class="line"><a name="l04611"></a><span class="lineno"> 4611</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04612"></a><span class="lineno"> 4612</span>&#160;    <span class="keywordflow">if</span> self.factory.detecttype(Bracket, pos) \</div>
<div class="line"><a name="l04613"></a><span class="lineno"> 4613</span>&#160;        <span class="keywordflow">or</span> self.factory.detecttype(FormulaCommand, pos):</div>
<div class="line"><a name="l04614"></a><span class="lineno"> 4614</span>&#160;      <span class="keywordflow">return</span> self.parseparameter(pos)</div>
<div class="line"><a name="l04615"></a><span class="lineno"> 4615</span>&#160;    letter = FormulaConstant(pos.skipcurrent())</div>
<div class="line"><a name="l04616"></a><span class="lineno"> 4616</span>&#160;    self.add(letter)</div>
<div class="line"><a name="l04617"></a><span class="lineno"> 4617</span>&#160;    <span class="keywordflow">return</span> letter</div>
<div class="line"><a name="l04618"></a><span class="lineno"> 4618</span>&#160; </div>
<div class="line"><a name="l04619"></a><span class="lineno"> 4619</span>&#160;<span class="keyword">class </span>DecoratingFunction(OneParamFunction):</div>
<div class="line"><a name="l04620"></a><span class="lineno"> 4620</span>&#160;  <span class="stringliteral">&quot;A function that decorates some bit of text&quot;</span></div>
<div class="line"><a name="l04621"></a><span class="lineno"> 4621</span>&#160; </div>
<div class="line"><a name="l04622"></a><span class="lineno"> 4622</span>&#160;  commandmap = FormulaConfig.decoratingfunctions</div>
<div class="line"><a name="l04623"></a><span class="lineno"> 4623</span>&#160; </div>
<div class="line"><a name="l04624"></a><span class="lineno"> 4624</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04625"></a><span class="lineno"> 4625</span>&#160;    <span class="stringliteral">&quot;Parse a decorating function&quot;</span></div>
<div class="line"><a name="l04626"></a><span class="lineno"> 4626</span>&#160;    self.type = <span class="stringliteral">&#39;alpha&#39;</span></div>
<div class="line"><a name="l04627"></a><span class="lineno"> 4627</span>&#160;    symbol = self.translated</div>
<div class="line"><a name="l04628"></a><span class="lineno"> 4628</span>&#160;    self.symbol = TaggedBit().constant(symbol, <span class="stringliteral">&#39;span class=&quot;symbolover&quot;&#39;</span>)</div>
<div class="line"><a name="l04629"></a><span class="lineno"> 4629</span>&#160;    self.parameter = self.parseparameter(pos)</div>
<div class="line"><a name="l04630"></a><span class="lineno"> 4630</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;withsymbol&quot;&#39;</span>)</div>
<div class="line"><a name="l04631"></a><span class="lineno"> 4631</span>&#160;    self.contents.insert(0, self.symbol)</div>
<div class="line"><a name="l04632"></a><span class="lineno"> 4632</span>&#160;    self.parameter.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;undersymbol&quot;&#39;</span>)</div>
<div class="line"><a name="l04633"></a><span class="lineno"> 4633</span>&#160;    self.simplifyifpossible()</div>
<div class="line"><a name="l04634"></a><span class="lineno"> 4634</span>&#160; </div>
<div class="line"><a name="l04635"></a><span class="lineno"> 4635</span>&#160;<span class="keyword">class </span>LimitCommand(EmptyCommand):</div>
<div class="line"><a name="l04636"></a><span class="lineno"> 4636</span>&#160;  <span class="stringliteral">&quot;A command which accepts limits above and below, in display mode.&quot;</span></div>
<div class="line"><a name="l04637"></a><span class="lineno"> 4637</span>&#160; </div>
<div class="line"><a name="l04638"></a><span class="lineno"> 4638</span>&#160;  commandmap = FormulaConfig.limitcommands</div>
<div class="line"><a name="l04639"></a><span class="lineno"> 4639</span>&#160; </div>
<div class="line"><a name="l04640"></a><span class="lineno"> 4640</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04641"></a><span class="lineno"> 4641</span>&#160;    <span class="stringliteral">&quot;Parse a limit command.&quot;</span></div>
<div class="line"><a name="l04642"></a><span class="lineno"> 4642</span>&#160;    pieces = BigSymbol(self.translated).getpieces()</div>
<div class="line"><a name="l04643"></a><span class="lineno"> 4643</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;limits&quot;&#39;</span>)</div>
<div class="line"><a name="l04644"></a><span class="lineno"> 4644</span>&#160;    <span class="keywordflow">for</span> piece <span class="keywordflow">in</span> pieces:</div>
<div class="line"><a name="l04645"></a><span class="lineno"> 4645</span>&#160;      self.contents.append(TaggedBit().constant(piece, <span class="stringliteral">&#39;span class=&quot;limit&quot;&#39;</span>))</div>
<div class="line"><a name="l04646"></a><span class="lineno"> 4646</span>&#160; </div>
<div class="line"><a name="l04647"></a><span class="lineno"> 4647</span>&#160;<span class="keyword">class </span>LimitPreviousCommand(LimitCommand):</div>
<div class="line"><a name="l04648"></a><span class="lineno"> 4648</span>&#160;  <span class="stringliteral">&quot;A command to limit the previous command.&quot;</span></div>
<div class="line"><a name="l04649"></a><span class="lineno"> 4649</span>&#160; </div>
<div class="line"><a name="l04650"></a><span class="lineno"> 4650</span>&#160;  commandmap = <span class="keywordtype">None</span></div>
<div class="line"><a name="l04651"></a><span class="lineno"> 4651</span>&#160; </div>
<div class="line"><a name="l04652"></a><span class="lineno"> 4652</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04653"></a><span class="lineno"> 4653</span>&#160;    <span class="stringliteral">&quot;Do nothing.&quot;</span></div>
<div class="line"><a name="l04654"></a><span class="lineno"> 4654</span>&#160;    self.output = TaggedOutput().settag(<span class="stringliteral">&#39;span class=&quot;limits&quot;&#39;</span>)</div>
<div class="line"><a name="l04655"></a><span class="lineno"> 4655</span>&#160;    self.factory.clearskipped(pos)</div>
<div class="line"><a name="l04656"></a><span class="lineno"> 4656</span>&#160; </div>
<div class="line"><a name="l04657"></a><span class="lineno"> 4657</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l04658"></a><span class="lineno"> 4658</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l04659"></a><span class="lineno"> 4659</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Limit previous command&#39;</span></div>
<div class="line"><a name="l04660"></a><span class="lineno"> 4660</span>&#160; </div>
<div class="line"><a name="l04661"></a><span class="lineno"> 4661</span>&#160;<span class="keyword">class </span>LimitsProcessor(MathsProcessor):</div>
<div class="line"><a name="l04662"></a><span class="lineno"> 4662</span>&#160;  <span class="stringliteral">&quot;A processor for limits inside an element.&quot;</span></div>
<div class="line"><a name="l04663"></a><span class="lineno"> 4663</span>&#160; </div>
<div class="line"><a name="l04664"></a><span class="lineno"> 4664</span>&#160;  <span class="keyword">def </span>process(self, contents, index):</div>
<div class="line"><a name="l04665"></a><span class="lineno"> 4665</span>&#160;    <span class="stringliteral">&quot;Process the limits for an element.&quot;</span></div>
<div class="line"><a name="l04666"></a><span class="lineno"> 4666</span>&#160;    <span class="keywordflow">if</span> Options.simplemath:</div>
<div class="line"><a name="l04667"></a><span class="lineno"> 4667</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l04668"></a><span class="lineno"> 4668</span>&#160;    <span class="keywordflow">if</span> self.checklimits(contents, index):</div>
<div class="line"><a name="l04669"></a><span class="lineno"> 4669</span>&#160;      self.modifylimits(contents, index)</div>
<div class="line"><a name="l04670"></a><span class="lineno"> 4670</span>&#160;    <span class="keywordflow">if</span> self.checkscript(contents, index) <span class="keywordflow">and</span> self.checkscript(contents, index + 1):</div>
<div class="line"><a name="l04671"></a><span class="lineno"> 4671</span>&#160;      self.modifyscripts(contents, index)</div>
<div class="line"><a name="l04672"></a><span class="lineno"> 4672</span>&#160; </div>
<div class="line"><a name="l04673"></a><span class="lineno"> 4673</span>&#160;  <span class="keyword">def </span>checklimits(self, contents, index):</div>
<div class="line"><a name="l04674"></a><span class="lineno"> 4674</span>&#160;    <span class="stringliteral">&quot;Check if the current position has a limits command.&quot;</span></div>
<div class="line"><a name="l04675"></a><span class="lineno"> 4675</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> DocumentParameters.displaymode:</div>
<div class="line"><a name="l04676"></a><span class="lineno"> 4676</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l04677"></a><span class="lineno"> 4677</span>&#160;    <span class="keywordflow">if</span> self.checkcommand(contents, index + 1, LimitPreviousCommand):</div>
<div class="line"><a name="l04678"></a><span class="lineno"> 4678</span>&#160;      self.limitsahead(contents, index)</div>
<div class="line"><a name="l04679"></a><span class="lineno"> 4679</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l04680"></a><span class="lineno"> 4680</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(contents[index], LimitCommand):</div>
<div class="line"><a name="l04681"></a><span class="lineno"> 4681</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l04682"></a><span class="lineno"> 4682</span>&#160;    <span class="keywordflow">return</span> self.checkscript(contents, index + 1)</div>
<div class="line"><a name="l04683"></a><span class="lineno"> 4683</span>&#160; </div>
<div class="line"><a name="l04684"></a><span class="lineno"> 4684</span>&#160;  <span class="keyword">def </span>limitsahead(self, contents, index):</div>
<div class="line"><a name="l04685"></a><span class="lineno"> 4685</span>&#160;    <span class="stringliteral">&quot;Limit the current element based on the next.&quot;</span></div>
<div class="line"><a name="l04686"></a><span class="lineno"> 4686</span>&#160;    contents[index + 1].add(contents[index].clone())</div>
<div class="line"><a name="l04687"></a><span class="lineno"> 4687</span>&#160;    contents[index].output = EmptyOutput()</div>
<div class="line"><a name="l04688"></a><span class="lineno"> 4688</span>&#160; </div>
<div class="line"><a name="l04689"></a><span class="lineno"> 4689</span>&#160;  <span class="keyword">def </span>modifylimits(self, contents, index):</div>
<div class="line"><a name="l04690"></a><span class="lineno"> 4690</span>&#160;    <span class="stringliteral">&quot;Modify a limits commands so that the limits appear above and below.&quot;</span></div>
<div class="line"><a name="l04691"></a><span class="lineno"> 4691</span>&#160;    limited = contents[index]</div>
<div class="line"><a name="l04692"></a><span class="lineno"> 4692</span>&#160;    subscript = self.getlimit(contents, index + 1)</div>
<div class="line"><a name="l04693"></a><span class="lineno"> 4693</span>&#160;    limited.contents.append(subscript)</div>
<div class="line"><a name="l04694"></a><span class="lineno"> 4694</span>&#160;    <span class="keywordflow">if</span> self.checkscript(contents, index + 1):</div>
<div class="line"><a name="l04695"></a><span class="lineno"> 4695</span>&#160;      superscript = self.getlimit(contents, index  + 1)</div>
<div class="line"><a name="l04696"></a><span class="lineno"> 4696</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l04697"></a><span class="lineno"> 4697</span>&#160;      superscript = TaggedBit().constant(<span class="stringliteral">u&#39;‚Åü&#39;</span>, <span class="stringliteral">&#39;sup class=&quot;limit&quot;&#39;</span>)</div>
<div class="line"><a name="l04698"></a><span class="lineno"> 4698</span>&#160;    limited.contents.insert(0, superscript)</div>
<div class="line"><a name="l04699"></a><span class="lineno"> 4699</span>&#160; </div>
<div class="line"><a name="l04700"></a><span class="lineno"> 4700</span>&#160;  <span class="keyword">def </span>getlimit(self, contents, index):</div>
<div class="line"><a name="l04701"></a><span class="lineno"> 4701</span>&#160;    <span class="stringliteral">&quot;Get the limit for a limits command.&quot;</span></div>
<div class="line"><a name="l04702"></a><span class="lineno"> 4702</span>&#160;    limit = self.getscript(contents, index)</div>
<div class="line"><a name="l04703"></a><span class="lineno"> 4703</span>&#160;    limit.output.tag = limit.output.tag.replace(<span class="stringliteral">&#39;script&#39;</span>, <span class="stringliteral">&#39;limit&#39;</span>)</div>
<div class="line"><a name="l04704"></a><span class="lineno"> 4704</span>&#160;    <span class="keywordflow">return</span> limit</div>
<div class="line"><a name="l04705"></a><span class="lineno"> 4705</span>&#160; </div>
<div class="line"><a name="l04706"></a><span class="lineno"> 4706</span>&#160;  <span class="keyword">def </span>modifyscripts(self, contents, index):</div>
<div class="line"><a name="l04707"></a><span class="lineno"> 4707</span>&#160;    <span class="stringliteral">&quot;Modify the super- and subscript to appear vertically aligned.&quot;</span></div>
<div class="line"><a name="l04708"></a><span class="lineno"> 4708</span>&#160;    subscript = self.getscript(contents, index)</div>
<div class="line"><a name="l04709"></a><span class="lineno"> 4709</span>&#160;    <span class="comment"># subscript removed so instead of index + 1 we get index again</span></div>
<div class="line"><a name="l04710"></a><span class="lineno"> 4710</span>&#160;    superscript = self.getscript(contents, index)</div>
<div class="line"><a name="l04711"></a><span class="lineno"> 4711</span>&#160;    scripts = TaggedBit().complete([superscript, subscript], <span class="stringliteral">&#39;span class=&quot;scripts&quot;&#39;</span>)</div>
<div class="line"><a name="l04712"></a><span class="lineno"> 4712</span>&#160;    contents.insert(index, scripts)</div>
<div class="line"><a name="l04713"></a><span class="lineno"> 4713</span>&#160; </div>
<div class="line"><a name="l04714"></a><span class="lineno"> 4714</span>&#160;  <span class="keyword">def </span>checkscript(self, contents, index):</div>
<div class="line"><a name="l04715"></a><span class="lineno"> 4715</span>&#160;    <span class="stringliteral">&quot;Check if the current element is a sub- or superscript.&quot;</span></div>
<div class="line"><a name="l04716"></a><span class="lineno"> 4716</span>&#160;    <span class="keywordflow">return</span> self.checkcommand(contents, index, SymbolFunction)</div>
<div class="line"><a name="l04717"></a><span class="lineno"> 4717</span>&#160; </div>
<div class="line"><a name="l04718"></a><span class="lineno"> 4718</span>&#160;  <span class="keyword">def </span>checkcommand(self, contents, index, type):</div>
<div class="line"><a name="l04719"></a><span class="lineno"> 4719</span>&#160;    <span class="stringliteral">&quot;Check for the given type as the current element.&quot;</span></div>
<div class="line"><a name="l04720"></a><span class="lineno"> 4720</span>&#160;    <span class="keywordflow">if</span> len(contents) &lt;= index:</div>
<div class="line"><a name="l04721"></a><span class="lineno"> 4721</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l04722"></a><span class="lineno"> 4722</span>&#160;    <span class="keywordflow">return</span> isinstance(contents[index], type)</div>
<div class="line"><a name="l04723"></a><span class="lineno"> 4723</span>&#160; </div>
<div class="line"><a name="l04724"></a><span class="lineno"> 4724</span>&#160;  <span class="keyword">def </span>getscript(self, contents, index):</div>
<div class="line"><a name="l04725"></a><span class="lineno"> 4725</span>&#160;    <span class="stringliteral">&quot;Get the sub- or superscript.&quot;</span></div>
<div class="line"><a name="l04726"></a><span class="lineno"> 4726</span>&#160;    bit = contents[index]</div>
<div class="line"><a name="l04727"></a><span class="lineno"> 4727</span>&#160;    bit.output.tag += <span class="stringliteral">&#39; class=&quot;script&quot;&#39;</span></div>
<div class="line"><a name="l04728"></a><span class="lineno"> 4728</span>&#160;    del contents[index]</div>
<div class="line"><a name="l04729"></a><span class="lineno"> 4729</span>&#160;    <span class="keywordflow">return</span> bit</div>
<div class="line"><a name="l04730"></a><span class="lineno"> 4730</span>&#160; </div>
<div class="line"><a name="l04731"></a><span class="lineno"> 4731</span>&#160;<span class="keyword">class </span>BracketCommand(OneParamFunction):</div>
<div class="line"><a name="l04732"></a><span class="lineno"> 4732</span>&#160;  <span class="stringliteral">&quot;A command which defines a bracket.&quot;</span></div>
<div class="line"><a name="l04733"></a><span class="lineno"> 4733</span>&#160; </div>
<div class="line"><a name="l04734"></a><span class="lineno"> 4734</span>&#160;  commandmap = FormulaConfig.bracketcommands</div>
<div class="line"><a name="l04735"></a><span class="lineno"> 4735</span>&#160; </div>
<div class="line"><a name="l04736"></a><span class="lineno"> 4736</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04737"></a><span class="lineno"> 4737</span>&#160;    <span class="stringliteral">&quot;Parse the bracket.&quot;</span></div>
<div class="line"><a name="l04738"></a><span class="lineno"> 4738</span>&#160;    OneParamFunction.parsebit(self, pos)</div>
<div class="line"><a name="l04739"></a><span class="lineno"> 4739</span>&#160; </div>
<div class="line"><a name="l04740"></a><span class="lineno"> 4740</span>&#160;  <span class="keyword">def </span>create(self, direction, character):</div>
<div class="line"><a name="l04741"></a><span class="lineno"> 4741</span>&#160;    <span class="stringliteral">&quot;Create the bracket for the given character.&quot;</span></div>
<div class="line"><a name="l04742"></a><span class="lineno"> 4742</span>&#160;    self.original = character</div>
<div class="line"><a name="l04743"></a><span class="lineno"> 4743</span>&#160;    self.command = <span class="stringliteral">&#39;\\&#39;</span> + direction</div>
<div class="line"><a name="l04744"></a><span class="lineno"> 4744</span>&#160;    self.contents = [FormulaConstant(character)]</div>
<div class="line"><a name="l04745"></a><span class="lineno"> 4745</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l04746"></a><span class="lineno"> 4746</span>&#160; </div>
<div class="line"><a name="l04747"></a><span class="lineno"> 4747</span>&#160;<span class="keyword">class </span>BracketProcessor(MathsProcessor):</div>
<div class="line"><a name="l04748"></a><span class="lineno"> 4748</span>&#160;  <span class="stringliteral">&quot;A processor for bracket commands.&quot;</span></div>
<div class="line"><a name="l04749"></a><span class="lineno"> 4749</span>&#160; </div>
<div class="line"><a name="l04750"></a><span class="lineno"> 4750</span>&#160;  <span class="keyword">def </span>process(self, contents, index):</div>
<div class="line"><a name="l04751"></a><span class="lineno"> 4751</span>&#160;    <span class="stringliteral">&quot;Convert the bracket using Unicode pieces, if possible.&quot;</span></div>
<div class="line"><a name="l04752"></a><span class="lineno"> 4752</span>&#160;    <span class="keywordflow">if</span> Options.simplemath:</div>
<div class="line"><a name="l04753"></a><span class="lineno"> 4753</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l04754"></a><span class="lineno"> 4754</span>&#160;    <span class="keywordflow">if</span> self.checkleft(contents, index):</div>
<div class="line"><a name="l04755"></a><span class="lineno"> 4755</span>&#160;      <span class="keywordflow">return</span> self.processleft(contents, index)</div>
<div class="line"><a name="l04756"></a><span class="lineno"> 4756</span>&#160; </div>
<div class="line"><a name="l04757"></a><span class="lineno"> 4757</span>&#160;  <span class="keyword">def </span>processleft(self, contents, index):</div>
<div class="line"><a name="l04758"></a><span class="lineno"> 4758</span>&#160;    <span class="stringliteral">&quot;Process a left bracket.&quot;</span></div>
<div class="line"><a name="l04759"></a><span class="lineno"> 4759</span>&#160;    rightindex = self.findright(contents, index + 1)</div>
<div class="line"><a name="l04760"></a><span class="lineno"> 4760</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> rightindex:</div>
<div class="line"><a name="l04761"></a><span class="lineno"> 4761</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l04762"></a><span class="lineno"> 4762</span>&#160;    size = self.findmax(contents, index, rightindex)</div>
<div class="line"><a name="l04763"></a><span class="lineno"> 4763</span>&#160;    self.resize(contents[index], size)</div>
<div class="line"><a name="l04764"></a><span class="lineno"> 4764</span>&#160;    self.resize(contents[rightindex], size)</div>
<div class="line"><a name="l04765"></a><span class="lineno"> 4765</span>&#160; </div>
<div class="line"><a name="l04766"></a><span class="lineno"> 4766</span>&#160;  <span class="keyword">def </span>checkleft(self, contents, index):</div>
<div class="line"><a name="l04767"></a><span class="lineno"> 4767</span>&#160;    <span class="stringliteral">&quot;Check if the command at the given index is left.&quot;</span></div>
<div class="line"><a name="l04768"></a><span class="lineno"> 4768</span>&#160;    <span class="keywordflow">return</span> self.checkdirection(contents[index], <span class="stringliteral">&#39;\\left&#39;</span>)</div>
<div class="line"><a name="l04769"></a><span class="lineno"> 4769</span>&#160;  </div>
<div class="line"><a name="l04770"></a><span class="lineno"> 4770</span>&#160;  <span class="keyword">def </span>checkright(self, contents, index):</div>
<div class="line"><a name="l04771"></a><span class="lineno"> 4771</span>&#160;    <span class="stringliteral">&quot;Check if the command at the given index is right.&quot;</span></div>
<div class="line"><a name="l04772"></a><span class="lineno"> 4772</span>&#160;    <span class="keywordflow">return</span> self.checkdirection(contents[index], <span class="stringliteral">&#39;\\right&#39;</span>)</div>
<div class="line"><a name="l04773"></a><span class="lineno"> 4773</span>&#160; </div>
<div class="line"><a name="l04774"></a><span class="lineno"> 4774</span>&#160;  <span class="keyword">def </span>checkdirection(self, bit, command):</div>
<div class="line"><a name="l04775"></a><span class="lineno"> 4775</span>&#160;    <span class="stringliteral">&quot;Check if the given bit is the desired bracket command.&quot;</span></div>
<div class="line"><a name="l04776"></a><span class="lineno"> 4776</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(bit, BracketCommand):</div>
<div class="line"><a name="l04777"></a><span class="lineno"> 4777</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l04778"></a><span class="lineno"> 4778</span>&#160;    <span class="keywordflow">return</span> bit.command == command</div>
<div class="line"><a name="l04779"></a><span class="lineno"> 4779</span>&#160; </div>
<div class="line"><a name="l04780"></a><span class="lineno"> 4780</span>&#160;  <span class="keyword">def </span>findright(self, contents, index):</div>
<div class="line"><a name="l04781"></a><span class="lineno"> 4781</span>&#160;    <span class="stringliteral">&quot;Find the right bracket starting at the given index, or 0.&quot;</span></div>
<div class="line"><a name="l04782"></a><span class="lineno"> 4782</span>&#160;    depth = 1</div>
<div class="line"><a name="l04783"></a><span class="lineno"> 4783</span>&#160;    <span class="keywordflow">while</span> index &lt; len(contents):</div>
<div class="line"><a name="l04784"></a><span class="lineno"> 4784</span>&#160;      <span class="keywordflow">if</span> self.checkleft(contents, index):</div>
<div class="line"><a name="l04785"></a><span class="lineno"> 4785</span>&#160;        depth += 1</div>
<div class="line"><a name="l04786"></a><span class="lineno"> 4786</span>&#160;      <span class="keywordflow">if</span> self.checkright(contents, index):</div>
<div class="line"><a name="l04787"></a><span class="lineno"> 4787</span>&#160;        depth -= 1</div>
<div class="line"><a name="l04788"></a><span class="lineno"> 4788</span>&#160;      <span class="keywordflow">if</span> depth == 0:</div>
<div class="line"><a name="l04789"></a><span class="lineno"> 4789</span>&#160;        <span class="keywordflow">return</span> index</div>
<div class="line"><a name="l04790"></a><span class="lineno"> 4790</span>&#160;      index += 1</div>
<div class="line"><a name="l04791"></a><span class="lineno"> 4791</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04792"></a><span class="lineno"> 4792</span>&#160; </div>
<div class="line"><a name="l04793"></a><span class="lineno"> 4793</span>&#160;  <span class="keyword">def </span>findmax(self, contents, leftindex, rightindex):</div>
<div class="line"><a name="l04794"></a><span class="lineno"> 4794</span>&#160;    <span class="stringliteral">&quot;Find the max size of the contents between the two given indices.&quot;</span></div>
<div class="line"><a name="l04795"></a><span class="lineno"> 4795</span>&#160;    sliced = contents[leftindex:rightindex]</div>
<div class="line"><a name="l04796"></a><span class="lineno"> 4796</span>&#160;    <span class="keywordflow">return</span> max([element.size <span class="keywordflow">for</span> element <span class="keywordflow">in</span> sliced])</div>
<div class="line"><a name="l04797"></a><span class="lineno"> 4797</span>&#160; </div>
<div class="line"><a name="l04798"></a><span class="lineno"> 4798</span>&#160;  <span class="keyword">def </span>resize(self, command, size):</div>
<div class="line"><a name="l04799"></a><span class="lineno"> 4799</span>&#160;    <span class="stringliteral">&quot;Resize a bracket command to the given size.&quot;</span></div>
<div class="line"><a name="l04800"></a><span class="lineno"> 4800</span>&#160;    character = command.extracttext()</div>
<div class="line"><a name="l04801"></a><span class="lineno"> 4801</span>&#160;    alignment = command.command.replace(<span class="stringliteral">&#39;\\&#39;</span>, <span class="stringliteral">&#39;&#39;</span>)</div>
<div class="line"><a name="l04802"></a><span class="lineno"> 4802</span>&#160;    bracket = BigBracket(size, character, alignment)</div>
<div class="line"><a name="l04803"></a><span class="lineno"> 4803</span>&#160;    command.output = ContentsOutput()</div>
<div class="line"><a name="l04804"></a><span class="lineno"> 4804</span>&#160;    command.contents = bracket.getcontents()</div>
<div class="line"><a name="l04805"></a><span class="lineno"> 4805</span>&#160; </div>
<div class="line"><a name="l04806"></a><span class="lineno"> 4806</span>&#160;<span class="keyword">class </span>TodayCommand(EmptyCommand):</div>
<div class="line"><a name="l04807"></a><span class="lineno"> 4807</span>&#160;  <span class="stringliteral">&quot;Shows today&#39;s date.&quot;</span></div>
<div class="line"><a name="l04808"></a><span class="lineno"> 4808</span>&#160; </div>
<div class="line"><a name="l04809"></a><span class="lineno"> 4809</span>&#160;  commandmap = <span class="keywordtype">None</span></div>
<div class="line"><a name="l04810"></a><span class="lineno"> 4810</span>&#160; </div>
<div class="line"><a name="l04811"></a><span class="lineno"> 4811</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04812"></a><span class="lineno"> 4812</span>&#160;    <span class="stringliteral">&quot;Parse a command without parameters&quot;</span></div>
<div class="line"><a name="l04813"></a><span class="lineno"> 4813</span>&#160;    self.output = FixedOutput()</div>
<div class="line"><a name="l04814"></a><span class="lineno"> 4814</span>&#160;    self.html = [datetime.date.today().strftime(<span class="stringliteral">&#39;%b %d, %Y&#39;</span>)]</div>
<div class="line"><a name="l04815"></a><span class="lineno"> 4815</span>&#160; </div>
<div class="line"><a name="l04816"></a><span class="lineno"> 4816</span>&#160; </div>
<div class="line"><a name="l04817"></a><span class="lineno"> 4817</span>&#160;FormulaCommand.types += [</div>
<div class="line"><a name="l04818"></a><span class="lineno"> 4818</span>&#160;    DecoratingFunction, CombiningFunction, LimitCommand, BracketCommand,</div>
<div class="line"><a name="l04819"></a><span class="lineno"> 4819</span>&#160;    ]</div>
<div class="line"><a name="l04820"></a><span class="lineno"> 4820</span>&#160; </div>
<div class="line"><a name="l04821"></a><span class="lineno"> 4821</span>&#160;FormulaProcessor.processors += [</div>
<div class="line"><a name="l04822"></a><span class="lineno"> 4822</span>&#160;    LimitsProcessor(), BracketProcessor(),</div>
<div class="line"><a name="l04823"></a><span class="lineno"> 4823</span>&#160;    ]</div>
<div class="line"><a name="l04824"></a><span class="lineno"> 4824</span>&#160; </div>
<div class="line"><a name="l04825"></a><span class="lineno"> 4825</span>&#160; </div>
<div class="line"><a name="l04826"></a><span class="lineno"> 4826</span>&#160; </div>
<div class="line"><a name="l04827"></a><span class="lineno"> 4827</span>&#160;<span class="keyword">class </span>ParameterDefinition(object):</div>
<div class="line"><a name="l04828"></a><span class="lineno"> 4828</span>&#160;  <span class="stringliteral">&quot;The definition of a parameter in a hybrid function.&quot;</span></div>
<div class="line"><a name="l04829"></a><span class="lineno"> 4829</span>&#160;  <span class="stringliteral">&quot;[] parameters are optional, {} parameters are mandatory.&quot;</span></div>
<div class="line"><a name="l04830"></a><span class="lineno"> 4830</span>&#160;  <span class="stringliteral">&quot;Each parameter has a one-character name, like {$1} or {$p}.&quot;</span></div>
<div class="line"><a name="l04831"></a><span class="lineno"> 4831</span>&#160;  <span class="stringliteral">&quot;A parameter that ends in ! like {$p!} is a literal.&quot;</span></div>
<div class="line"><a name="l04832"></a><span class="lineno"> 4832</span>&#160;  <span class="stringliteral">&quot;Example: [$1]{$p!} reads an optional parameter $1 and a literal mandatory parameter p.&quot;</span></div>
<div class="line"><a name="l04833"></a><span class="lineno"> 4833</span>&#160; </div>
<div class="line"><a name="l04834"></a><span class="lineno"> 4834</span>&#160;  parambrackets = [(<span class="stringliteral">&#39;[&#39;</span>, <span class="stringliteral">&#39;]&#39;</span>), (<span class="stringliteral">&#39;{&#39;</span>, <span class="stringliteral">&#39;}&#39;</span>)]</div>
<div class="line"><a name="l04835"></a><span class="lineno"> 4835</span>&#160; </div>
<div class="line"><a name="l04836"></a><span class="lineno"> 4836</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l04837"></a><span class="lineno"> 4837</span>&#160;    self.name = <span class="keywordtype">None</span></div>
<div class="line"><a name="l04838"></a><span class="lineno"> 4838</span>&#160;    self.literal = <span class="keyword">False</span></div>
<div class="line"><a name="l04839"></a><span class="lineno"> 4839</span>&#160;    self.optional = <span class="keyword">False</span></div>
<div class="line"><a name="l04840"></a><span class="lineno"> 4840</span>&#160;    self.value = <span class="keywordtype">None</span></div>
<div class="line"><a name="l04841"></a><span class="lineno"> 4841</span>&#160;    self.literalvalue = <span class="keywordtype">None</span></div>
<div class="line"><a name="l04842"></a><span class="lineno"> 4842</span>&#160; </div>
<div class="line"><a name="l04843"></a><span class="lineno"> 4843</span>&#160;  <span class="keyword">def </span>parse(self, pos):</div>
<div class="line"><a name="l04844"></a><span class="lineno"> 4844</span>&#160;    <span class="stringliteral">&quot;Parse a parameter definition: [$0], {$x}, {$1!}...&quot;</span></div>
<div class="line"><a name="l04845"></a><span class="lineno"> 4845</span>&#160;    <span class="keywordflow">for</span> (opening, closing) <span class="keywordflow">in</span> ParameterDefinition.parambrackets:</div>
<div class="line"><a name="l04846"></a><span class="lineno"> 4846</span>&#160;      <span class="keywordflow">if</span> pos.checkskip(opening):</div>
<div class="line"><a name="l04847"></a><span class="lineno"> 4847</span>&#160;        <span class="keywordflow">if</span> opening == <span class="stringliteral">&#39;[&#39;</span>:</div>
<div class="line"><a name="l04848"></a><span class="lineno"> 4848</span>&#160;          self.optional = <span class="keyword">True</span></div>
<div class="line"><a name="l04849"></a><span class="lineno"> 4849</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.checkskip(<span class="stringliteral">&#39;$&#39;</span>):</div>
<div class="line"><a name="l04850"></a><span class="lineno"> 4850</span>&#160;          Trace.error(<span class="stringliteral">&#39;Wrong parameter name, did you mean $&#39;</span> + pos.current() + <span class="stringliteral">&#39;?&#39;</span>)</div>
<div class="line"><a name="l04851"></a><span class="lineno"> 4851</span>&#160;          <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04852"></a><span class="lineno"> 4852</span>&#160;        self.name = pos.skipcurrent()</div>
<div class="line"><a name="l04853"></a><span class="lineno"> 4853</span>&#160;        <span class="keywordflow">if</span> pos.checkskip(<span class="stringliteral">&#39;!&#39;</span>):</div>
<div class="line"><a name="l04854"></a><span class="lineno"> 4854</span>&#160;          self.literal = <span class="keyword">True</span></div>
<div class="line"><a name="l04855"></a><span class="lineno"> 4855</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.checkskip(closing):</div>
<div class="line"><a name="l04856"></a><span class="lineno"> 4856</span>&#160;          Trace.error(<span class="stringliteral">&#39;Wrong parameter closing &#39;</span> + pos.skipcurrent())</div>
<div class="line"><a name="l04857"></a><span class="lineno"> 4857</span>&#160;          <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04858"></a><span class="lineno"> 4858</span>&#160;        <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l04859"></a><span class="lineno"> 4859</span>&#160;    Trace.error(<span class="stringliteral">&#39;Wrong character in parameter template: &#39;</span> + pos.skipcurrent())</div>
<div class="line"><a name="l04860"></a><span class="lineno"> 4860</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04861"></a><span class="lineno"> 4861</span>&#160; </div>
<div class="line"><a name="l04862"></a><span class="lineno"> 4862</span>&#160;  <span class="keyword">def </span>read(self, pos, function):</div>
<div class="line"><a name="l04863"></a><span class="lineno"> 4863</span>&#160;    <span class="stringliteral">&quot;Read the parameter itself using the definition.&quot;</span></div>
<div class="line"><a name="l04864"></a><span class="lineno"> 4864</span>&#160;    <span class="keywordflow">if</span> self.literal:</div>
<div class="line"><a name="l04865"></a><span class="lineno"> 4865</span>&#160;      <span class="keywordflow">if</span> self.optional:</div>
<div class="line"><a name="l04866"></a><span class="lineno"> 4866</span>&#160;        self.literalvalue = function.parsesquareliteral(pos)</div>
<div class="line"><a name="l04867"></a><span class="lineno"> 4867</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l04868"></a><span class="lineno"> 4868</span>&#160;        self.literalvalue = function.parseliteral(pos)</div>
<div class="line"><a name="l04869"></a><span class="lineno"> 4869</span>&#160;      <span class="keywordflow">if</span> self.literalvalue:</div>
<div class="line"><a name="l04870"></a><span class="lineno"> 4870</span>&#160;        self.value = FormulaConstant(self.literalvalue)</div>
<div class="line"><a name="l04871"></a><span class="lineno"> 4871</span>&#160;    <span class="keywordflow">elif</span> self.optional:</div>
<div class="line"><a name="l04872"></a><span class="lineno"> 4872</span>&#160;      self.value = function.parsesquare(pos)</div>
<div class="line"><a name="l04873"></a><span class="lineno"> 4873</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l04874"></a><span class="lineno"> 4874</span>&#160;      self.value = function.parseparameter(pos)</div>
<div class="line"><a name="l04875"></a><span class="lineno"> 4875</span>&#160; </div>
<div class="line"><a name="l04876"></a><span class="lineno"> 4876</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l04877"></a><span class="lineno"> 4877</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l04878"></a><span class="lineno"> 4878</span>&#160;    result = <span class="stringliteral">&#39;param &#39;</span> + self.name</div>
<div class="line"><a name="l04879"></a><span class="lineno"> 4879</span>&#160;    <span class="keywordflow">if</span> self.value:</div>
<div class="line"><a name="l04880"></a><span class="lineno"> 4880</span>&#160;      result += <span class="stringliteral">&#39;: &#39;</span> + unicode(self.value)</div>
<div class="line"><a name="l04881"></a><span class="lineno"> 4881</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l04882"></a><span class="lineno"> 4882</span>&#160;      result += <span class="stringliteral">&#39; (empty)&#39;</span></div>
<div class="line"><a name="l04883"></a><span class="lineno"> 4883</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l04884"></a><span class="lineno"> 4884</span>&#160; </div>
<div class="line"><a name="l04885"></a><span class="lineno"> 4885</span>&#160;<span class="keyword">class </span>ParameterFunction(CommandBit):</div>
<div class="line"><a name="l04886"></a><span class="lineno"> 4886</span>&#160;  <span class="stringliteral">&quot;A function with a variable number of parameters defined in a template.&quot;</span></div>
<div class="line"><a name="l04887"></a><span class="lineno"> 4887</span>&#160;  <span class="stringliteral">&quot;The parameters are defined as a parameter definition.&quot;</span></div>
<div class="line"><a name="l04888"></a><span class="lineno"> 4888</span>&#160; </div>
<div class="line"><a name="l04889"></a><span class="lineno"> 4889</span>&#160;  <span class="keyword">def </span>readparams(self, readtemplate, pos):</div>
<div class="line"><a name="l04890"></a><span class="lineno"> 4890</span>&#160;    <span class="stringliteral">&quot;Read the params according to the template.&quot;</span></div>
<div class="line"><a name="l04891"></a><span class="lineno"> 4891</span>&#160;    self.params = dict()</div>
<div class="line"><a name="l04892"></a><span class="lineno"> 4892</span>&#160;    <span class="keywordflow">for</span> paramdef <span class="keywordflow">in</span> self.paramdefs(readtemplate):</div>
<div class="line"><a name="l04893"></a><span class="lineno"> 4893</span>&#160;      paramdef.read(pos, self)</div>
<div class="line"><a name="l04894"></a><span class="lineno"> 4894</span>&#160;      self.params[<span class="stringliteral">&#39;$&#39;</span> + paramdef.name] = paramdef</div>
<div class="line"><a name="l04895"></a><span class="lineno"> 4895</span>&#160; </div>
<div class="line"><a name="l04896"></a><span class="lineno"> 4896</span>&#160;  <span class="keyword">def </span>paramdefs(self, readtemplate):</div>
<div class="line"><a name="l04897"></a><span class="lineno"> 4897</span>&#160;    <span class="stringliteral">&quot;Read each param definition in the template&quot;</span></div>
<div class="line"><a name="l04898"></a><span class="lineno"> 4898</span>&#160;    pos = TextPosition(readtemplate)</div>
<div class="line"><a name="l04899"></a><span class="lineno"> 4899</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> pos.finished():</div>
<div class="line"><a name="l04900"></a><span class="lineno"> 4900</span>&#160;      paramdef = ParameterDefinition().parse(pos)</div>
<div class="line"><a name="l04901"></a><span class="lineno"> 4901</span>&#160;      <span class="keywordflow">if</span> paramdef:</div>
<div class="line"><a name="l04902"></a><span class="lineno"> 4902</span>&#160;        <span class="keywordflow">yield</span> paramdef</div>
<div class="line"><a name="l04903"></a><span class="lineno"> 4903</span>&#160; </div>
<div class="line"><a name="l04904"></a><span class="lineno"> 4904</span>&#160;  <span class="keyword">def </span>getparam(self, name):</div>
<div class="line"><a name="l04905"></a><span class="lineno"> 4905</span>&#160;    <span class="stringliteral">&quot;Get a parameter as parsed.&quot;</span></div>
<div class="line"><a name="l04906"></a><span class="lineno"> 4906</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> name <span class="keywordflow">in</span> self.params:</div>
<div class="line"><a name="l04907"></a><span class="lineno"> 4907</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04908"></a><span class="lineno"> 4908</span>&#160;    <span class="keywordflow">return</span> self.params[name]</div>
<div class="line"><a name="l04909"></a><span class="lineno"> 4909</span>&#160; </div>
<div class="line"><a name="l04910"></a><span class="lineno"> 4910</span>&#160;  <span class="keyword">def </span>getvalue(self, name):</div>
<div class="line"><a name="l04911"></a><span class="lineno"> 4911</span>&#160;    <span class="stringliteral">&quot;Get the value of a parameter.&quot;</span></div>
<div class="line"><a name="l04912"></a><span class="lineno"> 4912</span>&#160;    <span class="keywordflow">return</span> self.getparam(name).value</div>
<div class="line"><a name="l04913"></a><span class="lineno"> 4913</span>&#160; </div>
<div class="line"><a name="l04914"></a><span class="lineno"> 4914</span>&#160;  <span class="keyword">def </span>getliteralvalue(self, name):</div>
<div class="line"><a name="l04915"></a><span class="lineno"> 4915</span>&#160;    <span class="stringliteral">&quot;Get the literal value of a parameter.&quot;</span></div>
<div class="line"><a name="l04916"></a><span class="lineno"> 4916</span>&#160;    param = self.getparam(name)</div>
<div class="line"><a name="l04917"></a><span class="lineno"> 4917</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> param <span class="keywordflow">or</span> <span class="keywordflow">not</span> param.literalvalue:</div>
<div class="line"><a name="l04918"></a><span class="lineno"> 4918</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04919"></a><span class="lineno"> 4919</span>&#160;    <span class="keywordflow">return</span> param.literalvalue</div>
<div class="line"><a name="l04920"></a><span class="lineno"> 4920</span>&#160; </div>
<div class="line"><a name="l04921"></a><span class="lineno"> 4921</span>&#160;<span class="keyword">class </span>HybridFunction(ParameterFunction):</div>
<div class="line"><a name="l04922"></a><span class="lineno"> 4922</span>&#160;  <span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l04923"></a><span class="lineno"> 4923</span>&#160;<span class="stringliteral">  A parameter function where the output is also defined using a template.</span></div>
<div class="line"><a name="l04924"></a><span class="lineno"> 4924</span>&#160;<span class="stringliteral">  The template can use a number of functions; each function has an associated</span></div>
<div class="line"><a name="l04925"></a><span class="lineno"> 4925</span>&#160;<span class="stringliteral">  tag.</span></div>
<div class="line"><a name="l04926"></a><span class="lineno"> 4926</span>&#160;<span class="stringliteral">  Example: [f0{$1},span class=&quot;fbox&quot;] defines a function f0 which corresponds</span></div>
<div class="line"><a name="l04927"></a><span class="lineno"> 4927</span>&#160;<span class="stringliteral">  to a span of class fbox, yielding &lt;span class=&quot;fbox&quot;&gt;$1&lt;/span&gt;.</span></div>
<div class="line"><a name="l04928"></a><span class="lineno"> 4928</span>&#160;<span class="stringliteral">  Literal parameters can be used in tags definitions:</span></div>
<div class="line"><a name="l04929"></a><span class="lineno"> 4929</span>&#160;<span class="stringliteral">    [f0{$1},span style=&quot;color: $p;&quot;]</span></div>
<div class="line"><a name="l04930"></a><span class="lineno"> 4930</span>&#160;<span class="stringliteral">  yields &lt;span style=&quot;color: $p;&quot;&gt;$1&lt;/span&gt;, where $p is a literal parameter.</span></div>
<div class="line"><a name="l04931"></a><span class="lineno"> 4931</span>&#160;<span class="stringliteral">  Sizes can be specified in hybridsizes, e.g. adding parameter sizes. By</span></div>
<div class="line"><a name="l04932"></a><span class="lineno"> 4932</span>&#160;<span class="stringliteral">  default the resulting size is the max of all arguments. Sizes are used</span></div>
<div class="line"><a name="l04933"></a><span class="lineno"> 4933</span>&#160;<span class="stringliteral">  to generate the right parameters.</span></div>
<div class="line"><a name="l04934"></a><span class="lineno"> 4934</span>&#160;<span class="stringliteral">  A function followed by a single / is output as a self-closing XHTML tag:</span></div>
<div class="line"><a name="l04935"></a><span class="lineno"> 4935</span>&#160;<span class="stringliteral">    [f0/,hr]</span></div>
<div class="line"><a name="l04936"></a><span class="lineno"> 4936</span>&#160;<span class="stringliteral">  will generate &lt;hr/&gt;.</span></div>
<div class="line"><a name="l04937"></a><span class="lineno"> 4937</span>&#160;<span class="stringliteral">  &quot;&quot;&quot;</span></div>
<div class="line"><a name="l04938"></a><span class="lineno"> 4938</span>&#160; </div>
<div class="line"><a name="l04939"></a><span class="lineno"> 4939</span>&#160;  commandmap = FormulaConfig.hybridfunctions</div>
<div class="line"><a name="l04940"></a><span class="lineno"> 4940</span>&#160; </div>
<div class="line"><a name="l04941"></a><span class="lineno"> 4941</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l04942"></a><span class="lineno"><a class="line" href="classmath2html_1_1HybridFunction.xhtml"> 4942</a></span>&#160;    <span class="stringliteral">&quot;Parse a function with [] and {} parameters&quot;</span></div>
<div class="line"><a name="l04943"></a><span class="lineno"> 4943</span>&#160;    readtemplate = self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#a9d62796c6ea7140baa01cb3635e7b62e">translated</a>[0]</div>
<div class="line"><a name="l04944"></a><span class="lineno"> 4944</span>&#160;    writetemplate = self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#a9d62796c6ea7140baa01cb3635e7b62e">translated</a>[1]</div>
<div class="line"><a name="l04945"></a><span class="lineno"> 4945</span>&#160;    self.<a class="code" href="classmath2html_1_1ParameterFunction.xhtml#a9ef52d1f35433d77d511c41ed93cc7e8">readparams</a>(readtemplate, pos)</div>
<div class="line"><a name="l04946"></a><span class="lineno"> 4946</span>&#160;    self.<a class="code" href="classmath2html_1_1Container.xhtml#aa6082c83a20a90e5a2ab9f216961972f">contents</a> = self.<a class="code" href="classmath2html_1_1HybridFunction.xhtml#a9b58629f6e82a261b7ef64c419e07389">writeparams</a>(writetemplate)</div>
<div class="line"><a name="l04947"></a><span class="lineno"> 4947</span>&#160;    self.<a class="code" href="classmath2html_1_1HybridFunction.xhtml#af5c8091903e24d636e66fe5ec691c569">computehybridsize</a>()</div>
<div class="line"><a name="l04948"></a><span class="lineno"> 4948</span>&#160; </div>
<div class="line"><a name="l04949"></a><span class="lineno"> 4949</span>&#160;  <span class="keyword">def </span>writeparams(self, writetemplate):</div>
<div class="line"><a name="l04950"></a><span class="lineno"> 4950</span>&#160;    <span class="stringliteral">&quot;Write all params according to the template&quot;</span></div>
<div class="line"><a name="l04951"></a><span class="lineno"> 4951</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1HybridFunction.xhtml#aeeea421fbd4fbd4654e0535123e3c8c1">writepos</a>(TextPosition(writetemplate))</div>
<div class="line"><a name="l04952"></a><span class="lineno"> 4952</span>&#160; </div>
<div class="line"><a name="l04953"></a><span class="lineno"> 4953</span>&#160;  <span class="keyword">def </span>writepos(self, pos):</div>
<div class="line"><a name="l04954"></a><span class="lineno"> 4954</span>&#160;    <span class="stringliteral">&quot;Write all params as read in the parse position.&quot;</span></div>
<div class="line"><a name="l04955"></a><span class="lineno"> 4955</span>&#160;    result = []</div>
<div class="line"><a name="l04956"></a><span class="lineno"> 4956</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> pos.finished():</div>
<div class="line"><a name="l04957"></a><span class="lineno"> 4957</span>&#160;      <span class="keywordflow">if</span> pos.checkskip(<span class="stringliteral">&#39;$&#39;</span>):</div>
<div class="line"><a name="l04958"></a><span class="lineno"> 4958</span>&#160;        param = self.<a class="code" href="classmath2html_1_1HybridFunction.xhtml#a22e10ee85e4b14c56340aef5174502be">writeparam</a>(pos)</div>
<div class="line"><a name="l04959"></a><span class="lineno"> 4959</span>&#160;        <span class="keywordflow">if</span> param:</div>
<div class="line"><a name="l04960"></a><span class="lineno"> 4960</span>&#160;          result.append(param)</div>
<div class="line"><a name="l04961"></a><span class="lineno"> 4961</span>&#160;      <span class="keywordflow">elif</span> pos.checkskip(<span class="stringliteral">&#39;f&#39;</span>):</div>
<div class="line"><a name="l04962"></a><span class="lineno"> 4962</span>&#160;        function = self.<a class="code" href="classmath2html_1_1HybridFunction.xhtml#a8d77133d5ac1cf6af6d9fc5397d6b7ef">writefunction</a>(pos)</div>
<div class="line"><a name="l04963"></a><span class="lineno"> 4963</span>&#160;        <span class="keywordflow">if</span> function:</div>
<div class="line"><a name="l04964"></a><span class="lineno"> 4964</span>&#160;          function.type = <span class="keywordtype">None</span></div>
<div class="line"><a name="l04965"></a><span class="lineno"> 4965</span>&#160;          result.append(function)</div>
<div class="line"><a name="l04966"></a><span class="lineno"> 4966</span>&#160;      <span class="keywordflow">elif</span> pos.checkskip(<span class="stringliteral">&#39;(&#39;</span>):</div>
<div class="line"><a name="l04967"></a><span class="lineno"> 4967</span>&#160;        result.append(self.<a class="code" href="classmath2html_1_1HybridFunction.xhtml#a7796427b59cd81e0fed4bf0ae52cd0b2">writebracket</a>(<span class="stringliteral">&#39;left&#39;</span>, <span class="stringliteral">&#39;(&#39;</span>))</div>
<div class="line"><a name="l04968"></a><span class="lineno"> 4968</span>&#160;      <span class="keywordflow">elif</span> pos.checkskip(<span class="stringliteral">&#39;)&#39;</span>):</div>
<div class="line"><a name="l04969"></a><span class="lineno"> 4969</span>&#160;        result.append(self.<a class="code" href="classmath2html_1_1HybridFunction.xhtml#a7796427b59cd81e0fed4bf0ae52cd0b2">writebracket</a>(<span class="stringliteral">&#39;right&#39;</span>, <span class="stringliteral">&#39;)&#39;</span>))</div>
<div class="line"><a name="l04970"></a><span class="lineno"> 4970</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l04971"></a><span class="lineno"> 4971</span>&#160;        result.append(FormulaConstant(pos.skipcurrent()))</div>
<div class="line"><a name="l04972"></a><span class="lineno"> 4972</span>&#160;    <span class="keywordflow">return</span> result</div>
<div class="line"><a name="l04973"></a><span class="lineno"> 4973</span>&#160; </div>
<div class="line"><a name="l04974"></a><span class="lineno"> 4974</span>&#160;  <span class="keyword">def </span>writeparam(self, pos):</div>
<div class="line"><a name="l04975"></a><span class="lineno"> 4975</span>&#160;    <span class="stringliteral">&quot;Write a single param of the form $0, $x...&quot;</span></div>
<div class="line"><a name="l04976"></a><span class="lineno"> 4976</span>&#160;    name = <span class="stringliteral">&#39;$&#39;</span> + pos.skipcurrent()</div>
<div class="line"><a name="l04977"></a><span class="lineno"> 4977</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> name <span class="keywordflow">in</span> self.<a class="code" href="classmath2html_1_1ParameterFunction.xhtml#a41000f175dc0115080e2a682cc06dbe9">params</a>:</div>
<div class="line"><a name="l04978"></a><span class="lineno"> 4978</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unknown parameter &#39;</span> + name)</div>
<div class="line"><a name="l04979"></a><span class="lineno"> 4979</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04980"></a><span class="lineno"> 4980</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.<a class="code" href="classmath2html_1_1ParameterFunction.xhtml#a41000f175dc0115080e2a682cc06dbe9">params</a>[name]:</div>
<div class="line"><a name="l04981"></a><span class="lineno"> 4981</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04982"></a><span class="lineno"> 4982</span>&#160;    <span class="keywordflow">if</span> pos.checkskip(<span class="stringliteral">&#39;.&#39;</span>):</div>
<div class="line"><a name="l04983"></a><span class="lineno"> 4983</span>&#160;      self.<a class="code" href="classmath2html_1_1ParameterFunction.xhtml#a41000f175dc0115080e2a682cc06dbe9">params</a>[name].value.type = pos.globalpha()</div>
<div class="line"><a name="l04984"></a><span class="lineno"> 4984</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1ParameterFunction.xhtml#a41000f175dc0115080e2a682cc06dbe9">params</a>[name].value</div>
<div class="line"><a name="l04985"></a><span class="lineno"> 4985</span>&#160; </div>
<div class="line"><a name="l04986"></a><span class="lineno"> 4986</span>&#160;  <span class="keyword">def </span>writefunction(self, pos):</div>
<div class="line"><a name="l04987"></a><span class="lineno"> 4987</span>&#160;    <span class="stringliteral">&quot;Write a single function f0,...,fn.&quot;</span></div>
<div class="line"><a name="l04988"></a><span class="lineno"> 4988</span>&#160;    tag = self.<a class="code" href="classmath2html_1_1HybridFunction.xhtml#a8b16e1638f65a0a214fdee0e8ee48276">readtag</a>(pos)</div>
<div class="line"><a name="l04989"></a><span class="lineno"> 4989</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> tag:</div>
<div class="line"><a name="l04990"></a><span class="lineno"> 4990</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04991"></a><span class="lineno"> 4991</span>&#160;    <span class="keywordflow">if</span> pos.checkskip(<span class="stringliteral">&#39;/&#39;</span>):</div>
<div class="line"><a name="l04992"></a><span class="lineno"> 4992</span>&#160;      <span class="comment"># self-closing XHTML tag, such as &lt;hr/&gt;</span></div>
<div class="line"><a name="l04993"></a><span class="lineno"> 4993</span>&#160;      <span class="keywordflow">return</span> TaggedBit().selfcomplete(tag)</div>
<div class="line"><a name="l04994"></a><span class="lineno"> 4994</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.checkskip(<span class="stringliteral">&#39;{&#39;</span>):</div>
<div class="line"><a name="l04995"></a><span class="lineno"> 4995</span>&#160;      Trace.error(<span class="stringliteral">&#39;Function should be defined in {}&#39;</span>)</div>
<div class="line"><a name="l04996"></a><span class="lineno"> 4996</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l04997"></a><span class="lineno"> 4997</span>&#160;    pos.pushending(<span class="stringliteral">&#39;}&#39;</span>)</div>
<div class="line"><a name="l04998"></a><span class="lineno"> 4998</span>&#160;    contents = self.<a class="code" href="classmath2html_1_1HybridFunction.xhtml#aeeea421fbd4fbd4654e0535123e3c8c1">writepos</a>(pos)</div>
<div class="line"><a name="l04999"></a><span class="lineno"> 4999</span>&#160;    pos.popending()</div>
<div class="line"><a name="l05000"></a><span class="lineno"> 5000</span>&#160;    <span class="keywordflow">if</span> len(contents) == 0:</div>
<div class="line"><a name="l05001"></a><span class="lineno"> 5001</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l05002"></a><span class="lineno"> 5002</span>&#160;    <span class="keywordflow">return</span> TaggedBit().complete(contents, tag)</div>
<div class="line"><a name="l05003"></a><span class="lineno"> 5003</span>&#160; </div>
<div class="line"><a name="l05004"></a><span class="lineno"> 5004</span>&#160;  <span class="keyword">def </span>readtag(self, pos):</div>
<div class="line"><a name="l05005"></a><span class="lineno"> 5005</span>&#160;    <span class="stringliteral">&quot;Get the tag corresponding to the given index. Does parameter substitution.&quot;</span></div>
<div class="line"><a name="l05006"></a><span class="lineno"> 5006</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.current().isdigit():</div>
<div class="line"><a name="l05007"></a><span class="lineno"> 5007</span>&#160;      Trace.error(<span class="stringliteral">&#39;Function should be f0,...,f9: f&#39;</span> + pos.current())</div>
<div class="line"><a name="l05008"></a><span class="lineno"> 5008</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l05009"></a><span class="lineno"> 5009</span>&#160;    index = int(pos.skipcurrent())</div>
<div class="line"><a name="l05010"></a><span class="lineno"> 5010</span>&#160;    <span class="keywordflow">if</span> 2 + index &gt; len(self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#a9d62796c6ea7140baa01cb3635e7b62e">translated</a>):</div>
<div class="line"><a name="l05011"></a><span class="lineno"> 5011</span>&#160;      Trace.error(<span class="stringliteral">&#39;Function f&#39;</span> + unicode(index) + <span class="stringliteral">&#39; is not defined&#39;</span>)</div>
<div class="line"><a name="l05012"></a><span class="lineno"> 5012</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l05013"></a><span class="lineno"> 5013</span>&#160;    tag = self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#a9d62796c6ea7140baa01cb3635e7b62e">translated</a>[2 + index]</div>
<div class="line"><a name="l05014"></a><span class="lineno"> 5014</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> <span class="stringliteral">&#39;$&#39;</span> <span class="keywordflow">in</span> tag:</div>
<div class="line"><a name="l05015"></a><span class="lineno"> 5015</span>&#160;      <span class="keywordflow">return</span> tag</div>
<div class="line"><a name="l05016"></a><span class="lineno"> 5016</span>&#160;    <span class="keywordflow">for</span> variable <span class="keywordflow">in</span> self.<a class="code" href="classmath2html_1_1ParameterFunction.xhtml#a41000f175dc0115080e2a682cc06dbe9">params</a>:</div>
<div class="line"><a name="l05017"></a><span class="lineno"> 5017</span>&#160;      <span class="keywordflow">if</span> variable <span class="keywordflow">in</span> tag:</div>
<div class="line"><a name="l05018"></a><span class="lineno"> 5018</span>&#160;        param = self.<a class="code" href="classmath2html_1_1ParameterFunction.xhtml#a41000f175dc0115080e2a682cc06dbe9">params</a>[variable]</div>
<div class="line"><a name="l05019"></a><span class="lineno"> 5019</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> param.literal:</div>
<div class="line"><a name="l05020"></a><span class="lineno"> 5020</span>&#160;          Trace.error(<span class="stringliteral">&#39;Parameters in tag &#39;</span> + tag + <span class="stringliteral">&#39; should be literal: {&#39;</span> + variable + <span class="stringliteral">&#39;!}&#39;</span>)</div>
<div class="line"><a name="l05021"></a><span class="lineno"> 5021</span>&#160;          <span class="keywordflow">continue</span></div>
<div class="line"><a name="l05022"></a><span class="lineno"> 5022</span>&#160;        <span class="keywordflow">if</span> param.literalvalue:</div>
<div class="line"><a name="l05023"></a><span class="lineno"> 5023</span>&#160;          value = param.literalvalue</div>
<div class="line"><a name="l05024"></a><span class="lineno"> 5024</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l05025"></a><span class="lineno"> 5025</span>&#160;          value = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l05026"></a><span class="lineno"> 5026</span>&#160;        tag = tag.replace(variable, value)</div>
<div class="line"><a name="l05027"></a><span class="lineno"> 5027</span>&#160;    <span class="keywordflow">return</span> tag</div>
<div class="line"><a name="l05028"></a><span class="lineno"> 5028</span>&#160; </div>
<div class="line"><a name="l05029"></a><span class="lineno"> 5029</span>&#160;  <span class="keyword">def </span>writebracket(self, direction, character):</div>
<div class="line"><a name="l05030"></a><span class="lineno"> 5030</span>&#160;    <span class="stringliteral">&quot;Return a new bracket looking at the given direction.&quot;</span></div>
<div class="line"><a name="l05031"></a><span class="lineno"> 5031</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.create(BracketCommand).create(direction, character)</div>
<div class="line"><a name="l05032"></a><span class="lineno"> 5032</span>&#160;  </div>
<div class="line"><a name="l05033"></a><span class="lineno"> 5033</span>&#160;  <span class="keyword">def </span>computehybridsize(self):</div>
<div class="line"><a name="l05034"></a><span class="lineno"> 5034</span>&#160;    <span class="stringliteral">&quot;Compute the size of the hybrid function.&quot;</span></div>
<div class="line"><a name="l05035"></a><span class="lineno"> 5035</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#a9e0992eae3950adccaf4847fbff4231d">command</a> <span class="keywordflow">in</span> HybridSize.configsizes:</div>
<div class="line"><a name="l05036"></a><span class="lineno"> 5036</span>&#160;      self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#ab2ab402cdd95a2a6261feaf87dc3a69a">computesize</a>()</div>
<div class="line"><a name="l05037"></a><span class="lineno"> 5037</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l05038"></a><span class="lineno"> 5038</span>&#160;    self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a439227feff9d7f55384e8780cfc2eb82">size</a> = HybridSize().getsize(self)</div>
<div class="line"><a name="l05039"></a><span class="lineno"> 5039</span>&#160;    <span class="comment"># set the size in all elements at first level</span></div>
<div class="line"><a name="l05040"></a><span class="lineno"> 5040</span>&#160;    <span class="keywordflow">for</span> element <span class="keywordflow">in</span> self.<a class="code" href="classmath2html_1_1Container.xhtml#aa6082c83a20a90e5a2ab9f216961972f">contents</a>:</div>
<div class="line"><a name="l05041"></a><span class="lineno"> 5041</span>&#160;      element.size = self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a439227feff9d7f55384e8780cfc2eb82">size</a></div>
<div class="line"><a name="l05042"></a><span class="lineno"> 5042</span>&#160; </div>
<div class="line"><a name="l05043"></a><span class="lineno"> 5043</span>&#160;<span class="keyword">class </span>HybridSize(object):</div>
<div class="line"><a name="l05044"></a><span class="lineno"> 5044</span>&#160;  <span class="stringliteral">&quot;The size associated with a hybrid function.&quot;</span></div>
<div class="line"><a name="l05045"></a><span class="lineno"> 5045</span>&#160; </div>
<div class="line"><a name="l05046"></a><span class="lineno"> 5046</span>&#160;  configsizes = FormulaConfig.hybridsizes</div>
<div class="line"><a name="l05047"></a><span class="lineno"> 5047</span>&#160; </div>
<div class="line"><a name="l05048"></a><span class="lineno"> 5048</span>&#160;  <span class="keyword">def </span>getsize(self, function):</div>
<div class="line"><a name="l05049"></a><span class="lineno"> 5049</span>&#160;    <span class="stringliteral">&quot;Read the size for a function and parse it.&quot;</span></div>
<div class="line"><a name="l05050"></a><span class="lineno"> 5050</span>&#160;    sizestring = self.configsizes[function.command]</div>
<div class="line"><a name="l05051"></a><span class="lineno"> 5051</span>&#160;    <span class="keywordflow">for</span> name <span class="keywordflow">in</span> function.params:</div>
<div class="line"><a name="l05052"></a><span class="lineno"> 5052</span>&#160;      <span class="keywordflow">if</span> name <span class="keywordflow">in</span> sizestring:</div>
<div class="line"><a name="l05053"></a><span class="lineno"> 5053</span>&#160;        size = function.params[name].value.computesize()</div>
<div class="line"><a name="l05054"></a><span class="lineno"> 5054</span>&#160;        sizestring = sizestring.replace(name, unicode(size))</div>
<div class="line"><a name="l05055"></a><span class="lineno"> 5055</span>&#160;    <span class="keywordflow">if</span> <span class="stringliteral">&#39;$&#39;</span> <span class="keywordflow">in</span> sizestring:</div>
<div class="line"><a name="l05056"></a><span class="lineno"> 5056</span>&#160;      Trace.error(<span class="stringliteral">&#39;Unconverted variable in hybrid size: &#39;</span> + sizestring)</div>
<div class="line"><a name="l05057"></a><span class="lineno"> 5057</span>&#160;      <span class="keywordflow">return</span> 1</div>
<div class="line"><a name="l05058"></a><span class="lineno"> 5058</span>&#160;    <span class="keywordflow">return</span> eval(sizestring)</div>
<div class="line"><a name="l05059"></a><span class="lineno"> 5059</span>&#160; </div>
<div class="line"><a name="l05060"></a><span class="lineno"> 5060</span>&#160; </div>
<div class="line"><a name="l05061"></a><span class="lineno"> 5061</span>&#160;FormulaCommand.types += [HybridFunction]</div>
<div class="line"><a name="l05062"></a><span class="lineno"> 5062</span>&#160; </div>
<div class="line"><a name="l05063"></a><span class="lineno"> 5063</span>&#160; </div>
<div class="line"><a name="l05064"></a><span class="lineno"> 5064</span>&#160; </div>
<div class="line"><a name="l05065"></a><span class="lineno"> 5065</span>&#160; </div>
<div class="line"><a name="l05066"></a><span class="lineno"> 5066</span>&#160; </div>
<div class="line"><a name="l05067"></a><span class="lineno"> 5067</span>&#160; </div>
<div class="line"><a name="l05068"></a><span class="lineno"> 5068</span>&#160; </div>
<div class="line"><a name="l05069"></a><span class="lineno"> 5069</span>&#160; </div>
<div class="line"><a name="l05070"></a><span class="lineno"> 5070</span>&#160; </div>
<div class="line"><a name="l05071"></a><span class="lineno"> 5071</span>&#160;<span class="keyword">class </span>HeaderParser(Parser):</div>
<div class="line"><a name="l05072"></a><span class="lineno"> 5072</span>&#160;  <span class="stringliteral">&quot;Parses the LyX header&quot;</span></div>
<div class="line"><a name="l05073"></a><span class="lineno"> 5073</span>&#160; </div>
<div class="line"><a name="l05074"></a><span class="lineno"> 5074</span>&#160;  <span class="keyword">def </span>parse(self, reader):</div>
<div class="line"><a name="l05075"></a><span class="lineno"> 5075</span>&#160;    <span class="stringliteral">&quot;Parse header parameters into a dictionary, return the preamble.&quot;</span></div>
<div class="line"><a name="l05076"></a><span class="lineno"> 5076</span>&#160;    contents = []</div>
<div class="line"><a name="l05077"></a><span class="lineno"> 5077</span>&#160;    self.parseending(reader, <span class="keyword">lambda</span>: self.parseline(reader, contents))</div>
<div class="line"><a name="l05078"></a><span class="lineno"> 5078</span>&#160;    <span class="comment"># skip last line</span></div>
<div class="line"><a name="l05079"></a><span class="lineno"> 5079</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l05080"></a><span class="lineno"> 5080</span>&#160;    <span class="keywordflow">return</span> contents</div>
<div class="line"><a name="l05081"></a><span class="lineno"> 5081</span>&#160; </div>
<div class="line"><a name="l05082"></a><span class="lineno"> 5082</span>&#160;  <span class="keyword">def </span>parseline(self, reader, contents):</div>
<div class="line"><a name="l05083"></a><span class="lineno"> 5083</span>&#160;    <span class="stringliteral">&quot;Parse a single line as a parameter or as a start&quot;</span></div>
<div class="line"><a name="l05084"></a><span class="lineno"> 5084</span>&#160;    line = reader.currentline()</div>
<div class="line"><a name="l05085"></a><span class="lineno"> 5085</span>&#160;    <span class="keywordflow">if</span> line.startswith(HeaderConfig.parameters[<span class="stringliteral">&#39;branch&#39;</span>]):</div>
<div class="line"><a name="l05086"></a><span class="lineno"> 5086</span>&#160;      self.parsebranch(reader)</div>
<div class="line"><a name="l05087"></a><span class="lineno"> 5087</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l05088"></a><span class="lineno"> 5088</span>&#160;    <span class="keywordflow">elif</span> line.startswith(HeaderConfig.parameters[<span class="stringliteral">&#39;lstset&#39;</span>]):</div>
<div class="line"><a name="l05089"></a><span class="lineno"> 5089</span>&#160;      LstParser().parselstset(reader)</div>
<div class="line"><a name="l05090"></a><span class="lineno"> 5090</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l05091"></a><span class="lineno"> 5091</span>&#160;    <span class="keywordflow">elif</span> line.startswith(HeaderConfig.parameters[<span class="stringliteral">&#39;beginpreamble&#39;</span>]):</div>
<div class="line"><a name="l05092"></a><span class="lineno"> 5092</span>&#160;      contents.append(self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.createcontainer(reader))</div>
<div class="line"><a name="l05093"></a><span class="lineno"> 5093</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l05094"></a><span class="lineno"> 5094</span>&#160;    <span class="comment"># no match</span></div>
<div class="line"><a name="l05095"></a><span class="lineno"> 5095</span>&#160;    self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#af6cfea16003317fa1156cc3d85d74cf1">parseparameter</a>(reader)</div>
<div class="line"><a name="l05096"></a><span class="lineno"> 5096</span>&#160; </div>
<div class="line"><a name="l05097"></a><span class="lineno"> 5097</span>&#160;  <span class="keyword">def </span>parsebranch(self, reader):</div>
<div class="line"><a name="l05098"></a><span class="lineno"> 5098</span>&#160;    <span class="stringliteral">&quot;Parse all branch definitions.&quot;</span></div>
<div class="line"><a name="l05099"></a><span class="lineno"> 5099</span>&#160;    branch = reader.currentline().split()[1]</div>
<div class="line"><a name="l05100"></a><span class="lineno"> 5100</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l05101"></a><span class="lineno"> 5101</span>&#160;    subparser = HeaderParser().complete(HeaderConfig.parameters[<span class="stringliteral">&#39;endbranch&#39;</span>])</div>
<div class="line"><a name="l05102"></a><span class="lineno"> 5102</span>&#160;    subparser.parse(reader)</div>
<div class="line"><a name="l05103"></a><span class="lineno"> 5103</span>&#160;    options = BranchOptions(branch)</div>
<div class="line"><a name="l05104"></a><span class="lineno"> 5104</span>&#160;    <span class="keywordflow">for</span> key <span class="keywordflow">in</span> subparser.parameters:</div>
<div class="line"><a name="l05105"></a><span class="lineno"> 5105</span>&#160;      options.set(key, subparser.parameters[key])</div>
<div class="line"><a name="l05106"></a><span class="lineno"> 5106</span>&#160;    Options.branches[branch] = options</div>
<div class="line"><a name="l05107"></a><span class="lineno"> 5107</span>&#160; </div>
<div class="line"><a name="l05108"></a><span class="lineno"> 5108</span>&#160;  <span class="keyword">def </span>complete(self, ending):</div>
<div class="line"><a name="l05109"></a><span class="lineno"> 5109</span>&#160;    <span class="stringliteral">&quot;Complete the parser with the given ending.&quot;</span></div>
<div class="line"><a name="l05110"></a><span class="lineno"> 5110</span>&#160;    self.ending = ending</div>
<div class="line"><a name="l05111"></a><span class="lineno"> 5111</span>&#160;    <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l05112"></a><span class="lineno"> 5112</span>&#160; </div>
<div class="line"><a name="l05113"></a><span class="lineno"> 5113</span>&#160;<span class="keyword">class </span>PreambleParser(Parser):</div>
<div class="line"><a name="l05114"></a><span class="lineno"> 5114</span>&#160;  <span class="stringliteral">&quot;A parser for the LyX preamble.&quot;</span></div>
<div class="line"><a name="l05115"></a><span class="lineno"> 5115</span>&#160; </div>
<div class="line"><a name="l05116"></a><span class="lineno"> 5116</span>&#160;  preamble = []</div>
<div class="line"><a name="l05117"></a><span class="lineno"> 5117</span>&#160; </div>
<div class="line"><a name="l05118"></a><span class="lineno"> 5118</span>&#160;  <span class="keyword">def </span>parse(self, reader):</div>
<div class="line"><a name="l05119"></a><span class="lineno"> 5119</span>&#160;    <span class="stringliteral">&quot;Parse the full preamble with all statements.&quot;</span></div>
<div class="line"><a name="l05120"></a><span class="lineno"> 5120</span>&#160;    self.ending = HeaderConfig.parameters[<span class="stringliteral">&#39;endpreamble&#39;</span>]</div>
<div class="line"><a name="l05121"></a><span class="lineno"> 5121</span>&#160;    self.parseending(reader, <span class="keyword">lambda</span>: self.parsepreambleline(reader))</div>
<div class="line"><a name="l05122"></a><span class="lineno"> 5122</span>&#160;    <span class="keywordflow">return</span> []</div>
<div class="line"><a name="l05123"></a><span class="lineno"> 5123</span>&#160; </div>
<div class="line"><a name="l05124"></a><span class="lineno"> 5124</span>&#160;  <span class="keyword">def </span>parsepreambleline(self, reader):</div>
<div class="line"><a name="l05125"></a><span class="lineno"> 5125</span>&#160;    <span class="stringliteral">&quot;Parse a single preamble line.&quot;</span></div>
<div class="line"><a name="l05126"></a><span class="lineno"> 5126</span>&#160;    PreambleParser.preamble.append(reader.currentline())</div>
<div class="line"><a name="l05127"></a><span class="lineno"> 5127</span>&#160;    reader.nextline()</div>
<div class="line"><a name="l05128"></a><span class="lineno"> 5128</span>&#160; </div>
<div class="line"><a name="l05129"></a><span class="lineno"> 5129</span>&#160;<span class="keyword">class </span>LstParser(object):</div>
<div class="line"><a name="l05130"></a><span class="lineno"> 5130</span>&#160;  <span class="stringliteral">&quot;Parse global and local lstparams.&quot;</span></div>
<div class="line"><a name="l05131"></a><span class="lineno"> 5131</span>&#160; </div>
<div class="line"><a name="l05132"></a><span class="lineno"> 5132</span>&#160;  globalparams = dict()</div>
<div class="line"><a name="l05133"></a><span class="lineno"> 5133</span>&#160; </div>
<div class="line"><a name="l05134"></a><span class="lineno"> 5134</span>&#160;  <span class="keyword">def </span>parselstset(self, reader):</div>
<div class="line"><a name="l05135"></a><span class="lineno"> 5135</span>&#160;    <span class="stringliteral">&quot;Parse a declaration of lstparams in lstset.&quot;</span></div>
<div class="line"><a name="l05136"></a><span class="lineno"> 5136</span>&#160;    paramtext = self.extractlstset(reader)</div>
<div class="line"><a name="l05137"></a><span class="lineno"> 5137</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> <span class="stringliteral">&#39;{&#39;</span> <span class="keywordflow">in</span> paramtext:</div>
<div class="line"><a name="l05138"></a><span class="lineno"> 5138</span>&#160;      Trace.error(<span class="stringliteral">&#39;Missing opening bracket in lstset: &#39;</span> + paramtext)</div>
<div class="line"><a name="l05139"></a><span class="lineno"> 5139</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l05140"></a><span class="lineno"> 5140</span>&#160;    lefttext = paramtext.split(<span class="stringliteral">&#39;{&#39;</span>)[1]</div>
<div class="line"><a name="l05141"></a><span class="lineno"> 5141</span>&#160;    croppedtext = lefttext[:-1]</div>
<div class="line"><a name="l05142"></a><span class="lineno"> 5142</span>&#160;    LstParser.globalparams = self.parselstparams(croppedtext)</div>
<div class="line"><a name="l05143"></a><span class="lineno"> 5143</span>&#160; </div>
<div class="line"><a name="l05144"></a><span class="lineno"> 5144</span>&#160;  <span class="keyword">def </span>extractlstset(self, reader):</div>
<div class="line"><a name="l05145"></a><span class="lineno"> 5145</span>&#160;    <span class="stringliteral">&quot;Extract the global lstset parameters.&quot;</span></div>
<div class="line"><a name="l05146"></a><span class="lineno"> 5146</span>&#160;    paramtext = <span class="stringliteral">&#39;&#39;</span></div>
<div class="line"><a name="l05147"></a><span class="lineno"> 5147</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> reader.finished():</div>
<div class="line"><a name="l05148"></a><span class="lineno"> 5148</span>&#160;      paramtext += reader.currentline()</div>
<div class="line"><a name="l05149"></a><span class="lineno"> 5149</span>&#160;      reader.nextline()</div>
<div class="line"><a name="l05150"></a><span class="lineno"> 5150</span>&#160;      <span class="keywordflow">if</span> paramtext.endswith(<span class="stringliteral">&#39;}&#39;</span>):</div>
<div class="line"><a name="l05151"></a><span class="lineno"> 5151</span>&#160;        <span class="keywordflow">return</span> paramtext</div>
<div class="line"><a name="l05152"></a><span class="lineno"> 5152</span>&#160;    Trace.error(<span class="stringliteral">&#39;Could not find end of \\lstset settings; aborting&#39;</span>)</div>
<div class="line"><a name="l05153"></a><span class="lineno"> 5153</span>&#160; </div>
<div class="line"><a name="l05154"></a><span class="lineno"> 5154</span>&#160;  <span class="keyword">def </span>parsecontainer(self, container):</div>
<div class="line"><a name="l05155"></a><span class="lineno"> 5155</span>&#160;    <span class="stringliteral">&quot;Parse some lstparams from elyxer.a container.&quot;</span></div>
<div class="line"><a name="l05156"></a><span class="lineno"> 5156</span>&#160;    container.lstparams = LstParser.globalparams.copy()</div>
<div class="line"><a name="l05157"></a><span class="lineno"> 5157</span>&#160;    paramlist = container.getparameterlist(<span class="stringliteral">&#39;lstparams&#39;</span>)</div>
<div class="line"><a name="l05158"></a><span class="lineno"> 5158</span>&#160;    container.lstparams.update(self.parselstparams(paramlist))</div>
<div class="line"><a name="l05159"></a><span class="lineno"> 5159</span>&#160; </div>
<div class="line"><a name="l05160"></a><span class="lineno"> 5160</span>&#160;  <span class="keyword">def </span>parselstparams(self, paramlist):</div>
<div class="line"><a name="l05161"></a><span class="lineno"> 5161</span>&#160;    <span class="stringliteral">&quot;Process a number of lstparams from elyxer.a list.&quot;</span></div>
<div class="line"><a name="l05162"></a><span class="lineno"> 5162</span>&#160;    paramdict = dict()</div>
<div class="line"><a name="l05163"></a><span class="lineno"> 5163</span>&#160;    <span class="keywordflow">for</span> param <span class="keywordflow">in</span> paramlist:</div>
<div class="line"><a name="l05164"></a><span class="lineno"> 5164</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> <span class="stringliteral">&#39;=&#39;</span> <span class="keywordflow">in</span> param:</div>
<div class="line"><a name="l05165"></a><span class="lineno"> 5165</span>&#160;        <span class="keywordflow">if</span> len(param.strip()) &gt; 0:</div>
<div class="line"><a name="l05166"></a><span class="lineno"> 5166</span>&#160;          Trace.error(<span class="stringliteral">&#39;Invalid listing parameter &#39;</span> + param)</div>
<div class="line"><a name="l05167"></a><span class="lineno"> 5167</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l05168"></a><span class="lineno"> 5168</span>&#160;        key, value = param.split(<span class="stringliteral">&#39;=&#39;</span>, 1)</div>
<div class="line"><a name="l05169"></a><span class="lineno"> 5169</span>&#160;        paramdict[key] = value</div>
<div class="line"><a name="l05170"></a><span class="lineno"> 5170</span>&#160;    <span class="keywordflow">return</span> paramdict</div>
<div class="line"><a name="l05171"></a><span class="lineno"> 5171</span>&#160; </div>
<div class="line"><a name="l05172"></a><span class="lineno"> 5172</span>&#160; </div>
<div class="line"><a name="l05173"></a><span class="lineno"> 5173</span>&#160; </div>
<div class="line"><a name="l05174"></a><span class="lineno"> 5174</span>&#160; </div>
<div class="line"><a name="l05175"></a><span class="lineno"> 5175</span>&#160;<span class="keyword">class </span>MacroDefinition(CommandBit):</div>
<div class="line"><a name="l05176"></a><span class="lineno"> 5176</span>&#160;  <span class="stringliteral">&quot;A function that defines a new command (a macro).&quot;</span></div>
<div class="line"><a name="l05177"></a><span class="lineno"> 5177</span>&#160; </div>
<div class="line"><a name="l05178"></a><span class="lineno"> 5178</span>&#160;  macros = dict()</div>
<div class="line"><a name="l05179"></a><span class="lineno"> 5179</span>&#160; </div>
<div class="line"><a name="l05180"></a><span class="lineno"> 5180</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l05181"></a><span class="lineno"> 5181</span>&#160;    <span class="stringliteral">&quot;Parse the function that defines the macro.&quot;</span></div>
<div class="line"><a name="l05182"></a><span class="lineno"> 5182</span>&#160;    self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#ad288825273ed7192429ab0474fb2d4a0">output</a> = EmptyOutput()</div>
<div class="line"><a name="l05183"></a><span class="lineno"> 5183</span>&#160;    self.parameternumber = 0</div>
<div class="line"><a name="l05184"></a><span class="lineno"> 5184</span>&#160;    self.defaults = []</div>
<div class="line"><a name="l05185"></a><span class="lineno"> 5185</span>&#160;    self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.defining = <span class="keyword">True</span></div>
<div class="line"><a name="l05186"></a><span class="lineno"> 5186</span>&#160;    self.parseparameters(pos)</div>
<div class="line"><a name="l05187"></a><span class="lineno"> 5187</span>&#160;    self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.defining = <span class="keyword">False</span></div>
<div class="line"><a name="l05188"></a><span class="lineno"> 5188</span>&#160;    Trace.debug(<span class="stringliteral">&#39;New command &#39;</span> + self.newcommand + <span class="stringliteral">&#39; (&#39;</span> + \</div>
<div class="line"><a name="l05189"></a><span class="lineno"> 5189</span>&#160;        unicode(self.parameternumber) + <span class="stringliteral">&#39; parameters)&#39;</span>)</div>
<div class="line"><a name="l05190"></a><span class="lineno"> 5190</span>&#160;    self.macros[self.newcommand] = self</div>
<div class="line"><a name="l05191"></a><span class="lineno"> 5191</span>&#160; </div>
<div class="line"><a name="l05192"></a><span class="lineno"> 5192</span>&#160;  <span class="keyword">def </span>parseparameters(self, pos):</div>
<div class="line"><a name="l05193"></a><span class="lineno"> 5193</span>&#160;    <span class="stringliteral">&quot;Parse all optional parameters (number of parameters, default values)&quot;</span></div>
<div class="line"><a name="l05194"></a><span class="lineno"> 5194</span>&#160;    <span class="stringliteral">&quot;and the mandatory definition.&quot;</span></div>
<div class="line"><a name="l05195"></a><span class="lineno"> 5195</span>&#160;    self.newcommand = self.parsenewcommand(pos)</div>
<div class="line"><a name="l05196"></a><span class="lineno"> 5196</span>&#160;    <span class="comment"># parse number of parameters</span></div>
<div class="line"><a name="l05197"></a><span class="lineno"> 5197</span>&#160;    literal = self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#a01c1f6ef852aafbfb02168294490048f">parsesquareliteral</a>(pos)</div>
<div class="line"><a name="l05198"></a><span class="lineno"> 5198</span>&#160;    <span class="keywordflow">if</span> literal:</div>
<div class="line"><a name="l05199"></a><span class="lineno"> 5199</span>&#160;      self.parameternumber = int(literal)</div>
<div class="line"><a name="l05200"></a><span class="lineno"> 5200</span>&#160;    <span class="comment"># parse all default values</span></div>
<div class="line"><a name="l05201"></a><span class="lineno"> 5201</span>&#160;    bracket = self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#ad0b94377d627571635db63890678c100">parsesquare</a>(pos)</div>
<div class="line"><a name="l05202"></a><span class="lineno"> 5202</span>&#160;    <span class="keywordflow">while</span> bracket:</div>
<div class="line"><a name="l05203"></a><span class="lineno"> 5203</span>&#160;      self.defaults.append(bracket)</div>
<div class="line"><a name="l05204"></a><span class="lineno"> 5204</span>&#160;      bracket = self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#ad0b94377d627571635db63890678c100">parsesquare</a>(pos)</div>
<div class="line"><a name="l05205"></a><span class="lineno"> 5205</span>&#160;    <span class="comment"># parse mandatory definition</span></div>
<div class="line"><a name="l05206"></a><span class="lineno"> 5206</span>&#160;    self.definition = self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#af6cfea16003317fa1156cc3d85d74cf1">parseparameter</a>(pos)</div>
<div class="line"><a name="l05207"></a><span class="lineno"> 5207</span>&#160; </div>
<div class="line"><a name="l05208"></a><span class="lineno"> 5208</span>&#160;  <span class="keyword">def </span>parsenewcommand(self, pos):</div>
<div class="line"><a name="l05209"></a><span class="lineno"> 5209</span>&#160;    <span class="stringliteral">&quot;Parse the name of the new command.&quot;</span></div>
<div class="line"><a name="l05210"></a><span class="lineno"> 5210</span>&#160;    self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.clearskipped(pos)</div>
<div class="line"><a name="l05211"></a><span class="lineno"> 5211</span>&#160;    <span class="keywordflow">if</span> self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.detecttype(Bracket, pos):</div>
<div class="line"><a name="l05212"></a><span class="lineno"> 5212</span>&#160;      <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#af4f8291c9c9c4af6f76043cf736af9f1">parseliteral</a>(pos)</div>
<div class="line"><a name="l05213"></a><span class="lineno"> 5213</span>&#160;    <span class="keywordflow">if</span> self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.detecttype(FormulaCommand, pos):</div>
<div class="line"><a name="l05214"></a><span class="lineno"> 5214</span>&#160;      <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.create(FormulaCommand).extractcommand(pos)</div>
<div class="line"><a name="l05215"></a><span class="lineno"> 5215</span>&#160;    Trace.error(<span class="stringliteral">&#39;Unknown formula bit in defining function at &#39;</span> + pos.identifier())</div>
<div class="line"><a name="l05216"></a><span class="lineno"> 5216</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;unknown&#39;</span></div>
<div class="line"><a name="l05217"></a><span class="lineno"> 5217</span>&#160; </div>
<div class="line"><a name="l05218"></a><span class="lineno"> 5218</span>&#160;  <span class="keyword">def </span>instantiate(self):</div>
<div class="line"><a name="l05219"></a><span class="lineno"> 5219</span>&#160;    <span class="stringliteral">&quot;Return an instance of the macro.&quot;</span></div>
<div class="line"><a name="l05220"></a><span class="lineno"> 5220</span>&#160;    <span class="keywordflow">return</span> self.definition.clone()</div>
<div class="line"><a name="l05221"></a><span class="lineno"> 5221</span>&#160; </div>
<div class="line"><a name="l05222"></a><span class="lineno"> 5222</span>&#160;<span class="keyword">class </span>MacroParameter(FormulaBit):</div>
<div class="line"><a name="l05223"></a><span class="lineno"> 5223</span>&#160;  <span class="stringliteral">&quot;A parameter from elyxer.a macro.&quot;</span></div>
<div class="line"><a name="l05224"></a><span class="lineno"> 5224</span>&#160; </div>
<div class="line"><a name="l05225"></a><span class="lineno"> 5225</span>&#160;  <span class="keyword">def </span>detect(self, pos):</div>
<div class="line"><a name="l05226"></a><span class="lineno"> 5226</span>&#160;    <span class="stringliteral">&quot;Find a macro parameter: #n.&quot;</span></div>
<div class="line"><a name="l05227"></a><span class="lineno"> 5227</span>&#160;    <span class="keywordflow">return</span> pos.checkfor(<span class="stringliteral">&#39;#&#39;</span>)</div>
<div class="line"><a name="l05228"></a><span class="lineno"> 5228</span>&#160; </div>
<div class="line"><a name="l05229"></a><span class="lineno"> 5229</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l05230"></a><span class="lineno"> 5230</span>&#160;    <span class="stringliteral">&quot;Parse the parameter: #n.&quot;</span></div>
<div class="line"><a name="l05231"></a><span class="lineno"> 5231</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> pos.checkskip(<span class="stringliteral">&#39;#&#39;</span>):</div>
<div class="line"><a name="l05232"></a><span class="lineno"> 5232</span>&#160;      Trace.error(<span class="stringliteral">&#39;Missing parameter start #.&#39;</span>)</div>
<div class="line"><a name="l05233"></a><span class="lineno"> 5233</span>&#160;      <span class="keywordflow">return</span></div>
<div class="line"><a name="l05234"></a><span class="lineno"> 5234</span>&#160;    self.number = int(pos.skipcurrent())</div>
<div class="line"><a name="l05235"></a><span class="lineno"> 5235</span>&#160;    self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#ac853827d77f6773a3750bf41e71d08c4">original</a> = <span class="stringliteral">&#39;#&#39;</span> + unicode(self.number)</div>
<div class="line"><a name="l05236"></a><span class="lineno"> 5236</span>&#160;    self.<a class="code" href="classmath2html_1_1Container.xhtml#aa6082c83a20a90e5a2ab9f216961972f">contents</a> = [TaggedBit().constant(<span class="stringliteral">&#39;#&#39;</span> + unicode(self.number), <span class="stringliteral">&#39;span class=&quot;unknown&quot;&#39;</span>)]</div>
<div class="line"><a name="l05237"></a><span class="lineno"> 5237</span>&#160; </div>
<div class="line"><a name="l05238"></a><span class="lineno"> 5238</span>&#160;<span class="keyword">class </span>MacroFunction(CommandBit):</div>
<div class="line"><a name="l05239"></a><span class="lineno"> 5239</span>&#160;  <span class="stringliteral">&quot;A function that was defined using a macro.&quot;</span></div>
<div class="line"><a name="l05240"></a><span class="lineno"> 5240</span>&#160; </div>
<div class="line"><a name="l05241"></a><span class="lineno"> 5241</span>&#160;  commandmap = MacroDefinition.macros</div>
<div class="line"><a name="l05242"></a><span class="lineno"> 5242</span>&#160; </div>
<div class="line"><a name="l05243"></a><span class="lineno"> 5243</span>&#160;  <span class="keyword">def </span>parsebit(self, pos):</div>
<div class="line"><a name="l05244"></a><span class="lineno"> 5244</span>&#160;    <span class="stringliteral">&quot;Parse a number of input parameters.&quot;</span></div>
<div class="line"><a name="l05245"></a><span class="lineno"> 5245</span>&#160;    self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#ad288825273ed7192429ab0474fb2d4a0">output</a> = FilteredOutput()</div>
<div class="line"><a name="l05246"></a><span class="lineno"> 5246</span>&#160;    self.values = []</div>
<div class="line"><a name="l05247"></a><span class="lineno"> 5247</span>&#160;    macro = self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#a9d62796c6ea7140baa01cb3635e7b62e">translated</a></div>
<div class="line"><a name="l05248"></a><span class="lineno"> 5248</span>&#160;    self.parseparameters(pos, macro)</div>
<div class="line"><a name="l05249"></a><span class="lineno"> 5249</span>&#160;    self.completemacro(macro)</div>
<div class="line"><a name="l05250"></a><span class="lineno"> 5250</span>&#160; </div>
<div class="line"><a name="l05251"></a><span class="lineno"> 5251</span>&#160;  <span class="keyword">def </span>parseparameters(self, pos, macro):</div>
<div class="line"><a name="l05252"></a><span class="lineno"> 5252</span>&#160;    <span class="stringliteral">&quot;Parse as many parameters as are needed.&quot;</span></div>
<div class="line"><a name="l05253"></a><span class="lineno"> 5253</span>&#160;    self.parseoptional(pos, list(macro.defaults))</div>
<div class="line"><a name="l05254"></a><span class="lineno"> 5254</span>&#160;    self.parsemandatory(pos, macro.parameternumber - len(macro.defaults))</div>
<div class="line"><a name="l05255"></a><span class="lineno"> 5255</span>&#160;    <span class="keywordflow">if</span> len(self.values) &lt; macro.parameternumber:</div>
<div class="line"><a name="l05256"></a><span class="lineno"> 5256</span>&#160;      Trace.error(<span class="stringliteral">&#39;Missing parameters in macro &#39;</span> + unicode(self))</div>
<div class="line"><a name="l05257"></a><span class="lineno"> 5257</span>&#160; </div>
<div class="line"><a name="l05258"></a><span class="lineno"> 5258</span>&#160;  <span class="keyword">def </span>parseoptional(self, pos, defaults):</div>
<div class="line"><a name="l05259"></a><span class="lineno"> 5259</span>&#160;    <span class="stringliteral">&quot;Parse optional parameters.&quot;</span></div>
<div class="line"><a name="l05260"></a><span class="lineno"> 5260</span>&#160;    optional = []</div>
<div class="line"><a name="l05261"></a><span class="lineno"> 5261</span>&#160;    <span class="keywordflow">while</span> self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.detecttype(SquareBracket, pos):</div>
<div class="line"><a name="l05262"></a><span class="lineno"> 5262</span>&#160;      optional.append(self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#ad0b94377d627571635db63890678c100">parsesquare</a>(pos))</div>
<div class="line"><a name="l05263"></a><span class="lineno"> 5263</span>&#160;      <span class="keywordflow">if</span> len(optional) &gt; len(defaults):</div>
<div class="line"><a name="l05264"></a><span class="lineno"> 5264</span>&#160;        <span class="keywordflow">break</span></div>
<div class="line"><a name="l05265"></a><span class="lineno"> 5265</span>&#160;    <span class="keywordflow">for</span> value <span class="keywordflow">in</span> optional:</div>
<div class="line"><a name="l05266"></a><span class="lineno"> 5266</span>&#160;      default = defaults.pop()</div>
<div class="line"><a name="l05267"></a><span class="lineno"> 5267</span>&#160;      <span class="keywordflow">if</span> len(value.contents) &gt; 0:</div>
<div class="line"><a name="l05268"></a><span class="lineno"> 5268</span>&#160;        self.values.append(value)</div>
<div class="line"><a name="l05269"></a><span class="lineno"> 5269</span>&#160;      <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l05270"></a><span class="lineno"> 5270</span>&#160;        self.values.append(default)</div>
<div class="line"><a name="l05271"></a><span class="lineno"> 5271</span>&#160;    self.values += defaults</div>
<div class="line"><a name="l05272"></a><span class="lineno"> 5272</span>&#160; </div>
<div class="line"><a name="l05273"></a><span class="lineno"> 5273</span>&#160;  <span class="keyword">def </span>parsemandatory(self, pos, number):</div>
<div class="line"><a name="l05274"></a><span class="lineno"> 5274</span>&#160;    <span class="stringliteral">&quot;Parse a number of mandatory parameters.&quot;</span></div>
<div class="line"><a name="l05275"></a><span class="lineno"> 5275</span>&#160;    <span class="keywordflow">for</span> index <span class="keywordflow">in</span> range(number):</div>
<div class="line"><a name="l05276"></a><span class="lineno"> 5276</span>&#160;      parameter = self.parsemacroparameter(pos, number - index)</div>
<div class="line"><a name="l05277"></a><span class="lineno"> 5277</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> parameter:</div>
<div class="line"><a name="l05278"></a><span class="lineno"> 5278</span>&#160;        <span class="keywordflow">return</span></div>
<div class="line"><a name="l05279"></a><span class="lineno"> 5279</span>&#160;      self.values.append(parameter)</div>
<div class="line"><a name="l05280"></a><span class="lineno"> 5280</span>&#160; </div>
<div class="line"><a name="l05281"></a><span class="lineno"> 5281</span>&#160;  <span class="keyword">def </span>parsemacroparameter(self, pos, remaining):</div>
<div class="line"><a name="l05282"></a><span class="lineno"> 5282</span>&#160;    <span class="stringliteral">&quot;Parse a macro parameter. Could be a bracket or a single letter.&quot;</span></div>
<div class="line"><a name="l05283"></a><span class="lineno"> 5283</span>&#160;    <span class="stringliteral">&quot;If there are just two values remaining and there is a running number,&quot;</span></div>
<div class="line"><a name="l05284"></a><span class="lineno"> 5284</span>&#160;    <span class="stringliteral">&quot;parse as two separater numbers.&quot;</span></div>
<div class="line"><a name="l05285"></a><span class="lineno"> 5285</span>&#160;    self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.clearskipped(pos)</div>
<div class="line"><a name="l05286"></a><span class="lineno"> 5286</span>&#160;    <span class="keywordflow">if</span> pos.finished():</div>
<div class="line"><a name="l05287"></a><span class="lineno"> 5287</span>&#160;      <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l05288"></a><span class="lineno"> 5288</span>&#160;    <span class="keywordflow">if</span> self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.detecttype(FormulaNumber, pos):</div>
<div class="line"><a name="l05289"></a><span class="lineno"> 5289</span>&#160;      <span class="keywordflow">return</span> self.parsenumbers(pos, remaining)</div>
<div class="line"><a name="l05290"></a><span class="lineno"> 5290</span>&#160;    <span class="keywordflow">return</span> self.<a class="code" href="classmath2html_1_1CommandBit.xhtml#af6cfea16003317fa1156cc3d85d74cf1">parseparameter</a>(pos)</div>
<div class="line"><a name="l05291"></a><span class="lineno"> 5291</span>&#160; </div>
<div class="line"><a name="l05292"></a><span class="lineno"> 5292</span>&#160;  <span class="keyword">def </span>parsenumbers(self, pos, remaining):</div>
<div class="line"><a name="l05293"></a><span class="lineno"> 5293</span>&#160;    <span class="stringliteral">&quot;Parse the remaining parameters as a running number.&quot;</span></div>
<div class="line"><a name="l05294"></a><span class="lineno"> 5294</span>&#160;    <span class="stringliteral">&quot;For example, 12 would be {1}{2}.&quot;</span></div>
<div class="line"><a name="l05295"></a><span class="lineno"> 5295</span>&#160;    number = self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.parsetype(FormulaNumber, pos)</div>
<div class="line"><a name="l05296"></a><span class="lineno"> 5296</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> len(number.original) == remaining:</div>
<div class="line"><a name="l05297"></a><span class="lineno"> 5297</span>&#160;      <span class="keywordflow">return</span> number</div>
<div class="line"><a name="l05298"></a><span class="lineno"> 5298</span>&#160;    <span class="keywordflow">for</span> digit <span class="keywordflow">in</span> number.original:</div>
<div class="line"><a name="l05299"></a><span class="lineno"> 5299</span>&#160;      value = self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">factory</a>.create(FormulaNumber)</div>
<div class="line"><a name="l05300"></a><span class="lineno"> 5300</span>&#160;      value.add(FormulaConstant(digit))</div>
<div class="line"><a name="l05301"></a><span class="lineno"> 5301</span>&#160;      value.type = number</div>
<div class="line"><a name="l05302"></a><span class="lineno"> 5302</span>&#160;      self.values.append(value)</div>
<div class="line"><a name="l05303"></a><span class="lineno"> 5303</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l05304"></a><span class="lineno"> 5304</span>&#160; </div>
<div class="line"><a name="l05305"></a><span class="lineno"> 5305</span>&#160;  <span class="keyword">def </span>completemacro(self, macro):</div>
<div class="line"><a name="l05306"></a><span class="lineno"> 5306</span>&#160;    <span class="stringliteral">&quot;Complete the macro with the parameters read.&quot;</span></div>
<div class="line"><a name="l05307"></a><span class="lineno"> 5307</span>&#160;    self.<a class="code" href="classmath2html_1_1Container.xhtml#aa6082c83a20a90e5a2ab9f216961972f">contents</a> = [macro.instantiate()]</div>
<div class="line"><a name="l05308"></a><span class="lineno"> 5308</span>&#160;    replaced = [<span class="keyword">False</span>] * len(self.values)</div>
<div class="line"><a name="l05309"></a><span class="lineno"> 5309</span>&#160;    <span class="keywordflow">for</span> parameter <span class="keywordflow">in</span> self.<a class="code" href="classmath2html_1_1Container.xhtml#a3e1c9ccd6353d81012fddcffc4930515">searchall</a>(MacroParameter):</div>
<div class="line"><a name="l05310"></a><span class="lineno"> 5310</span>&#160;      index = parameter.number - 1</div>
<div class="line"><a name="l05311"></a><span class="lineno"> 5311</span>&#160;      <span class="keywordflow">if</span> index &gt;= len(self.values):</div>
<div class="line"><a name="l05312"></a><span class="lineno"> 5312</span>&#160;        Trace.error(<span class="stringliteral">&#39;Macro parameter index out of bounds: &#39;</span> + unicode(index))</div>
<div class="line"><a name="l05313"></a><span class="lineno"> 5313</span>&#160;        <span class="keywordflow">return</span></div>
<div class="line"><a name="l05314"></a><span class="lineno"> 5314</span>&#160;      replaced[index] = <span class="keyword">True</span></div>
<div class="line"><a name="l05315"></a><span class="lineno"> 5315</span>&#160;      parameter.contents = [self.values[index].clone()]</div>
<div class="line"><a name="l05316"></a><span class="lineno"> 5316</span>&#160;    <span class="keywordflow">for</span> index <span class="keywordflow">in</span> range(len(self.values)):</div>
<div class="line"><a name="l05317"></a><span class="lineno"> 5317</span>&#160;      <span class="keywordflow">if</span> <span class="keywordflow">not</span> replaced[index]:</div>
<div class="line"><a name="l05318"></a><span class="lineno"> 5318</span>&#160;        self.addfilter(index, self.values[index])</div>
<div class="line"><a name="l05319"></a><span class="lineno"> 5319</span>&#160; </div>
<div class="line"><a name="l05320"></a><span class="lineno"> 5320</span>&#160;  <span class="keyword">def </span>addfilter(self, index, value):</div>
<div class="line"><a name="l05321"></a><span class="lineno"> 5321</span>&#160;    <span class="stringliteral">&quot;Add a filter for the given parameter number and parameter value.&quot;</span></div>
<div class="line"><a name="l05322"></a><span class="lineno"> 5322</span>&#160;    original = <span class="stringliteral">&#39;#&#39;</span> + unicode(index + 1)</div>
<div class="line"><a name="l05323"></a><span class="lineno"> 5323</span>&#160;    value = <span class="stringliteral">&#39;&#39;</span>.join(self.values[0].gethtml())</div>
<div class="line"><a name="l05324"></a><span class="lineno"> 5324</span>&#160;    self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#ad288825273ed7192429ab0474fb2d4a0">output</a>.addfilter(original, value)</div>
<div class="line"><a name="l05325"></a><span class="lineno"> 5325</span>&#160; </div>
<div class="line"><a name="l05326"></a><span class="lineno"> 5326</span>&#160;<span class="keyword">class </span>FormulaMacro(Formula):</div>
<div class="line"><a name="l05327"></a><span class="lineno"> 5327</span>&#160;  <span class="stringliteral">&quot;A math macro defined in an inset.&quot;</span></div>
<div class="line"><a name="l05328"></a><span class="lineno"> 5328</span>&#160; </div>
<div class="line"><a name="l05329"></a><span class="lineno"> 5329</span>&#160;  <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l05330"></a><span class="lineno"> 5330</span>&#160;    self.parser = MacroParser()</div>
<div class="line"><a name="l05331"></a><span class="lineno"> 5331</span>&#160;    self.<a class="code" href="classmath2html_1_1FormulaBit.xhtml#ad288825273ed7192429ab0474fb2d4a0">output</a> = EmptyOutput()</div>
<div class="line"><a name="l05332"></a><span class="lineno"> 5332</span>&#160; </div>
<div class="line"><a name="l05333"></a><span class="lineno"> 5333</span>&#160;  <span class="keyword">def </span>__unicode__(self):</div>
<div class="line"><a name="l05334"></a><span class="lineno"> 5334</span>&#160;    <span class="stringliteral">&quot;Return a printable representation.&quot;</span></div>
<div class="line"><a name="l05335"></a><span class="lineno"> 5335</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;Math macro&#39;</span></div>
<div class="line"><a name="l05336"></a><span class="lineno"> 5336</span>&#160; </div>
<div class="line"><a name="l05337"></a><span class="lineno"> 5337</span>&#160;FormulaFactory.types += [ MacroParameter ]</div>
<div class="line"><a name="l05338"></a><span class="lineno"> 5338</span>&#160; </div>
<div class="line"><a name="l05339"></a><span class="lineno"> 5339</span>&#160;FormulaCommand.types += [</div>
<div class="line"><a name="l05340"></a><span class="lineno"> 5340</span>&#160;    MacroFunction,</div>
<div class="line"><a name="l05341"></a><span class="lineno"> 5341</span>&#160;    ]</div>
<div class="line"><a name="l05342"></a><span class="lineno"> 5342</span>&#160; </div>
<div class="line"><a name="l05343"></a><span class="lineno"> 5343</span>&#160; </div>
<div class="line"><a name="l05344"></a><span class="lineno"> 5344</span>&#160; </div>
<div class="line"><a name="l05345"></a><span class="lineno"> 5345</span>&#160;<span class="keyword">def </span><a class="code" href="namespacemath2html.xhtml">math2html</a>(formula):</div>
<div class="line"><a name="l05346"></a><span class="lineno"> 5346</span>&#160;  <span class="stringliteral">&quot;Convert some TeX math to HTML.&quot;</span></div>
<div class="line"><a name="l05347"></a><span class="lineno"> 5347</span>&#160;  factory = FormulaFactory()</div>
<div class="line"><a name="l05348"></a><span class="lineno"> 5348</span>&#160;  whole = factory.parseformula(formula)</div>
<div class="line"><a name="l05349"></a><span class="lineno"> 5349</span>&#160;  FormulaProcessor().process(whole)</div>
<div class="line"><a name="l05350"></a><span class="lineno"> 5350</span>&#160;  whole.process()</div>
<div class="line"><a name="l05351"></a><span class="lineno"> 5351</span>&#160;  <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span>.join(whole.gethtml())</div>
<div class="line"><a name="l05352"></a><span class="lineno"> 5352</span>&#160; </div>
<div class="line"><a name="l05353"></a><span class="lineno"> 5353</span>&#160;<span class="keyword">def </span>main():</div>
<div class="line"><a name="l05354"></a><span class="lineno"> 5354</span>&#160;  <span class="stringliteral">&quot;Main function, called if invoked from elyxer.the command line&quot;</span></div>
<div class="line"><a name="l05355"></a><span class="lineno"> 5355</span>&#160;  args = sys.argv</div>
<div class="line"><a name="l05356"></a><span class="lineno"> 5356</span>&#160;  Options().parseoptions(args)</div>
<div class="line"><a name="l05357"></a><span class="lineno"> 5357</span>&#160;  <span class="keywordflow">if</span> len(args) != 1:</div>
<div class="line"><a name="l05358"></a><span class="lineno"> 5358</span>&#160;    Trace.error(<span class="stringliteral">&#39;Usage: math2html.py escaped_string&#39;</span>)</div>
<div class="line"><a name="l05359"></a><span class="lineno"> 5359</span>&#160;    exit()</div>
<div class="line"><a name="l05360"></a><span class="lineno"> 5360</span>&#160;  result = <a class="code" href="namespacemath2html.xhtml">math2html</a>(args[0])</div>
<div class="line"><a name="l05361"></a><span class="lineno"> 5361</span>&#160;  Trace.message(result)</div>
<div class="line"><a name="l05362"></a><span class="lineno"> 5362</span>&#160; </div>
<div class="line"><a name="l05363"></a><span class="lineno"> 5363</span>&#160;<span class="keywordflow">if</span> __name__ == <span class="stringliteral">&#39;__main__&#39;</span>:</div>
<div class="line"><a name="l05364"></a><span class="lineno"> 5364</span>&#160;  main()</div>
<div class="line"><a name="l05365"></a><span class="lineno"> 5365</span>&#160; </div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclassmath2html_1_1HybridFunction_xhtml_a22e10ee85e4b14c56340aef5174502be"><div class="ttname"><a href="classmath2html_1_1HybridFunction.xhtml#a22e10ee85e4b14c56340aef5174502be">math2html.HybridFunction.writeparam</a></div><div class="ttdeci">def writeparam(self, pos)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04979">math2html.py:4979</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Container_xhtml_a3e1c9ccd6353d81012fddcffc4930515"><div class="ttname"><a href="classmath2html_1_1Container.xhtml#a3e1c9ccd6353d81012fddcffc4930515">math2html.Container.searchall</a></div><div class="ttdeci">def searchall(self, type)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02233">math2html.py:2233</a></div></div>
<div class="ttc" id="aclassmath2html_1_1ParameterFunction_xhtml_a9ef52d1f35433d77d511c41ed93cc7e8"><div class="ttname"><a href="classmath2html_1_1ParameterFunction.xhtml#a9ef52d1f35433d77d511c41ed93cc7e8">math2html.ParameterFunction.readparams</a></div><div class="ttdeci">def readparams(self, readtemplate, pos)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04893">math2html.py:4893</a></div></div>
<div class="ttc" id="aclassmath2html_1_1CommandBit_xhtml_a9e0992eae3950adccaf4847fbff4231d"><div class="ttname"><a href="classmath2html_1_1CommandBit.xhtml#a9e0992eae3950adccaf4847fbff4231d">math2html.CommandBit.command</a></div><div class="ttdeci">command</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04133">math2html.py:4133</a></div></div>
<div class="ttc" id="aclassmath2html_1_1CommandBit_xhtml_af4f8291c9c9c4af6f76043cf736af9f1"><div class="ttname"><a href="classmath2html_1_1CommandBit.xhtml#af4f8291c9c9c4af6f76043cf736af9f1">math2html.CommandBit.parseliteral</a></div><div class="ttdeci">def parseliteral(self, pos)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04156">math2html.py:4156</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_a3b632d8950722cef7c91b6a91ed055f1"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#a3b632d8950722cef7c91b6a91ed055f1">math2html.Globable.finished</a></div><div class="ttdeci">def finished(self)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01849">math2html.py:1849</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_abefae8254f080b11ad7e7918db3adb48"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#abefae8254f080b11ad7e7918db3adb48">math2html.Globable.checkfor</a></div><div class="ttdeci">def checkfor(self, string)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01844">math2html.py:1844</a></div></div>
<div class="ttc" id="aclassmath2html_1_1CommandBit_xhtml_a01c1f6ef852aafbfb02168294490048f"><div class="ttname"><a href="classmath2html_1_1CommandBit.xhtml#a01c1f6ef852aafbfb02168294490048f">math2html.CommandBit.parsesquareliteral</a></div><div class="ttdeci">def parsesquareliteral(self, pos)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04168">math2html.py:4168</a></div></div>
<div class="ttc" id="anamespacemath2html_xhtml"><div class="ttname"><a href="namespacemath2html.xhtml">math2html</a></div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l00001">math2html.py:1</a></div></div>
<div class="ttc" id="aclassmath2html_1_1FormulaBit_xhtml_ab2ab402cdd95a2a6261feaf87dc3a69a"><div class="ttname"><a href="classmath2html_1_1FormulaBit.xhtml#ab2ab402cdd95a2a6261feaf87dc3a69a">math2html.FormulaBit.computesize</a></div><div class="ttdeci">def computesize(self)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02613">math2html.py:2613</a></div></div>
<div class="ttc" id="aclassmath2html_1_1FormulaBit_xhtml_ad288825273ed7192429ab0474fb2d4a0"><div class="ttname"><a href="classmath2html_1_1FormulaBit.xhtml#ad288825273ed7192429ab0474fb2d4a0">math2html.FormulaBit.output</a></div><div class="ttdeci">output</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02594">math2html.py:2594</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml">math2html.Globable</a></div><div class="ttdoc">A bit of text which can be globbed (lumped together in bits).</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01820">math2html.py:1820</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Position_xhtml_aff783e93ec4792177046b6554946b14e"><div class="ttname"><a href="classmath2html_1_1Position.xhtml#aff783e93ec4792177046b6554946b14e">math2html.Position.identifier</a></div><div class="ttdeci">def identifier(self)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02031">math2html.py:2031</a></div></div>
<div class="ttc" id="aclassmath2html_1_1HybridFunction_xhtml_a7796427b59cd81e0fed4bf0ae52cd0b2"><div class="ttname"><a href="classmath2html_1_1HybridFunction.xhtml#a7796427b59cd81e0fed4bf0ae52cd0b2">math2html.HybridFunction.writebracket</a></div><div class="ttdeci">def writebracket(self, direction, character)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l05034">math2html.py:5034</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_aa7260fdab67295dc66a65d5ce1ab0cd1"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#aa7260fdab67295dc66a65d5ce1ab0cd1">math2html.Globable.isvalue</a></div><div class="ttdeci">def isvalue(self)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01887">math2html.py:1887</a></div></div>
<div class="ttc" id="aclassmath2html_1_1FormulaBit_xhtml_a8e69d9f53088b7b0931fda54cb5ede70"><div class="ttname"><a href="classmath2html_1_1FormulaBit.xhtml#a8e69d9f53088b7b0931fda54cb5ede70">math2html.FormulaBit.factory</a></div><div class="ttdeci">factory</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02598">math2html.py:2598</a></div></div>
<div class="ttc" id="aclassmath2html_1_1HybridFunction_xhtml_a8b16e1638f65a0a214fdee0e8ee48276"><div class="ttname"><a href="classmath2html_1_1HybridFunction.xhtml#a8b16e1638f65a0a214fdee0e8ee48276">math2html.HybridFunction.readtag</a></div><div class="ttdeci">def readtag(self, pos)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l05009">math2html.py:5009</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Position_xhtml_aba130a15fcbbf00d54fab27aa4302f16"><div class="ttname"><a href="classmath2html_1_1Position.xhtml#aba130a15fcbbf00d54fab27aa4302f16">math2html.Position.skip</a></div><div class="ttdeci">def skip(self, string)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02027">math2html.py:2027</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Container_xhtml_aa6082c83a20a90e5a2ab9f216961972f"><div class="ttname"><a href="classmath2html_1_1Container.xhtml#aa6082c83a20a90e5a2ab9f216961972f">math2html.Container.contents</a></div><div class="ttdeci">contents</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02180">math2html.py:2180</a></div></div>
<div class="ttc" id="aclassmath2html_1_1HybridFunction_xhtml_a9b58629f6e82a261b7ef64c419e07389"><div class="ttname"><a href="classmath2html_1_1HybridFunction.xhtml#a9b58629f6e82a261b7ef64c419e07389">math2html.HybridFunction.writeparams</a></div><div class="ttdeci">def writeparams(self, writetemplate)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04954">math2html.py:4954</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_abae047a6b20e9977001c5454fd541363"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#abae047a6b20e9977001c5454fd541363">math2html.Globable.isidentifier</a></div><div class="ttdeci">def isidentifier(self)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01877">math2html.py:1877</a></div></div>
<div class="ttc" id="aclassmath2html_1_1FormulaBit_xhtml_a439227feff9d7f55384e8780cfc2eb82"><div class="ttname"><a href="classmath2html_1_1FormulaBit.xhtml#a439227feff9d7f55384e8780cfc2eb82">math2html.FormulaBit.size</a></div><div class="ttdeci">int size</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02588">math2html.py:2588</a></div></div>
<div class="ttc" id="aclassmath2html_1_1ParameterFunction_xhtml_a41000f175dc0115080e2a682cc06dbe9"><div class="ttname"><a href="classmath2html_1_1ParameterFunction.xhtml#a41000f175dc0115080e2a682cc06dbe9">math2html.ParameterFunction.params</a></div><div class="ttdeci">params</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04895">math2html.py:4895</a></div></div>
<div class="ttc" id="aclassmath2html_1_1HybridFunction_xhtml_af5c8091903e24d636e66fe5ec691c569"><div class="ttname"><a href="classmath2html_1_1HybridFunction.xhtml#af5c8091903e24d636e66fe5ec691c569">math2html.HybridFunction.computehybridsize</a></div><div class="ttdeci">def computehybridsize(self)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l05038">math2html.py:5038</a></div></div>
<div class="ttc" id="aclassmath2html_1_1CommandBit_xhtml_ad0b94377d627571635db63890678c100"><div class="ttname"><a href="classmath2html_1_1CommandBit.xhtml#ad0b94377d627571635db63890678c100">math2html.CommandBit.parsesquare</a></div><div class="ttdeci">def parsesquare(self, pos)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04147">math2html.py:4147</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_ac9bb34dedf123fd1caa89b2f19d2e754"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#ac9bb34dedf123fd1caa89b2f19d2e754">math2html.Globable.current</a></div><div class="ttdeci">def current(self)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01839">math2html.py:1839</a></div></div>
<div class="ttc" id="aclassmath2html_1_1CommandBit_xhtml_a9d62796c6ea7140baa01cb3635e7b62e"><div class="ttname"><a href="classmath2html_1_1CommandBit.xhtml#a9d62796c6ea7140baa01cb3635e7b62e">math2html.CommandBit.translated</a></div><div class="ttdeci">translated</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04136">math2html.py:4136</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_ad808cd48d7cc66f4744df784bcb2939c"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#ad808cd48d7cc66f4744df784bcb2939c">math2html.Globable.endinglist</a></div><div class="ttdeci">endinglist</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01825">math2html.py:1825</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_a6a878f97ef0d8a62334eb871cd27a078"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#a6a878f97ef0d8a62334eb871cd27a078">math2html.Globable.leavepending</a></div><div class="ttdeci">bool leavepending</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01822">math2html.py:1822</a></div></div>
<div class="ttc" id="aclassmath2html_1_1FormulaBit_xhtml_ac853827d77f6773a3750bf41e71d08c4"><div class="ttname"><a href="classmath2html_1_1FormulaBit.xhtml#ac853827d77f6773a3750bf41e71d08c4">math2html.FormulaBit.original</a></div><div class="ttdeci">string original</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02589">math2html.py:2589</a></div></div>
<div class="ttc" id="aclassmath2html_1_1HybridFunction_xhtml_a8d77133d5ac1cf6af6d9fc5397d6b7ef"><div class="ttname"><a href="classmath2html_1_1HybridFunction.xhtml#a8d77133d5ac1cf6af6d9fc5397d6b7ef">math2html.HybridFunction.writefunction</a></div><div class="ttdeci">def writefunction(self, pos)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04991">math2html.py:4991</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_a503223d30a41c308dc2a4631b0953466"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#a503223d30a41c308dc2a4631b0953466">math2html.Globable.skipcurrent</a></div><div class="ttdeci">def skipcurrent(self)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01857">math2html.py:1857</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_a853cfe00679bbf511ec8014ed2464e78"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#a853cfe00679bbf511ec8014ed2464e78">math2html.Globable.checkbytemark</a></div><div class="ttdeci">def checkbytemark(self)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01827">math2html.py:1827</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Position_xhtml"><div class="ttname"><a href="classmath2html_1_1Position.xhtml">math2html.Position</a></div><div class="ttdoc">A position in a text to parse.</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02022">math2html.py:2022</a></div></div>
<div class="ttc" id="aclassmath2html_1_1CommandBit_xhtml_af6cfea16003317fa1156cc3d85d74cf1"><div class="ttname"><a href="classmath2html_1_1CommandBit.xhtml#af6cfea16003317fa1156cc3d85d74cf1">math2html.CommandBit.parseparameter</a></div><div class="ttdeci">def parseparameter(self, pos)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04138">math2html.py:4138</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_ad715cf94e7e1928560d5c23ee18f9aa6"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#ad715cf94e7e1928560d5c23ee18f9aa6">math2html.Globable.isout</a></div><div class="ttdeci">def isout(self)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01834">math2html.py:1834</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Globable_xhtml_a0b78eca3d60b80b9f5f52aa10234788e"><div class="ttname"><a href="classmath2html_1_1Globable.xhtml#a0b78eca3d60b80b9f5f52aa10234788e">math2html.Globable.glob</a></div><div class="ttdeci">def glob(self, currentcheck)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l01862">math2html.py:1862</a></div></div>
<div class="ttc" id="aclassmath2html_1_1Position_xhtml_ac9dddfc7375acdb7081f7a7286b8d04b"><div class="ttname"><a href="classmath2html_1_1Position.xhtml#ac9dddfc7375acdb7081f7a7286b8d04b">math2html.Position.extract</a></div><div class="ttdeci">def extract(self, length)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l02036">math2html.py:2036</a></div></div>
<div class="ttc" id="aclassmath2html_1_1HybridFunction_xhtml_aeeea421fbd4fbd4654e0535123e3c8c1"><div class="ttname"><a href="classmath2html_1_1HybridFunction.xhtml#aeeea421fbd4fbd4654e0535123e3c8c1">math2html.HybridFunction.writepos</a></div><div class="ttdeci">def writepos(self, pos)</div><div class="ttdef"><b>Definition:</b> <a href="forks_2jras-elyxer_2math2html_8py_source.xhtml#l04958">math2html.py:4958</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
