<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: Calibration Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.3.1</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceSignalIntegrity.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib.xhtml">Lib</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Measurement.xhtml">Measurement</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration.xhtml">Calibration</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration.xhtml">Calibration</a></li><li class="navelem"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml">Calibration</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Calibration Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Generates calibrated s-parameter measurements.  
 <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#details">More...</a></p>

<p>Inherits object.</p>
<div class="dynheader">
Collaboration diagram for Calibration:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration__coll__graph.svg" width="208" height="352"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a09488d31cef60d14cb3ebfe3f29b963b"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a09488d31cef60d14cb3ebfe3f29b963b">__init__</a> (self, ports, f, calibrationList=[])</td></tr>
<tr class="memdesc:a09488d31cef60d14cb3ebfe3f29b963b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a09488d31cef60d14cb3ebfe3f29b963b">More...</a><br /></td></tr>
<tr class="separator:a09488d31cef60d14cb3ebfe3f29b963b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09d744e748042e2e2403b060e71570a2"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a09d744e748042e2e2403b060e71570a2">InitializeFromFixtures</a> (self, fixtureList)</td></tr>
<tr class="memdesc:a09d744e748042e2e2403b060e71570a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">initializes the calibration from list of fixtures  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a09d744e748042e2e2403b060e71570a2">More...</a><br /></td></tr>
<tr class="separator:a09d744e748042e2e2403b060e71570a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab91ae2e037c39b631a69273c277bfe9"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aab91ae2e037c39b631a69273c277bfe9">__getitem__</a> (self, item)</td></tr>
<tr class="memdesc:aab91ae2e037c39b631a69273c277bfe9"><td class="mdescLeft">&#160;</td><td class="mdescRight">overloads [item]  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aab91ae2e037c39b631a69273c277bfe9">More...</a><br /></td></tr>
<tr class="separator:aab91ae2e037c39b631a69273c277bfe9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a810fdc262754b6d21f5acd0e280d4daf"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a810fdc262754b6d21f5acd0e280d4daf">__len__</a> (self)</td></tr>
<tr class="memdesc:a810fdc262754b6d21f5acd0e280d4daf"><td class="mdescLeft">&#160;</td><td class="mdescRight">overloads len()  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a810fdc262754b6d21f5acd0e280d4daf">More...</a><br /></td></tr>
<tr class="separator:a810fdc262754b6d21f5acd0e280d4daf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab30a42390f53eabb98739d1a20ed06e2"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ab30a42390f53eabb98739d1a20ed06e2">Fixtures</a> (self, pl=None)</td></tr>
<tr class="memdesc:ab30a42390f53eabb98739d1a20ed06e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fixtures.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ab30a42390f53eabb98739d1a20ed06e2">More...</a><br /></td></tr>
<tr class="separator:ab30a42390f53eabb98739d1a20ed06e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7c9e9bd678f492f140e80cabc04b14b"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#af7c9e9bd678f492f140e80cabc04b14b">WriteFixturesToFiles</a> (self, filename, pl=None)</td></tr>
<tr class="memdesc:af7c9e9bd678f492f140e80cabc04b14b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the error terms to a files in the form of fixtures.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#af7c9e9bd678f492f140e80cabc04b14b">More...</a><br /></td></tr>
<tr class="separator:af7c9e9bd678f492f140e80cabc04b14b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7ffad83587c0aa8c9b54a7695e10373"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#af7ffad83587c0aa8c9b54a7695e10373">WriteToFile</a> (self, filename, pl=None)</td></tr>
<tr class="memdesc:af7ffad83587c0aa8c9b54a7695e10373"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the error terms to a file in LeCroy format.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#af7ffad83587c0aa8c9b54a7695e10373">More...</a><br /></td></tr>
<tr class="separator:af7ffad83587c0aa8c9b54a7695e10373"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a357836565b98acc71ab20fa3d6663aca"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a357836565b98acc71ab20fa3d6663aca">ReadFromFile</a> (self, filename, **kwargs)</td></tr>
<tr class="memdesc:a357836565b98acc71ab20fa3d6663aca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the error terms to a file in LeCroy format.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a357836565b98acc71ab20fa3d6663aca">More...</a><br /></td></tr>
<tr class="separator:a357836565b98acc71ab20fa3d6663aca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af59f1f79c72d4d05439ca44797972ba0"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#af59f1f79c72d4d05439ca44797972ba0">AddMeasurements</a> (self, calibrationList=[])</td></tr>
<tr class="memdesc:af59f1f79c72d4d05439ca44797972ba0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds calibration measurements.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#af59f1f79c72d4d05439ca44797972ba0">More...</a><br /></td></tr>
<tr class="separator:af59f1f79c72d4d05439ca44797972ba0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97348b9e4c449174b1e735563e3a8a9c"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a97348b9e4c449174b1e735563e3a8a9c">CalculateErrorTerms</a> (self, force=False)</td></tr>
<tr class="memdesc:a97348b9e4c449174b1e735563e3a8a9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the error terms <br  />
 The error terms are calculated in a specific order so that dependencies can be satisfied.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a97348b9e4c449174b1e735563e3a8a9c">More...</a><br /></td></tr>
<tr class="separator:a97348b9e4c449174b1e735563e3a8a9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca0ee086164e38edd3ee183565e18278"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aca0ee086164e38edd3ee183565e18278">DutCalculationAlternate</a> (self, sRaw, portList=None, reciprocal=False)</td></tr>
<tr class="memdesc:aca0ee086164e38edd3ee183565e18278"><td class="mdescLeft">&#160;</td><td class="mdescRight">Alternate Dut Calculation converts the raw measured s-parameters of the DUT into calibrated s-parameter measurements.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aca0ee086164e38edd3ee183565e18278">More...</a><br /></td></tr>
<tr class="separator:aca0ee086164e38edd3ee183565e18278"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fd29d1d781b8f2e08de3528337c579c"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a2fd29d1d781b8f2e08de3528337c579c">DutCalculation</a> (self, sRaw, portList=None, reciprocal=False)</td></tr>
<tr class="memdesc:a2fd29d1d781b8f2e08de3528337c579c"><td class="mdescLeft">&#160;</td><td class="mdescRight">calculates the Dut.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a2fd29d1d781b8f2e08de3528337c579c">More...</a><br /></td></tr>
<tr class="separator:a2fd29d1d781b8f2e08de3528337c579c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d3944daa360dac4cb097fcfee541d5b"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a4d3944daa360dac4cb097fcfee541d5b">DutUnCalculationAlternate</a> (self, S, portList=None)</td></tr>
<tr class="memdesc:a4d3944daa360dac4cb097fcfee541d5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Un-calcualates the DUT.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a4d3944daa360dac4cb097fcfee541d5b">More...</a><br /></td></tr>
<tr class="separator:a4d3944daa360dac4cb097fcfee541d5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ba5b62a478aead01d3dd9646a7372a3"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a3ba5b62a478aead01d3dd9646a7372a3">DutUnCalculation</a> (self, S, portList=None)</td></tr>
<tr class="memdesc:a3ba5b62a478aead01d3dd9646a7372a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Un-calcualates the DUT.  <a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a3ba5b62a478aead01d3dd9646a7372a3">More...</a><br /></td></tr>
<tr class="separator:a3ba5b62a478aead01d3dd9646a7372a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Generates calibrated s-parameter measurements. </p>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00036">36</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a09488d31cef60d14cb3ebfe3f29b963b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09488d31cef60d14cb3ebfe3f29b963b">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def __init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>ports</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>calibrationList</em> = <code>[]</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ports</td><td>number of ports in the calibration. </td></tr>
    <tr><td class="paramname">f</td><td>instance of class FrequencyList (or list of frequencies). </td></tr>
    <tr><td class="paramname">calibrationList</td><td>(optional) list of instances of class CalibrationMeasurement </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd>CalibrationMeasurement </dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00046">46</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aab91ae2e037c39b631a69273c277bfe9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab91ae2e037c39b631a69273c277bfe9">&#9670;&nbsp;</a></span>__getitem__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def __getitem__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>overloads [item] </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">item</td><td>integer row of error terms matrix to access </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a row of the error terms matrix </dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>This method is used when access the error terms matrix like self[r][c] which would acess an instance of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1ErrorTerms.xhtml">ErrorTerms</a> for receive port r and driven port c. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1ErrorTerms.xhtml">ErrorTerms</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00077">77</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="a810fdc262754b6d21f5acd0e280d4daf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a810fdc262754b6d21f5acd0e280d4daf">&#9670;&nbsp;</a></span>__len__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def __len__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>overloads len() </p>
<dl class="section return"><dt>Returns</dt><dd>the number of rows in the error terms (which is the number of ports). </dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00082">82</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="af59f1f79c72d4d05439ca44797972ba0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af59f1f79c72d4d05439ca44797972ba0">&#9670;&nbsp;</a></span>AddMeasurements()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def AddMeasurements </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>calibrationList</em> = <code>[]</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds calibration measurements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">calibrationList</td><td>list of instances of class CalibrationMeasurement. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00197">197</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="a97348b9e4c449174b1e735563e3a8a9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97348b9e4c449174b1e735563e3a8a9c">&#9670;&nbsp;</a></span>CalculateErrorTerms()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def CalculateErrorTerms </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>force</em> = <code>False</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the error terms <br  />
 The error terms are calculated in a specific order so that dependencies can be satisfied. </p>
<p><br  />
 The reflect error terms are computed first, then the crosstalk error terms. The unknown thru error terms are calculated which need the reflect and crosstalk error terms. The unknown thru recovers the thru which is passed to thru error terms calculations (the reason for this is to allow for multiple thru standards computations). Finally, the transfer thru error terms are calculated which depend on the thru error terms. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">force</td><td>(optional) boolean whether to force it to calculate the error terms. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section remark"><dt>Remarks</dt><dd>If error terms have not been calculated or force, then the error terms are calculated from instances of CalibrationMeasurement provided during the calibration. </dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00329">329</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="a2fd29d1d781b8f2e08de3528337c579c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fd29d1d781b8f2e08de3528337c579c">&#9670;&nbsp;</a></span>DutCalculation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def DutCalculation </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>sRaw</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>portList</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>reciprocal</em> = <code>False</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>calculates the Dut. </p>
<p><br  />
 converts the raw measured s-parameters of the DUT into calibrated s-parameter measurements.<br  />
 If the portList is None, then it assumed to be a list [0,1,2,P-1] where P is the number of ports in sRaw, otherwise ports can be specified where the DUT is connected. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sRaw</td><td>instance of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a> of the raw measurement of the DUT. </td></tr>
    <tr><td class="paramname">portList</td><td>(optional) list of zero based port numbers of the DUT </td></tr>
    <tr><td class="paramname">reciprocal</td><td>(optional, defaults to False) whether to enforce reciprocity </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>instance of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a> of the calibrated DUT measurement. </dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>if reciprocity is True, the reciprocity is enforced in the calculation </dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00370">370</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="aca0ee086164e38edd3ee183565e18278"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca0ee086164e38edd3ee183565e18278">&#9670;&nbsp;</a></span>DutCalculationAlternate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def DutCalculationAlternate </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>sRaw</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>portList</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>reciprocal</em> = <code>False</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Alternate Dut Calculation converts the raw measured s-parameters of the DUT into calibrated s-parameter measurements. </p>
<p><br  />
 If the portList is None, then it assumed to be a list [0,1,2,P-1] where P is the number of ports in sRaw, otherwise ports can be specified where the DUT is connected. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sRaw</td><td>instance of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a> of the raw measurement of the DUT. </td></tr>
    <tr><td class="paramname">portList</td><td>(optional) list of zero based port numbers of the DUT </td></tr>
    <tr><td class="paramname">reciprocal</td><td>(optional, defaults to False) whether to enforce reciprocity </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>instance of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a> of the calibrated DUT measurement. </dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>if reciprocity is True, the reciprocity is enforced in the calculation </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000001">Deprecated:</a></b></dt><dd>This provides a DUT calculation according to the Wittwer method, but a better,simpler method has been found.</dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00354">354</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="a3ba5b62a478aead01d3dd9646a7372a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ba5b62a478aead01d3dd9646a7372a3">&#9670;&nbsp;</a></span>DutUnCalculation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def DutUnCalculation </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>portList</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Un-calcualates the DUT. </p>
<p><br  />
 This calculates the expected raw measured DUT based on the DUT actually calculated.<br  />
 </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a2fd29d1d781b8f2e08de3528337c579c" title="calculates the Dut.">DutCalculation</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">S</td><td>instance of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a> of measured DUT from these error-terms. </td></tr>
    <tr><td class="paramname">portList</td><td>(optional) list of zero based port numbers used for the DUT calcualtion </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>instance of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a> of the raw measured s-parameters that calculated this DUT </dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>If the portList is None, then it assumed to be a list [0,1,2,P-1] where P is the number of ports in sRaw, otherwise ports can be specified where the DUT is connected. </dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00422">422</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="a4d3944daa360dac4cb097fcfee541d5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d3944daa360dac4cb097fcfee541d5b">&#9670;&nbsp;</a></span>DutUnCalculationAlternate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def DutUnCalculationAlternate </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>portList</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Un-calcualates the DUT. </p>
<p><br  />
 This calculates the expected raw measured DUT based on the DUT actually calculated.<br  />
 </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a2fd29d1d781b8f2e08de3528337c579c" title="calculates the Dut.">DutCalculation</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">S</td><td>instance of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a> of measured DUT from these error-terms. </td></tr>
    <tr><td class="paramname">portList</td><td>(optional) list of zero based port numbers used for the DUT calcualtion </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>instance of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a> of the raw measured s-parameters that calculated this DUT </dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>If the portList is None, then it assumed to be a list [0,1,2,P-1] where P is the number of ports in sRaw, otherwise ports can be specified where the DUT is connected. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000002">Deprecated:</a></b></dt><dd>This method utilizes fixtures and embeds them. Originally, I could not figure out how to do this with just the error-terms. This was figured out finally and is more efficient, but this method is retained for comparison of results. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a3ba5b62a478aead01d3dd9646a7372a3" title="Un-calcualates the DUT.">DutUnCalculation</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00388">388</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="ab30a42390f53eabb98739d1a20ed06e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab30a42390f53eabb98739d1a20ed06e2">&#9670;&nbsp;</a></span>Fixtures()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def Fixtures </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>pl</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fixtures. </p>
<dl class="section return"><dt>Returns</dt><dd>the error terms as fixtures </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pl</td><td>(optional) list of zero based port numbers of the DUT</td></tr>
  </table>
  </dd>
</dl>
<dl class="section remark"><dt>Remarks</dt><dd>If the portList is None, then it assumed to be a list [0,1,2,P-1] where P is the number of ports in the calibration, otherwise ports can be specified where the DUT is connected. </dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00091">91</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="a09d744e748042e2e2403b060e71570a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09d744e748042e2e2403b060e71570a2">&#9670;&nbsp;</a></span>InitializeFromFixtures()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def InitializeFromFixtures </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>fixtureList</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>initializes the calibration from list of fixtures </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fixtureList</td><td>list of instances of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a></td></tr>
  </table>
  </dd>
</dl>
<p>For a given number of ports P, there should be P fixtures in the list and each fixture should be 2P port s-parameters </p>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00060">60</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="a357836565b98acc71ab20fa3d6663aca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a357836565b98acc71ab20fa3d6663aca">&#9670;&nbsp;</a></span>ReadFromFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def ReadFromFile </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">**&#160;</td>
          <td class="paramname"><em>kwargs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads the error terms to a file in LeCroy format. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>name of file to read the error terms from </td></tr>
    <tr><td class="paramname">**kwargs</td><td>dict (optional, defaults to {}) dictionary of arguments for the file </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>self</dd></dl>
<p>The LeCroy format is for each row, for each column, for each error-term, for each frequency point, the error term is written on a line as the real and imaginary part. the first line of the file contains three numbers, the number of ports, the number of frequency points (-1) and the end frequency. </p>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00160">160</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="af7c9e9bd678f492f140e80cabc04b14b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7c9e9bd678f492f140e80cabc04b14b">&#9670;&nbsp;</a></span>WriteFixturesToFiles()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def WriteFixturesToFiles </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>pl</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes the error terms to a files in the form of fixtures. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>prefix of the files to write the error terms to. </td></tr>
    <tr><td class="paramname">pl</td><td>(optional) list of zero based port numbers of the DUT</td></tr>
  </table>
  </dd>
</dl>
<p>For a P port calibration, this writes P s-parameter files where each file is a 2P port fixture file. </p><dl class="section remark"><dt>Remarks</dt><dd>If the portList is None, then it assumed to be a list [0,1,2,P-1] where P is the number of ports in the calibration, otherwise ports can be specified where the DUT is connected. </dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00112">112</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<a id="af7ffad83587c0aa8c9b54a7695e10373"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7ffad83587c0aa8c9b54a7695e10373">&#9670;&nbsp;</a></span>WriteToFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def WriteToFile </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>pl</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes the error terms to a file in LeCroy format. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>name of file to write the error terms to </td></tr>
    <tr><td class="paramname">pl</td><td>(optional) list of zero based port numbers of the DUT.</td></tr>
  </table>
  </dd>
</dl>
<p>The LeCroy format is for each row, for each column, for each error-term, for each frequency point, the error term is written on a line as the real and imaginary part. the first line of the file contains three numbers, the number of ports, the number of frequency points (-1) and the end frequency. </p><dl class="section remark"><dt>Remarks</dt><dd>If the portList is None, then it assumed to be a list [0,1,2,P-1] where P is the number of ports in the calibration, otherwise ports can be specified where the DUT is connected. </dd></dl>

<p class="definition">Definition at line <a class="el" href="Calibration_8py_source.xhtml#l00132">132</a> of file <a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>SignalIntegrity/SignalIntegrity/Lib/Measurement/Calibration/<a class="el" href="Calibration_8py_source.xhtml">Calibration.py</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
