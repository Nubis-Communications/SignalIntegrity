<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/Lib/SParameters/SParameterFile.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.5.0</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_ba9856180bcd39f2b51d38e1b9ddb228.xhtml">Lib</a></li><li class="navelem"><a class="el" href="dir_7a5914954a2ba190c03fc4996ae21a6a.xhtml">SParameters</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">SParameterFile.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral"> s-parameter file</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2021 Nubis Communications, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># Copyright (c) 2018-2020 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">from</span> numpy <span class="keyword">import</span> empty</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">from</span> numpy <span class="keyword">import</span> array</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">import</span> cmath</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">import</span> math</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> os</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> sys</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters.xhtml">SignalIntegrity.Lib.SParameters.SParameters</a> <span class="keyword">import</span> SParameters</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Conversions.xhtml">SignalIntegrity.Lib.Conversions</a> <span class="keyword">import</span> ReferenceImpedance</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1FrequencyList.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyList</a> <span class="keyword">import</span> GenericFrequencyList</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a> <span class="keyword">import</span> SignalIntegrityExceptionSParameterFile</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml">SParameterFile</a>(<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters.xhtml">SParameters</a>):</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;class for s-parameters read from a file&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    sort_frequencies=<span class="keyword">True</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#aad98d14359808da4f81634587aa705ff">__init__</a>(self,name,Z0=None,callback=None,**kwargs):</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml">   38</a></span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Constructor</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">        @param name string file name of s-parameter file to read.</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="stringliteral">        @param Z0 (optional) real or complex reference impedance desired (defaults to 50 ohms).</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="stringliteral">        @param callback function ptr (optional, defaults to None) callback function.</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="stringliteral">        @param **kwargs dict (optional, defaults to {}) dictionary of arguments for the file</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">        Reads the s-parameter file and produces an instance of its base class SParameters.  </span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">        If the reference impedance of the Touchstone 1.0 file read is not the reference</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">        impedance specified, then the reference impedance of the s-parameters are converted</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">        to the reference impedance specified.</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="stringliteral">        The callback function is used to pass down into s-parameter files that are actually</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="stringliteral">        SignalIntegrity projects so that progress can be tracked and the UI thread can be kept</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral">        updated.  The callback function should have a signature like Callback(self,number,name=None),</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="stringliteral">        where the number is the progress in percent and the name is the name of the file being processed.</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">        If the name is the name of an s-parameter file and one of the kwarg keywords is &#39;text&#39;, then</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">        the item associated with the keyword is assumed be a text stream containing s-parameter data to</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">        directly fill in.  In this case, the file name is used only to determine the number of ports.</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="stringliteral">        if a kwarg keyword is &#39;reorder&#39;, then it is followed by a string of comma separted integer</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="stringliteral">        one-based values representing the ports to take the data from in the list.  For example, a</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="stringliteral">        two-port with the argument &#39;reorder 1,2&#39; will return the s-parameters unchanged, but</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="stringliteral">        &#39;reorder 2,1&#39; will swap the ports. You can also use &#39;reorder 1&#39; to extract the port 1 return</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral">        loss and convert it into a one-port s-parameter.</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#ad2180ffeeda41f431d75a271137bd5bc">m_sToken</a>=<span class="stringliteral">&#39;S&#39;</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a9034893a926dcf9c73e64fdf3fea83aa">m_Z0</a>=Z0</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#aad98d14359808da4f81634587aa705ff">   68</a></span>&#160;        order=kwargs.pop(<span class="stringliteral">&#39;reorder&#39;</span>,<span class="keywordtype">None</span>)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">if</span> order <span class="keywordflow">not</span> <span class="keywordflow">in</span> [<span class="keywordtype">None</span>,<span class="stringliteral">&#39;None&#39;</span>,<span class="stringliteral">&#39;&#39;</span>]:</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            order=[int(p) <span class="keywordflow">for</span> p <span class="keywordflow">in</span> order.split(<span class="stringliteral">&#39;,&#39;</span>)]</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            order=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        ext=str.lower(name).split(<span class="stringliteral">&#39;.&#39;</span>)[-1]</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">if</span> ext == <span class="stringliteral">&#39;si&#39;</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1SignalIntegrityAppHeadless.xhtml">SignalIntegrity.App.SignalIntegrityAppHeadless</a> <span class="keyword">import</span> ProjectSParameters</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            sp=ProjectSParameters(name,callback,**kwargs)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> sp <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                <span class="keywordflow">if</span> order != <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                    sp=sp.PortReorder(order)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                SParameters.__init__(self,sp.m_f,sp.m_d,sp.m_Z0)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters.xhtml#a98bb8cca60faa48d8aa1b2b667c36037">SetReferenceImpedance</a>(Z0)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                <span class="keywordflow">return</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="keywordflow">raise</span> SignalIntegrityExceptionSParameterFile(<span class="stringliteral">&#39;s-parameters could not be produced by &#39;</span>+name)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="comment"># pragma: include outdent outdent</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a5507545e3851673c2e9587c3e05a1ca6">m_P</a>=int(str.lower(name).split(<span class="stringliteral">&#39;.&#39;</span>)[-1].split(<span class="stringliteral">&#39;s&#39;</span>)[1].split(<span class="stringliteral">&#39;p&#39;</span>)[0])</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="comment"># pragma: silent exclude indent indent</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <span class="keywordflow">raise</span> SignalIntegrityExceptionSParameterFile(<span class="stringliteral">&#39;incorrect extension in s-parameter file name in &#39;</span>+name)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        freqMul = 1e6</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        complexType = <span class="stringliteral">&#39;MA&#39;</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        Z0=50.</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        sp=<span class="keyword">True</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        f=[]</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>=[]</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        numbersList=[]</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#ae8f626807b2dddc1872b3005556939cd">header</a>=[]</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;text&#39;</span> <span class="keywordflow">in</span> kwargs:</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            spfile=kwargs[<span class="stringliteral">&#39;text&#39;</span>]</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib_1_1Encryption.xhtml">SignalIntegrity.Lib.Encryption</a> <span class="keyword">import</span> Encryption</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                spfile=Encryption().ReadEncryptedLines(name)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">except</span> IOError:</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                <span class="keywordflow">raise</span> SignalIntegrityExceptionSParameterFile(name+<span class="stringliteral">&#39; not found&#39;</span>)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        readHeader=<span class="keyword">True</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="comment"># pragma: include indent indent</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">for</span> line <span class="keywordflow">in</span> spfile:</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keywordflow">if</span> readHeader:</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordflow">if</span> line[0] <span class="keywordflow">in</span> [<span class="stringliteral">&#39;!&#39;</span>,<span class="stringliteral">&#39; &#39;</span>,<span class="stringliteral">&#39;#&#39;</span>,<span class="stringliteral">&#39;\n&#39;</span>]:</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                    <span class="keywordflow">if</span> line[0] == <span class="stringliteral">&#39;!&#39;</span>:</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#ae8f626807b2dddc1872b3005556939cd">header</a>.append(line[1:-1]+<span class="stringliteral">&#39;\n&#39;</span>)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                    readHeader = <span class="keyword">False</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            lineList = str.lower(line).split(<span class="stringliteral">&#39;!&#39;</span>)[0].split()</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">if</span> len(lineList)&gt;0:</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                <span class="keywordflow">if</span> lineList[0] == <span class="stringliteral">&#39;#&#39;</span>:</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                    <span class="keywordflow">if</span> <span class="stringliteral">&#39;hz&#39;</span> <span class="keywordflow">in</span> lineList: freqMul = 1.0</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                    <span class="keywordflow">if</span> <span class="stringliteral">&#39;khz&#39;</span> <span class="keywordflow">in</span> lineList: freqMul = 1e3</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                    <span class="keywordflow">if</span> <span class="stringliteral">&#39;mhz&#39;</span> <span class="keywordflow">in</span> lineList: freqMul = 1e6</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                    <span class="keywordflow">if</span> <span class="stringliteral">&#39;ghz&#39;</span> <span class="keywordflow">in</span> lineList: freqMul = 1e9</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                    <span class="keywordflow">if</span> <span class="stringliteral">&#39;ma&#39;</span> <span class="keywordflow">in</span> lineList: complexType = <span class="stringliteral">&#39;MA&#39;</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                    <span class="keywordflow">if</span> <span class="stringliteral">&#39;ri&#39;</span> <span class="keywordflow">in</span> lineList: complexType = <span class="stringliteral">&#39;RI&#39;</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    <span class="keywordflow">if</span> <span class="stringliteral">&#39;db&#39;</span> <span class="keywordflow">in</span> lineList: complexType = <span class="stringliteral">&#39;DB&#39;</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                    <span class="keywordflow">if</span> <span class="stringliteral">&#39;r&#39;</span> <span class="keywordflow">in</span> lineList:</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                        Z0=float(lineList[lineList.index(<span class="stringliteral">&#39;r&#39;</span>)+1])</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                    <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#ad2180ffeeda41f431d75a271137bd5bc">m_sToken</a>.lower() <span class="keywordflow">in</span> lineList:</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                        sp=<span class="keyword">False</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keywordflow">else</span>: numbersList.extend(lineList)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> sp: <span class="keywordflow">return</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a9034893a926dcf9c73e64fdf3fea83aa">m_Z0</a>==<span class="keywordtype">None</span>: self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a9034893a926dcf9c73e64fdf3fea83aa">m_Z0</a>=Z0</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keyword">import</span> numpy <span class="keyword">as</span> np</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            invalid = np.any(np.isnan([float(v) <span class="keywordflow">for</span> v <span class="keywordflow">in</span> numbersList]))</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            invalid = <span class="keyword">True</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">if</span> invalid:</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordflow">raise</span> SignalIntegrityExceptionSParameterFile(name+<span class="stringliteral">&#39; has invalid values&#39;</span>)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        frequencies = len(numbersList)//(1+self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a5507545e3851673c2e9587c3e05a1ca6">m_P</a>*self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a5507545e3851673c2e9587c3e05a1ca6">m_P</a>*2)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        P=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a5507545e3851673c2e9587c3e05a1ca6">m_P</a></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">m_d</a>=[empty([P,P]).tolist() <span class="keywordflow">for</span> fi <span class="keywordflow">in</span> range(frequencies)]</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">for</span> fi <span class="keywordflow">in</span> range(frequencies):</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            f.append(float(numbersList[(1+P*P*2)*fi])*freqMul)</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordflow">for</span> r <span class="keywordflow">in</span> range(P):</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="keywordflow">for</span> c <span class="keywordflow">in</span> range(P):</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                    n1=float(numbersList[(1+P*P*2)*fi+1+(r*P+c)*2])</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    n2=float(numbersList[(1+P*P*2)*fi+1+(r*P+c)*2+1])</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                    <span class="keywordflow">if</span> complexType == <span class="stringliteral">&#39;RI&#39;</span>:</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">m_d</a>[fi][r][c]=n1+1j*n2</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                        expangle=cmath.exp(1j*math.pi/180.*n2)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                        <span class="keywordflow">if</span> complexType == <span class="stringliteral">&#39;MA&#39;</span>:</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                            self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">m_d</a>[fi][r][c]=n1*expangle</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                        <span class="keywordflow">elif</span> complexType == <span class="stringliteral">&#39;DB&#39;</span>:</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                            self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">m_d</a>[fi][r][c]=math.pow(10.,n1/20)*expangle</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="keywordflow">if</span> P == 2:</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">m_d</a>[fi]=array(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">m_d</a>[fi]).transpose().tolist()</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">if</span> Z0 != self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a9034893a926dcf9c73e64fdf3fea83aa">m_Z0</a>:</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">m_d</a>[fi]=ReferenceImpedance(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">m_d</a>[fi],self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a9034893a926dcf9c73e64fdf3fea83aa">m_Z0</a>,Z0)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>=<a class="code" href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1GenericFrequencyList.xhtml">GenericFrequencyList</a>(f)</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">if</span> order != <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            sp=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a979f42e9c8bf72ce90999a24da8a839d">PortReorder</a>(order)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            SParameters.__init__(self,sp.m_f,sp.m_d,sp.m_Z0)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#afc1ec91c8857a955b98393d04528f09c">sort_frequencies</a>:</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keyword">import</span> numpy <span class="keyword">as</span> np</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> all (np.diff(f) &gt; 0): <span class="comment"># frequency list is not in order!</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                _,unq_row_indices = np.unique(np.array(f),return_index=<span class="keyword">True</span>,axis=0)</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                reindex_array=np.stack((np.array(f)[unq_row_indices],unq_row_indices),axis=1)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                reindex_array=reindex_array[reindex_array[:, 0].argsort()]</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                newf,index = reindex_array[:,0],reindex_array[:,1].astype(int)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                newd=[self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">m_d</a>[i] <span class="keywordflow">for</span> i <span class="keywordflow">in</span> index]</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">m_f</a>=newf.tolist()</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">m_d</a>=newd</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">pass</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="comment"># pragma: include</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"># pragma: silent exclude</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordflow">if</span> __name__ == <span class="stringliteral">&quot;__main__&quot;</span>: <span class="comment"># pragma: no cover</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    runProfiler=<span class="keyword">True</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">if</span> runProfiler:</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keyword">import</span> cProfile</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        cProfile.run(<span class="stringliteral">&#39;SParameterFile(\&#39;/home/peterp/Work/PySI/PowerIntegrity/ReversePulseMode/CurrentDelayLine1p65us.s4p\&#39;)&#39;</span>,<span class="stringliteral">&#39;stats&#39;</span>)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keyword">import</span> pstats</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        p = pstats.Stats(<span class="stringliteral">&#39;stats&#39;</span>)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        p.strip_dirs().sort_stats(<span class="stringliteral">&#39;cumulative&#39;</span>).print_stats(30)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml">SParameterFile</a>(<span class="stringliteral">&#39;/home/peterp/Work/PySI/PowerIntegrity/ReversePulseMode/CurrentDelayLine1p65us.s4p&#39;</span>)</div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile_xhtml_aad98d14359808da4f81634587aa705ff"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#aad98d14359808da4f81634587aa705ff">SignalIntegrity.Lib.SParameters.SParameterFile.SParameterFile.__init__</a></div><div class="ttdeci">def __init__(self, name, Z0=None, callback=None, **kwargs)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="SParameterFile_8py_source.xhtml#l00068">SParameterFile.py:68</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1App_1_1SignalIntegrityAppHeadless_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1SignalIntegrityAppHeadless.xhtml">SignalIntegrity.App.SignalIntegrityAppHeadless</a></div><div class="ttdef"><b>Definition:</b> <a href="SignalIntegrityAppHeadless_8py_source.xhtml#l00001">SignalIntegrityAppHeadless.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml">SignalIntegrity.Lib.SParameters.SParameterFile.SParameterFile</a></div><div class="ttdoc">class for s-parameters read from a file</div><div class="ttdef"><b>Definition:</b> <a href="SParameterFile_8py_source.xhtml#l00038">SParameterFile.py:38</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile_xhtml_afc1ec91c8857a955b98393d04528f09c"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#afc1ec91c8857a955b98393d04528f09c">SignalIntegrity.Lib.SParameters.SParameterFile.SParameterFile.sort_frequencies</a></div><div class="ttdeci">bool sort_frequencies</div><div class="ttdef"><b>Definition:</b> <a href="SParameterFile_8py_source.xhtml#l00039">SParameterFile.py:39</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation_xhtml_a979f42e9c8bf72ce90999a24da8a839d"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a979f42e9c8bf72ce90999a24da8a839d">SignalIntegrity.Lib.SParameters.SParameterManipulation.SParameterManipulation.PortReorder</a></div><div class="ttdeci">def PortReorder(self, pr)</div><div class="ttdoc">Reorders the ports to port ordering of the port numbers supplied.</div><div class="ttdef"><b>Definition:</b> <a href="SParameterManipulation_8py_source.xhtml#l00147">SParameterManipulation.py:147</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile_xhtml_a9034893a926dcf9c73e64fdf3fea83aa"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a9034893a926dcf9c73e64fdf3fea83aa">SignalIntegrity.Lib.SParameters.SParameterFile.SParameterFile.m_Z0</a></div><div class="ttdeci">m_Z0</div><div class="ttdef"><b>Definition:</b> <a href="SParameterFile_8py_source.xhtml#l00070">SParameterFile.py:70</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile_xhtml_a5507545e3851673c2e9587c3e05a1ca6"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a5507545e3851673c2e9587c3e05a1ca6">SignalIntegrity.Lib.SParameters.SParameterFile.SParameterFile.m_P</a></div><div class="ttdeci">m_P</div><div class="ttdef"><b>Definition:</b> <a href="SParameterFile_8py_source.xhtml#l00092">SParameterFile.py:92</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1FrequencyList_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1FrequencyList.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyList.FrequencyList</a></div><div class="ttdoc">Frequency lists.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyList_8py_source.xhtml#l00032">FrequencyList.py:32</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile_xhtml_a40a26fb5046a51e40dd1b61c78d72ace"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#a40a26fb5046a51e40dd1b61c78d72ace">SignalIntegrity.Lib.SParameters.SParameterFile.SParameterFile.m_f</a></div><div class="ttdeci">m_f</div><div class="ttdef"><b>Definition:</b> <a href="SParameterFile_8py_source.xhtml#l00102">SParameterFile.py:102</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1GenericFrequencyList_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1FrequencyDomain_1_1FrequencyList_1_1GenericFrequencyList.xhtml">SignalIntegrity.Lib.FrequencyDomain.FrequencyList.GenericFrequencyList</a></div><div class="ttdoc">A generic list of frequencies assumed to be not evenly spaced.</div><div class="ttdef"><b>Definition:</b> <a href="FrequencyList_8py_source.xhtml#l00212">FrequencyList.py:212</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters.xhtml">SignalIntegrity.Lib.SParameters.SParameters.SParameters</a></div><div class="ttdoc">Class containing s-parameters.</div><div class="ttdef"><b>Definition:</b> <a href="SParameters_8py_source.xhtml#l00042">SParameters.py:42</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters_xhtml_a98bb8cca60faa48d8aa1b2b667c36037"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters.xhtml#a98bb8cca60faa48d8aa1b2b667c36037">SignalIntegrity.Lib.SParameters.SParameters.SParameters.SetReferenceImpedance</a></div><div class="ttdeci">def SetReferenceImpedance(self, Z0)</div><div class="ttdoc">Sets the reference impedance as specified.</div><div class="ttdef"><b>Definition:</b> <a href="SParameters_8py_source.xhtml#l00217">SParameters.py:217</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile_xhtml_ae8f626807b2dddc1872b3005556939cd"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#ae8f626807b2dddc1872b3005556939cd">SignalIntegrity.Lib.SParameters.SParameterFile.SParameterFile.header</a></div><div class="ttdeci">header</div><div class="ttdef"><b>Definition:</b> <a href="SParameterFile_8py_source.xhtml#l00105">SParameterFile.py:105</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Exception_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Exception.xhtml">SignalIntegrity.Lib.Exception</a></div><div class="ttdef"><b>Definition:</b> <a href="Exception_8py_source.xhtml#l00001">Exception.py:1</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Conversions_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Conversions.xhtml">SignalIntegrity.Lib.Conversions</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2Conversions_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile_xhtml_acbace14a4aba9862d9378427ff6831cb"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#acbace14a4aba9862d9378427ff6831cb">SignalIntegrity.Lib.SParameters.SParameterFile.SParameterFile.m_d</a></div><div class="ttdeci">m_d</div><div class="ttdef"><b>Definition:</b> <a href="SParameterFile_8py_source.xhtml#l00153">SParameterFile.py:153</a></div></div>
<div class="ttc" id="anamespaceSignalIntegrity_1_1Lib_1_1Encryption_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib_1_1Encryption.xhtml">SignalIntegrity.Lib.Encryption</a></div><div class="ttdef"><b>Definition:</b> <a href="Encryption_8py_source.xhtml#l00001">Encryption.py:1</a></div></div>
<div class="ttc" id="aclassSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile_xhtml_ad2180ffeeda41f431d75a271137bd5bc"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameterFile_1_1SParameterFile.xhtml#ad2180ffeeda41f431d75a271137bd5bc">SignalIntegrity.Lib.SParameters.SParameterFile.SParameterFile.m_sToken</a></div><div class="ttdeci">m_sToken</div><div class="ttdef"><b>Definition:</b> <a href="SParameterFile_8py_source.xhtml#l00069">SParameterFile.py:69</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
