<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/App/TikZ.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.1.10</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_970ef3fb0b92f0060bb9423c44cad0f7.xhtml">App</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">TikZ.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1App_1_1TikZ.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">TikZ.py</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2018 Teledyne LeCroy, Inc.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">import</span> math</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">class </span>TikZ(object):</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">def </span>__init__(self):</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        self.lineList=[]</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        self.lineList.append(<span class="stringliteral">&#39;\\centering\n&#39;</span>)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        self.lineList.append(<span class="stringliteral">&#39;\\begin{tikzpicture}[x=1.00mm, y=1.00mm, inner xsep=0pt, inner ysep=0pt, outer xsep=0pt, outer ysep=0pt]\n&#39;</span>)</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        self.scale=.25</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        self.textSize=<span class="keywordtype">None</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keyword">def </span>SetTextSize(self,textSize):</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        self.textSize=textSize</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">def </span>Format(self,num):</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;{0:0.3f}&quot;</span>.format(num).rstrip(<span class="stringliteral">&#39;0&#39;</span>).rstrip(<span class="stringliteral">&#39;.&#39;</span>)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">def </span>Finish(self):</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        self.lineList.append(<span class="stringliteral">&#39;\\end{tikzpicture}%\n&#39;</span>)</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">def </span>Document(self):</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        self.lineList=[<span class="stringliteral">&#39;\\documentclass[10pt]{article}\n\\usepackage{tikz}\n\\begin{document}\n&#39;</span>]+self.lineList</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        self.lineList.append(<span class="stringliteral">&#39;\\end{document}\n&#39;</span>)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">def </span>WriteToFile(self,fileName):</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keyword">with</span> open(fileName,<span class="stringliteral">&quot;w&quot;</span>) <span class="keyword">as</span> f:</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordflow">for</span> line <span class="keywordflow">in</span> self.lineList:</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                f.write(line)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">return</span> self</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">def </span>create_oval(self, *args, **kw):</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Create oval with coordinates x1,y1,x2,y2.&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        xi=float(args[0])*self.scale</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        yi=-float(args[1])*self.scale</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        xf=float(args[2])*self.scale</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        yf=-float(args[3])*self.scale</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        xm=(xi+xf)/2</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        ym=(yi+yf)/2</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        dx=xf-xi</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        dy=yf-yi</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        line=<span class="stringliteral">&#39;\\path[line width=0.30mm&#39;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;outline&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            line=line+<span class="stringliteral">&#39;, draw=&#39;</span>+kw[<span class="stringliteral">&#39;outline&#39;</span>]</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;fill&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            line=line+<span class="stringliteral">&#39;, fill=&#39;</span>+kw[<span class="stringliteral">&#39;fill&#39;</span>]</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        line=line+<span class="stringliteral">&#39;] (&#39;</span>+self.Format(xm)+<span class="stringliteral">&#39;,&#39;</span>+self.Format(ym)+<span class="stringliteral">&#39;) ellipse (&#39;</span>+self.Format(dx/2)+<span class="stringliteral">&#39;mm and &#39;</span>+self.Format(dy/2)+<span class="stringliteral">&#39;mm);\n&#39;</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        self.lineList.append(line)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">def </span>create_line(self, *args, **kw):</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        line=<span class="stringliteral">&#39;\\path[line width=&#39;</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;width&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            line=line+self.Format(float(kw[<span class="stringliteral">&#39;width&#39;</span>])*0.3)+<span class="stringliteral">&#39;mm&#39;</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            line=line+<span class="stringliteral">&#39;0.30mm&#39;</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;fill&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            line=line+<span class="stringliteral">&#39;, draw=&#39;</span>+kw[<span class="stringliteral">&#39;fill&#39;</span>]</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;arrow&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            arrowspec=kw[<span class="stringliteral">&#39;arrow&#39;</span>]</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">if</span> arrowspec==<span class="stringliteral">&#39;first&#39;</span>:</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                line=line+<span class="stringliteral">&#39;, &lt;-&#39;</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">elif</span> arrowspec==<span class="stringliteral">&#39;both&#39;</span>:</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                line=line+<span class="stringliteral">&#39;, &lt;-&gt;&#39;</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keywordflow">elif</span> arrowspec==<span class="stringliteral">&#39;last&#39;</span>:</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                line=line+<span class="stringliteral">&#39;, -&gt;&#39;</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        line=line+<span class="stringliteral">&#39;] &#39;</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">for</span> ci <span class="keywordflow">in</span> range(len(args)//2):</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            line=line+<span class="stringliteral">&#39;(&#39;</span>+self.Format(float(args[ci*2])*self.scale)+<span class="stringliteral">&#39;,&#39;</span>+self.Format(-1.*float(args[ci*2+1])*self.scale)+<span class="stringliteral">&#39;) -- &#39;</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        line=line[:-4]+<span class="stringliteral">&#39;;\n&#39;</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        self.lineList.append(line)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">def </span>create_text(self, *args, **kw):</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        line=<span class="stringliteral">&#39;\\draw&#39;</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;fill&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            line=line+<span class="stringliteral">&#39;[&#39;</span>+kw[<span class="stringliteral">&#39;fill&#39;</span>]+<span class="stringliteral">&#39;]&#39;</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        x=float(args[0])*self.scale</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        y=-1.*float(args[1]+4)*self.scale</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;anchor&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            alignString=<span class="stringliteral">&#39;halign=&#39;</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            alignment=<span class="stringliteral">&#39;base&#39;</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            anchorString=kw[<span class="stringliteral">&#39;anchor&#39;</span>]</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">if</span> <span class="stringliteral">&#39;n&#39;</span> <span class="keywordflow">in</span> anchorString:</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                alignment=<span class="stringliteral">&#39;north&#39;</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                alignment=<span class="stringliteral">&#39;base&#39;</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">if</span> <span class="stringliteral">&#39;s&#39;</span> <span class="keywordflow">in</span> anchorString:</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                y=y+2</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keywordflow">if</span> <span class="stringliteral">&#39;e&#39;</span> <span class="keywordflow">in</span> anchorString:</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                alignment=alignment+<span class="stringliteral">&#39; east&#39;</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">elif</span> <span class="stringliteral">&#39;w&#39;</span> <span class="keywordflow">in</span> anchorString:</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                alignment=alignment+<span class="stringliteral">&#39; west&#39;</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            alignString=<span class="stringliteral">&#39; node[anchor=&#39;</span>+alignment+<span class="stringliteral">&#39;]&#39;</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            alignString=<span class="stringliteral">&#39; node[anchor=base]&#39;</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        line=line+<span class="stringliteral">&#39; (&#39;</span>+self.Format(x)+<span class="stringliteral">&#39;,&#39;</span>+self.Format(y)+<span class="stringliteral">&#39;)&#39;</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        line=line+alignString</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        textToWrite=kw[<span class="stringliteral">&#39;text&#39;</span>]</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        inmath=<span class="keyword">False</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">if</span> len(textToWrite)&gt;1:</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">if</span> (textToWrite[0]==<span class="stringliteral">&#39;$&#39;</span> <span class="keywordflow">and</span> textToWrite[-1]==<span class="stringliteral">&#39;$&#39;</span>):</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                inmath=<span class="keyword">True</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> inmath:</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            textToWrite=textToWrite.replace(<span class="stringliteral">&#39;_&#39;</span>,<span class="stringliteral">&#39;\\textunderscore &#39;</span>)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="comment">#hack to deal with unicode sigma</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">if</span> textToWrite==<span class="stringliteral">u&quot;\u03C3&quot;</span>:</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            textToWrite=<span class="stringliteral">&#39;$\sigma$&#39;</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">if</span> self.textSize <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            line=line+<span class="stringliteral">&#39;{&#39;</span>+textToWrite+<span class="stringliteral">&#39;};\n&#39;</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            line=line+<span class="stringliteral">&#39;{\\&#39;</span>+self.textSize+<span class="stringliteral">&#39;{&#39;</span>+textToWrite+<span class="stringliteral">&#39;}};\n&#39;</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        self.lineList.append(line)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">def </span>create_polygon(self, *args, **kw):</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        line=<span class="stringliteral">&#39;\\path[line width=0.30mm&#39;</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;outline&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            line=line+<span class="stringliteral">&#39;, draw=&#39;</span>+kw[<span class="stringliteral">&#39;outline&#39;</span>]</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;fill&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">if</span> kw[<span class="stringliteral">&#39;fill&#39;</span>] != <span class="stringliteral">&#39;&#39;</span>:</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                line=line+<span class="stringliteral">&#39;, fill=&#39;</span>+kw[<span class="stringliteral">&#39;fill&#39;</span>]</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        line=line+<span class="stringliteral">&#39;] &#39;</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">for</span> ci <span class="keywordflow">in</span> range(len(args)//2):</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            line=line+<span class="stringliteral">&#39;(&#39;</span>+self.Format(float(args[ci*2])*self.scale)+<span class="stringliteral">&#39;,&#39;</span>+self.Format(-1.*float(args[ci*2+1])*self.scale)+<span class="stringliteral">&#39;) -- &#39;</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        line=line+<span class="stringliteral">&#39;cycle;\n&#39;</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        self.lineList.append(line)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">def </span>create_rectangle(self, *args, **kw):</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        line=<span class="stringliteral">&#39;\\path[line width=0.30mm&#39;</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;outline&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            line=line+<span class="stringliteral">&#39;, draw=&#39;</span>+kw[<span class="stringliteral">&#39;outline&#39;</span>]</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&#39;fill&#39;</span> <span class="keywordflow">in</span> kw:</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordflow">if</span> kw[<span class="stringliteral">&#39;fill&#39;</span>] != <span class="stringliteral">&#39;&#39;</span>:</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                line=line+<span class="stringliteral">&#39;, fill=&#39;</span>+kw[<span class="stringliteral">&#39;fill&#39;</span>]</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        line=line+<span class="stringliteral">&#39;] &#39;</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        xi=float(args[0])*self.scale</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        yi=-float(args[1])*self.scale</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        xf=float(args[2])*self.scale</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        yf=-float(args[3])*self.scale</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        (xi,xf)=(min(xi,xf),max(xi,xf))</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        (yi,yf)=(min(yi,yf),max(yi,yf))</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        x=xi</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        y=yi</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        w=xf-xi</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        h=yf-yi</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        line=line+<span class="stringliteral">&#39;(&#39;</span>+self.Format(x)+<span class="stringliteral">&#39;,&#39;</span>+self.Format(y)+<span class="stringliteral">&#39;)&#39;</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        line=line+<span class="stringliteral">&#39; rectangle +(&#39;</span>+self.Format(w)+<span class="stringliteral">&#39;,&#39;</span>+self.Format(h)+<span class="stringliteral">&#39;);\n&#39;</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        self.lineList.append(line)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">def </span>create_arc(self, *args, **kw):</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        xi=float(args[0])</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        yi=float(args[1])</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        xf=float(args[2])</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        yf=float(args[3])</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        theta0=float(kw[<span class="stringliteral">&#39;start&#39;</span>])</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">if</span> theta0==90. <span class="keywordflow">or</span> theta0==270.:</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            theta0=(theta0+180.)%360.</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        thetaExtent=-float(kw[<span class="stringliteral">&#39;extent&#39;</span>])</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        color=kw[<span class="stringliteral">&#39;outline&#39;</span>]</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        xc=(xi+xf)/2.</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        yc=(yi+yf)/2.</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        wt=xf-xi</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        ht=yf-yi</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        w=max(wt,ht)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        h=min(wt,ht)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        w=abs(wt)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        h=abs(ht)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        steps=int(math.ceil(abs(thetaExtent)/2.))</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        coord=[]</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(steps+1):</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            theta=(theta0+n*thetaExtent/steps)*math.pi/180.</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            c=math.cos(theta)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            s=math.sin(theta)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            r=1./2.*math.sqrt(w*w+c*c*h*h-c*c*w*w)*w*h/(c*c*w*w-w*w-c*c*h*h)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            x=-r*c+xc</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            y=-r*s+yc</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            coord.append(x)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            coord.append(y)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        self.create_line(*(tuple(coord)),fill=color)</div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
